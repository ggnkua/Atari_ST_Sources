' *****************************************
' * GFA Linkfile v2.2 ½MUG U.K¿ 1994-1995 *
' *****************************************
'
$m20960
'
' Example loading routine #3
'
' This example gives you the best of both worlds !  If the computer has enough
' memory, the entire link_file is loaded into memory, else the files are loaded
' from the link file as per Example 1.
'
init_link
check_ram
'
' Now access the linkfile depending on state of 'link_in_ram' boolean
'
DIM inp_file%(9000 DIV 4)      ! Dummy variable for input file
test%=V:inp_file%(0)           ! Assign it
get_file(1,test%)              ! Get file (No. #1) from linkfile
'
PRINT CHAR{test%}              ! Print the characters viewable
~INP(2)
~MFREE(linkfile%)
EDIT
'
> PROCEDURE check_ram
  CLS
  linkfile%=MALLOC(link_length%) ! Assign memory to hold link-file
  IF linkfile%=0
    PRINT "NOT ENOUGH RAM TO LOAD LINKFILE INTO RAM!"
    link_in_ram!=FALSE
  ELSE
    PRINT "ENOUGH RAM - LOADING LINKFILE INTO RAM!"
    link_in_ram!=TRUE         ! Enough RAM, so force loading from disk
    BLOAD link_name$,linkfile%  ! Load it ALL in to memory
  ENDIF
RETURN
'
> PROCEDURE get_file(file|,VAR addr%)
  IF link_in_ram!=TRUE
    '
    ' * Grab file directly from memory *
    '
    BMOVE linkfile%+offset%(file|),addr%,file_lens%(file|)
    '
  ELSE
    '
    ' *  Grab file from link file *
    '
    OPEN "U",#1,link_name$
    SEEK #1,offset%(file|)
    BGET #1,addr%,file_lens%(file|)
    CLOSE #1
    '
  ENDIF
RETURN
'
' Insert the source code generated by GFA_LINK here
'
