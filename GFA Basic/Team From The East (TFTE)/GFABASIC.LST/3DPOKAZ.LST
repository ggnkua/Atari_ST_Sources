' The Voice nr 2 by Team From The East
' Przykladowy program wykorzystujacy procedury 3DROUTINE
'
' PROGRAM ZOSTAJE PRZYSPIESZONY PO KOMPILACJI.
'
' przypominam, ze procedury rozwija sie klawiszem HELP
' Wyjscie z programu lewy klawisz myszy i Return
'
CLEAR
DIM buf(32000/4)
buffor=VARPTR(buf(0))+255 AND &HFFFF00
adrfiz=XBIOS(2)
adrlog=XBIOS(3)
log1=adrlog
fiz1=adrfiz
rad=3.14/180 ! zmienna do przeliczen
HIDEM
FOR i=0 TO 2372738
  IF MOUSEK=1
    END
  ENDIF
  rotatey(-10,10,-10,i)
  a1=INT(xekr)
  b1=INT(yekr)
  rotatey(10,10,-10,i)
  c1=INT(xekr)
  d1=INT(yekr)
  rotatey(-10,-10,-10,i)
  e1=INT(xekr)
  f1=INT(yekr)
  rotatey(10,-10,-10,i)
  o1=xekr
  p1=yekr
  DRAW a1,b1 TO c1,d1 TO e1,f1 TO o1,p1 TO a1,b1
  rotatey1(-10,10,-10,i)
  a=INT(xekr)
  b=INT(yekr)
  rotatey1(10,10,-10,i)
  c=INT(xekr)
  d=INT(yekr)
  rotatey1(-10,-10,-10,i)
  e=INT(xekr)
  f=INT(yekr)
  rotatey1(0,1,1,i)
  k=xekr
  l=yekr
  rotatey1(10,-10,-10,i)
  o=xekr
  p=yekr
  DRAW a,b TO c,d TO e,f TO o,p TO a,b
  DRAW a,b TO a1,b1
  DRAW c,d TO c1,d1
  DRAW e,f TO e1,f1
  DRAW o,p TO o1,p1
  switch
NEXT i
SHOWM
'
'
' procedury obrotu punktu o wsp. x,y,z o katy alfa-os x,beta-y,gamma-z
'
'
'
> PROCEDURE rotatex(x,y,z,alfa) ! WOKOL X
  LOCAL x1,y1,z1
  ' obrot wokol osi x
  x1=x
  y1=COSQ(alfa)*y-SINQ(alfa)*z
  z1=SINQ(alfa)*y+COSQ(alfa)*z
  x=y1
  z=z1
  setpoint(x,y,z,1,1,1,5,10)
RETURN
> PROCEDURE rotatey(x,y,z,beta) ! WOKOL Y
  LOCAL x1,y1,z1
  ' obrot wokol osi y
  x1=COSQ(beta)*x-SINQ(beta)*z
  y1=y
  z1=SINQ(beta)*x+COSQ(beta)*z
  x=x1
  z=z1
  setpoint(x,y,z,1,1,1,3,15)
RETURN
> PROCEDURE rotatey1(x,y,z,beta)
  LOCAL x1,y1,z1
  ' obrot wokol osi y
  x1=COSQ(beta)*x-SINQ(beta)*z
  y1=y
  z1=SINQ(beta)*x+COSQ(beta)*z
  x=x1
  z=z1
  setpoint(x,y,z,1,1,1,3,7)
RETURN
> PROCEDURE rotatez(x,y,z,gamma) ! WOKOL Z
  LOCAL x1,y1,z1
  ' obrot wokol osi z
  x1=COSQ(gamma)*x-SINQ(gamma)*y
  y1=SINQ(gamma)*x+COSQ(gamma)*y
  z1=z
  x=x1
  y=y1
  setpoint(x,y,z,16,1,1,5,1)
RETURN
'
'
'
' procedura przeksztalca punkt na wsp ekranowe
' x,y,z-wsp 3d ; vx,vy,vz-przesuniecia obiektu ; k-powiekszenie ; d odleglosc observatora
' wyjscie - xekr,yekr-wspl ekranowe punktu
'
'
> PROCEDURE setpoint(x,y,z,vx,vy,vz,k,d)
  LOCAL x1,y1,z1
  x1=x+vx
  y1=y+vy
  z1=z+vz
  x=-x1/y1*d ! -x1/+x1 - kierunki obrotu obiektu
  y=z1/y1*d
  xekr=k*x+300 ! dla niskiej rozdzielczosci
  yekr=k*y+90 ! dla niskiej rozdzielczosci
RETURN
> PROCEDURE switch ! procedura zmiany ekranu z log na fiz
  IF fiz1=buffor
    switch1
  ELSE
    switch2
  ENDIF
RETURN
> PROCEDURE switch1
  fiz1=adrfiz
  log1=buffor
  x=XBIOS(5,L:log1,L:fiz1,1)
RETURN
> PROCEDURE switch2
  fiz1=buffor
  log1=adrlog
  x=XBIOS(5,L:log1,L:fiz1,1)
RETURN
