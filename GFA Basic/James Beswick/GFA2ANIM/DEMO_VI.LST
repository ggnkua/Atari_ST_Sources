'        The GFA Demo! Part 3 - Main Part - (C) ST Format 1991.
'                      Written by James Beswick.
'
' ** VERSION 1.7 **
'
' The routine that was on the coverdisk last month has now been incorporated
' into the demo. You should start to see everything slowing down now, but it
' will speed up when it's compiled...
'
@Init
'
' ** THE DEMO CONTROL ROUTINE **
'
Setcolor 11,6             ! Now set all the colours! Colour 11...
Setcolor 12,5             ! Colour 12...
Setcolor 13,4             ! Colour 13 set...
Setcolor 14,3             ! Colour 14 set...
Clr Tog11,Tog12,Tog13,Tog14     ! Toggle variables are needed here.
Deftext 1,0,0,6
Repeat                          ! Repeat the idented segment until key press.
  Sput Sc$
  @Sphere_cal
  @Gfa_anim
  Print At(1,24);Left$(S$,39)        ! Display scroller.
  S$=Right$(S$,Len(S$)-1)+Left$(S$,1) ! Calculate scrolling position - complex!
  Put Xval(S_count),Yval(S_count),Sphere_mask$,4
  Put Xval(S_count),Yval(S_count),Sphere$,6
  Swap Aa%,Ab%
  Void Xbios(5,L:Aa%,L:Ab%,-1)
Until Inkey$<>""                ! Exit when a key is pressed...
'
Setcolor 0,1911                 ! Set the colours again for the editor, or we
Setcolor 15,0                   ! won't be able to see what we're doing!
Edit                            ! Return straight back to the editor.
'
'
' ** Long routines are pushed into procedures and put at the end **
'
Procedure Gfa_anim
  For T=0 To 9
    Mx(T)=Mx(T+1)
    My(T)=My(T+1)
  Next T
  Mx(10)=Mousex
  My(10)=Mousey
  Put Mx(10),My(10),G_spr$,4
  Put Mx(10),My(10),G_spr$,6
  Put Mx(5),My(5),F_spr$,4
  Put Mx(5),My(5),F_spr$,6
  Put Mx(0),My(0),A_spr$,4
  Put Mx(0),My(0),A_spr$,6
Return
'
Procedure Get_sprites           ! This routine GET's (some of) the sprites.
  Get 97,1,111,15,Sphere$
  Get 113,1,127,15,Sphere_mask$
  Get 129,1,137,10,G_spr$
  Get 139,1,144,10,F_spr$
  Get 146,1,154,10,A_spr$
  Get 0,104,319,179,Gfa_demo_logo$
  Get 0,181,319,189,Bar1$
  Get 0,191,319,199,Bar2$
  Get 160,16,199,51,Stf$
Return
'
Procedure Sphere_cal
  If S_tog=0
    Add S_count,1
  Else
    Sub S_count,1
  Endif
  If S_count=62
    S_tog=1
  Endif
  If S_count=0
    S_tog=0
  Endif
Return
'
Procedure Init
  ' ** INITIALISATION PART (GET THE SPRITES, SET THE MOUSE, ETC.) **
  '
  Dim Mx(10),My(10)               ! These are for the G.F.A. animation...
  Dim Screen%(32255/4),Xval(62),Yval(62)       ! These four lines are the basis
  Aa%=Xbios(3)                                 ! for the non-flicker routine
  Ab%=(Varptr(Screen%(0))+255) And &HFFFF00    ! to smooth out the animation...
  Physadr%=Xbios(3)
  '
  For Count=0 To 10               ! Make sure that the start of the GFA
    Mx(Count)=-10                 ! animation is not visible at the start.
  Next Count
  '
  For Count=0 To 62               ! Read in the positions for the sphere...
    Read Xval(Count),Yval(Count)
  Next Count
  '
  S$=Space$(50)+"ST Format proudly present the GFA Demo! This small demonstration shows off what is indeed the best implementation of Basic on any microcomputer. This was written with the earliest version of GFA Basic, version 2, "
  S$=S$+"which was given away FREE with the February (nineteenth) issue of ST Format. This program has been slowly built up over a number of issues, and finally, here it is!       "
  '
  Hidem                           ! Hide the mouse.
  Spoke &H484,Peek(&H484) And 2   ! Key click off. Another weird instruction!
  Cls                             ! CLear the Screen.
  '
  Bload "gfademo.pi1",Xbios(3)-34
  Void Xbios(6,L:Xbios(3)-32)     ! These 2 lines load the demo screen.
  Void Inp(2)
  '
  @Get_sprites                    ! Go directly to the procedure with this name.
  '                               ! The procedure, once executed, returns here.
  Cls                             ! Clear the screen.
  For Col=11 To 14                ! Loop the idented line three times, whilst
    Setcolor Col,0                ! incrementing COL by 1 from 11, until it
  Next Col                        ! reaches 14. This clears the logo colours.
  Put 0,0,Gfa_demo_logo$          ! Place the logo at the top of the screen and
  Put 0,175,Bar2$                 ! Place two metallic bar sprites at these
  Put 0,192,Bar2$                 ! positions...
  Sget Sc$                        ! Now get the entire screen in SC$.
Return
'
' ** 63 Data Lines Follow ** These are the sphere's positions **
'
Data 3,60
Data 5,58
Data 7,55
Data 10,51
Data 14,47
Data 18,42
Data 22,40
Data 27,40
Data 34,44
Data 37,47
Data 42,53
Data 45,57
Data 47,59
Data 47,60
Data 50,58
Data 56,51
Data 66,45
Data 75,42
Data 83,42
Data 89,46
Data 95,54
Data 97,57
Data 98,60
Data 102,55
Data 107,48
Data 116,44
Data 125,40
Data 129,41
Data 138,46
Data 145,54
Data 146,55
Data 148,59
Data 153,52
Data 160,46
Data 164,43
Data 172,41
Data 177,40
Data 185,42
Data 189,47
Data 192,52
Data 192,57
Data 193,52
Data 195,50
Data 198,44
Data 203,42
Data 207,41
Data 214,39
Data 222,40
Data 228,47
Data 234,53
Data 234,58
Data 235,54
Data 235,52
Data 236,48
Data 239,44
Data 244,39
Data 249,38
Data 258,38
Data 263,40
Data 266,45
Data 272,51
Data 272,52
Data 274,57
