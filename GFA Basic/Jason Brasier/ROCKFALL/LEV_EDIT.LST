' Rockfall Level Editor (version 2)
' (c)1992 SOS Software
' Written by Jason Brasier, S.O.S.
'
On Break Gosub A
@Init
Repeat
  Repeat
    @Menu
    On Opt% Gosub The_end,Load_levels,Create_new,Edit_level,Sort_levels,Save_levels
  Until Opt%=1
Until Z%=1
Quit
'
Procedure The_end
  Alert 2,"Do you really|want to quit?",2," Yes |Not yet",Z%
Return
'
Procedure Menu
  Cls
  Print Fn Cen$("ROCKFALL LEVEL EDITOR");
  Print At(1,6);Fn Cen$("Main Menu");
  Print At(1,25);Fn Cen$("Select required option");
  Print At(1,9);Fn Cen$("L ............ Load levels");
  Print At(1,11);Fn Cen$("C ....... Create new level");
  Print At(1,13);Fn Cen$("E ............. Edit level");
  Print At(1,15);Fn Cen$("O ............ Sort levels");
  Print At(1,17);Fn Cen$("S ............ Save levels");
  Print At(1,19);Fn Cen$("Q ...... Quit level editor");
  Repeat
    Opt%=Instr("QLCEOS",Upper$(Input$(1)))
  Until Opt%>0
Return
'
Procedure Create_new
  @New_level
  If Z%=0
    @Amend_level
  Endif
Return
'
Procedure Edit_level
  If No_lev%>-1
    Repeat
      Cls
      Print At(1,10);Fn Cen$("Enter level no. (upto "+Str$(No_lev%)+") :");At(20,12);
      @Input(20,12,2,"0123456789","")
      If Inp$>""
        Level%=Val(Inp$)
      Else
        Level%=255
      Endif
    Until Level%<=No_lev%
    @Get_level(Level%)
    @Amend_level
  Else
    Alert 1,"No levels|in memory!",1,"Oops!",Z%
  Endif
Return
'
Procedure Save_levels
  If No_lev%>-1
    Cls
    If Exist(File$)
      Alert 1,"File already exists!|Overwrite?",2,"  OK  |Cancel",Zz%
      If Zz%=2
        Goto Sv_exit
      Endif
    Endif
    Print At(1,8);Fn Cen$("Saving levels...");At(1,12);Fn Cen$(File$)
    Dpoke Lev_data%,No_lev%
    Bsave File$,Lev_data%,(2+240*(No_lev%+1))
    Open "o",#1,Dfil$
    For I%=0 To No_lev%
      Print #1,Str$(Dif%(I%))
    Next I%
    Close #1
  Else
    Alert 1,"No levels|in memory!",1,"Oops!",Z%
  Endif
  Sv_exit:
Return
'
Procedure Load_levels
  Oldfile$=File$
  Cls
  Print Fn Cen$("Load levels");At(1,25);Fn Cen$("Select file");
  Fileselect Path$,F$,File$
  If File$>""
    P%=Len(File$)+1
    Repeat
      Dec P%
    Until Mid$(File$,P%,1)="\"
    If P%=Len(File$)
      Path$=File$+"*.LEV"
      File$=File$+F$
    Else
      Path$=Left$(File$,P%)+"*.LEV"
      F$=Mid$(File$,P%+1)
      D%=Instr(F$,".")
      If D%>0
        F$=Left$(F$,D%)+"LEV"
        File$=Left$(File$,P%)+F$
      Else
        F$=F$+".LEV"
        File$=File$+".LEV"
      Endif
    Endif
    Dfil$=Left$(File$,P%)+Left$(F$,Len(F$)-3)+"DIF"
    If Exist(File$)
      Cls
      Print At(1,10);Fn Cen$("Loading "+F$);
      @Ld_levels
    Else
      Cls
      Print At(1,12);Fn Cen$("File set to:");At(1,14);Fn Cen$(File$);
      Pause 150
    Endif
  Else
    File$=Oldfile$
  Endif
Return
'
Procedure Sort_levels
  Local Done%
  If No_lev%=-1
    Alert 1,"No levels|in memory!",1,"Oops!",Z%
  Else
    Cls
    If Exist(File$)
      Alert 1,"File already exists!|Overwrite?",2,"  OK  |Cancel",Zz%
      If Zz%=2
        Goto St_exit
      Endif
    Endif
    Print At(1,8);Fn Cen$("Sorting levels");At(1,12);Fn Cen$(File$);
    Open "o",#1,File$
    Open "o",#2,Dfil$
    Dpoke Lev_data%,No_lev%
    Bput #1,Lev_data%,2
    Done%=-1
    For I%=0 To 99
      For L%=0 To No_lev%
        If Dif%(L%)=I%
          Bput #1,(Lev_data%+2+240*L%),240
          Print #2,Str$(Dif%(L%))
          Inc Done%
          Print At(1,14);Fn Cen$(" "+Str$(No_lev%-Done%)+" levels to go... ");
        Endif
      Next L%
    Next I%
    Close #1
    Close #2
    Cls
    Print At(1,10);Fn Cen$("Reloading "+F$);
    @Ld_levels
  Endif
  St_exit:
Return
'
Procedure Select_sprite
  Sget Scr$
  Cls
  Print At(1,1);Fn Cen$("ROCKFALL SPRITE SCREEN");
  Print At(1,25);Fn Cen$("Left selects, Right cancels");
  For I%=0 To 24
    X%=80+32*(I% Mod 5)+8
    Y%=20+32*(I% Div 5)+8
    Box X%-2,Y%-2,X%+17,Y%+17
    Put X%,Y%,Spr$(Spr%(I%))
  Next I%
  Repeat
    Mouse Mx%,My%,Mb%
  Until ((Mx%>79 And Mx%<240) And (My%>19 And My%<180) And Mb%=1) Or Mb%=2
  If Mb%=1
    X%=(Mx%-80) Div 32
    Y%=(My%-20) Div 32
    Sprite%=Y%*5+X%
  Endif
  Repeat
  Until Mousek=0
  Sput Scr$
  T$="Sprite: "+Sname$(Sprite%)
  Print At(10,1);Spc(30);At(41-Len(T$),1);T$;
Return
'
Procedure New_level
  Arrayfill Lev%(),0
  Z%=0
  If No_lev%<47
    Inc No_lev%
    Level%=No_lev%
    @Level_init
  Else
    Alert 1,"Maximum limit|reached!",1,"Sorry!",Z%
  Endif
Return
'
Procedure Get_level(L%)
  For Y%=0 To 11
    For X%=0 To 19
      Lev%(X%,Y%)=Peek(2+Lev_data%+L%*240+20*Y%+X%)
    Next X%
  Next Y%
  Level%=L%
  @Level_init
Return
'
Procedure Store_level
  For Y%=0 To 11
    For X%=0 To 19
      Poke (2+Lev_data%+Level%*240+Y%*20+X%),Lev%(X%,Y%)
    Next X%
  Next Y%
Return
'
Procedure Level_init
  Exit%=0
  Start%=0
  No_pulsators%=0
  No_traps%=0
  No_safes%=0
  No_keys%=0
  No_eggs%=0
  No_boulders%=0
  For Y%=0 To 11
    For X%=0 To 19
      S%=Lev%(X%,Y%)
      If S%=2
        Inc No_boulders%
      Else
        If S%=18
          Inc No_eggs%
        Else
          If S%=20
            Inc No_safes%
          Else
            If S%=21
              Inc No_keys%
            Else
              If S%=22
                Inc No_traps%
              Else
                If S%=23
                  Inc Exit%
                Else
                  If S%=28
                    Inc No_pulsators%
                  Else
                    If S%=40
                      Inc Start%
                    Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Next X%
  Next Y%
Return
'
Procedure Show_level
  Cls
  For Y%=0 To 11
    For X%=0 To 19
      Put X%*16,8+Y%*16,Spr$(Lev%(X%,Y%))
    Next X%
  Next Y%
  Print At(1,1);"Level ";Left$(Str$(Level%)+" ",2);
  T$="Sprite: "+Sname$(Sprite%)
  Print At(41-Len(T$),1);T$;
Return
'
Procedure Amend_level
  Repeat
    @Show_level
    Repeat
      Repeat
        Mouse Mx%,My%,Mb%
        Q%=(Upper$(Inkey$)="Q")
      Until (Mb%>0 And My%>7) Or Q%
      If Not Q%
        If Mb%=2
          @Select_sprite
        Else
          X%=Mx% Div 16
          Y%=(My%-8) Div 16
          Put X%*16,Y%*16+8,Spr$(Spr%(Sprite%))
          Lev%(X%,Y%)=Spr%(Sprite%)
        Endif
      Endif
    Until Q%
    @Test_level
  Until Check%
  @Store_level
Return
'
Procedure Test_level
  Cls
  Print At(1,1);Fn Cen$("Checking Level");
  @Level_init
  Y%=8
  If Start%<>1
    If Start%=0
      Print At(1,Y%);Fn Cen$("You need a starting point");
    Else
      Print At(1,Y%);Fn Cen$("Too many starting points");
    Endif
    Inc Y%
  Endif
  If Exit%<>1
    If Exit%=0
      Print At(1,Y%);Fn Cen$("You need an exit");
    Else
      Print At(1,Y%);Fn Cen$("Too many exits");
    Endif
    Inc Y%
  Endif
  Z%=0
  For I%=0 To 19
    If Lev%(I%,11)=18
      Inc Z%
    Endif
  Next I%
  If Z%>0
    Print At(1,Y%);Fn Cen$("Eggs at bottom of level");
    Inc Y%
  Endif
  If No_eggs%>4
    Print At(1,Y%);Fn Cen$("Too many eggs");
    Inc Y%
  Else
    If No_eggs%>0 And No_boulders%=0 And Z%<No_eggs%
      Print At(1,Y%);Fn Cen$("You need some boulders");
      Inc Y%
    Endif
  Endif
  If No_pulsators%>4
    Print At(1,Y%);Fn Cen$("Too many pulsators");
    Inc Y%
  Else
    If No_traps%<No_pulsators%
      Print At(1,Y%);Fn Cen$("Not enough traps");
      Inc Y%
    Endif
  Endif
  If No_safes%>0 And No_keys%=0
    Print At(1,Y%);Fn Cen$("No key to open safes");
    Inc Y%
  Endif
  If Y%>8
    Check%=False
    Print At(1,24);Fn Cen$("Press space to edit");
    Repeat
    Until Inkey$=" "
  Else
    Check%=True
    Print At(1,20);Fn Cen$("Enter difficulty factor (0-99) :");
    Repeat
      @Input(20,22,2,"0123456789",Str$(Dif%(Level%)))
      If Inp$>""
        Dif%(Level%)=Val(Inp$)
      Endif
    Until Inp$>""
  Endif
Return
'
Deffn Cen$(T$)=Space$(20-Len(T$) Div 2)+T$
'
Procedure Init
  Dim Lev%(19,11),Spr%(24),Spr$(40),Sname$(24),Dif%(47)
  Lev$=Space$(11522)
  Lev_data%=Varptr(Lev$)
  @Get_sprites
  Sprite%=1
  Path$="A:\*.LEV"
  F$="ROCKFALL.LEV"
  File$="A:\ROCKFALL.LEV"
  Dfil$="A:\ROCKFALL.DIF"
  No_lev%=-1
Return
'
Procedure Ld_levels
  Bload File$,Lev_data%
  No_lev%=Dpeek(Lev_data%)
  Open "i",#1,Dfil$
  For I%=0 To No_lev%
    Input #1,Z$
    Dif%(I%)=Val(Z$)
  Next I%
  Close #1
Return
'
Procedure Get_sprites
  Scr%=Xbios(2)
  Spr$=Space$(32066)
  Spr%=Varptr(Spr$)
  Bload "sprites.pi1",Spr%
  Void Xbios(6,L:Spr%+2)
  Bmove Spr%+34,Scr%,32000
  Restore Sprites
  For I%=0 To 24
    Read S%,Sname$(I%)
    Spr%(I%)=S%
    X%=8+32*(S% Mod 10)
    Y%=8+32*(S% Div 10)
    Get X%,Y%,X%+15,Y%+15,Spr$(S%)
  Next I%
Return
'
Sprites:
Data 0,"Space",1,"Diamond",2,"Boulder",3,"Wall #1 (Mid)",4,"Wall #1 (Top Rt)"
Data 5,"Wall #1 (Bot Rt)",6,"Wall #1 (Bot Lt)",7,"Wall #1 (Top Lt)"
Data 8,"Wall #2 (Mid)",9,"Wall #2 (Top Rt)",10,"Wall #2 (Bot Rt)"
Data 11,"Wall #2 (Bot Lt)",12,"Wall #2 (Top Lt)",13,"Wall #2 (Top)"
Data 14,"Wall #2 (Right)",15,"Wall #2 (Bottom)",16,"Wall #2 (Left)"
Data 17,"Earth",18,"Egg",20,"Safe",21,"Key",22,"Trap",23,"Exit"
Data 28,"Pulsator",40,"Starting Position"
'
Procedure A
  Setcolor 0,5,5,5
  Edit
Return
'
Procedure Input(Tx%,Ty%,L%,V$,I$)
  Local C%,K%,K$,P%,T$,Inv$,Nor$
  Inp$=I$
  C%=Len(I$)+1
  Inv$=Chr$(27)+"p"
  Nor$=Chr$(27)+"q"
  Repeat
    Repeat
      T$=Left$(Inp$+String$(L%,"-"),L%)
      Print At(Tx%,Ty%);T$;At(Tx%+C%-1,Ty%);Inv$;Mid$(T$,C%,1);Nor$;
      K%=Inp(2)
      Kloop:
      K$=Chr$(K%)
      P%=Instr(V$,K$)
      If P%=0 And K$>="a" And K$<="z"
        K%=Asc(K$)-32
        Goto Kloop
      Endif
      If K%=203 And C%>1
        Dec C%
      Else
        If K%=205 And C%<=Len(Inp$)
          Inc C%
        Endif
      Endif
    Until P%>0 Or K%=13 Or K%=8 Or K%=127
    If P%>0 And Len(Inp$)<L%
      Inp$=Left$(Inp$,C%-1)+K$+Mid$(Inp$,C%)
      Inc C%
    Else
      If K%=8 And C%>1
        Inp$=Left$(Inp$,C%-2)+Mid$(Inp$,C%)
        Dec C%
      Else
        If K%=127 And C%<=Len(Inp$)
          Inp$=Left$(Inp$,C%-1)+Mid$(Inp$,C%+1)
        Endif
      Endif
    Endif
  Until K%=13
  Print At(Tx%,Ty%);Inp$;
Return
