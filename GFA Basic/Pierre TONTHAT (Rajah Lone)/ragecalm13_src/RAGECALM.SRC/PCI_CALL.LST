'
' GFA implementation of PCI BIOS function
' by Lonny Pursell & Pierre TONTHAT
' Carefull : some calls weren't (couldn't be) tested
'
> FUNCTION pci_bios_init
LOCAL pci_cookie_value%
'
DIM pci_rcall%(16)
pci_enabled!=FALSE
'
IF @pci_get_cookie(pci_cookie_value%)
  SELECT INT{ADD(pci_cookie_value%,4)}
  CASE 0
    RETURN &HFFFFF001
  CASE 1
    '
    pci_enabled!=TRUE
    '
    pci_find_pci_device%=LONG{ADD(pci_cookie_value%,8)}
    pci_find_pci_classcode%=LONG{ADD(pci_cookie_value%,12)}
    '
    pci_read_config_byte%=LONG{ADD(pci_cookie_value%,16)}
    pci_read_config_word%=LONG{ADD(pci_cookie_value%,20)}
    pci_read_config_longword%=LONG{ADD(pci_cookie_value%,24)}
    pci_fast_read_config_byte%=LONG{ADD(pci_cookie_value%,28)}
    pci_fast_read_config_word%=LONG{ADD(pci_cookie_value%,32)}
    pci_fast_read_config_longword%=LONG{ADD(pci_cookie_value%,36)}
    pci_write_config_byte%=LONG{ADD(pci_cookie_value%,40)}
    pci_write_config_word%=LONG{ADD(pci_cookie_value%,44)}
    pci_write_config_longword%=LONG{ADD(pci_cookie_value%,48)}
    '
    pci_hook_interrupt%=LONG{ADD(pci_cookie_value%,52)}
    pci_unhook_interrupt%=LONG{ADD(pci_cookie_value%,56)}
    pci_special_cycle%=LONG{ADD(pci_cookie_value%,60)}
    pci_get_routing%=LONG{ADD(pci_cookie_value%,64)}
    pci_set_interrupt%=LONG{ADD(pci_cookie_value%,68)}
    pci_get_ressource%=LONG{ADD(pci_cookie_value%,72)}
    pci_get_card_used%=LONG{ADD(pci_cookie_value%,76)}
    pci_set_card_used%=LONG{ADD(pci_cookie_value%,80)}
    '
    pci_read_mem_byte%=LONG{ADD(pci_cookie_value%,84)}
    pci_read_mem_word%=LONG{ADD(pci_cookie_value%,88)}
    pci_read_mem_longword%=LONG{ADD(pci_cookie_value%,92)}
    pci_fast_read_mem_byte%=LONG{ADD(pci_cookie_value%,96)}
    pci_fast_read_mem_word%=LONG{ADD(pci_cookie_value%,100)}
    pci_fast_read_mem_longword%=LONG{ADD(pci_cookie_value%,104)}
    pci_write_mem_byte%=LONG{ADD(pci_cookie_value%,108)}
    pci_write_mem_word%=LONG{ADD(pci_cookie_value%,112)}
    pci_write_mem_longword%=LONG{ADD(pci_cookie_value%,116)}
    '
    pci_read_io_byte%=LONG{ADD(pci_cookie_value%,120)}
    pci_read_io_word%=LONG{ADD(pci_cookie_value%,124)}
    pci_read_io_longword%=LONG{ADD(pci_cookie_value%,128)}
    pci_fast_read_io_byte%=LONG{ADD(pci_cookie_value%,132)}
    pci_fast_read_io_word%=LONG{ADD(pci_cookie_value%,136)}
    pci_fast_read_io_longword%=LONG{ADD(pci_cookie_value%,140)}
    pci_write_io_byte%=LONG{ADD(pci_cookie_value%,144)}
    pci_write_io_word%=LONG{ADD(pci_cookie_value%,148)}
    pci_write_io_longword%=LONG{ADD(pci_cookie_value%,152)}
    '
    pci_get_machine_id%=LONG{ADD(pci_cookie_value%,156)}
    pci_get_pagesize%=LONG{ADD(pci_cookie_value%,160)}
    pci_virt_to_bus%=LONG{ADD(pci_cookie_value%,164)}
    pci_bus_to_virt%=LONG{ADD(pci_cookie_value%,168)}
    pci_virt_to_phys%=LONG{ADD(pci_cookie_value%,172)}
    pci_phys_to_virt%=LONG{ADD(pci_cookie_value%,176)}
    '
    RETURN &H0
  DEFAULT
    RETURN &HFFFFF000
  ENDSELECT
ENDIF
RETURN &HFFFFF001
ENDFUNC
> FUNCTION pci_get_cookie(VAR cookie_valeur%)
$F!
LOCAL read_cook%,nom_cook%,cookie%
'
nom_cook%=CVL("_PCI")
cookie%=LPEEK(&H5A0)
cookie_valeur%=0
'
IF cookie%<>0
REPEAT
  read_cook%=LPEEK(cookie%)
  cookie_valeur%=LPEEK(ADD(cookie%,4))
  ADD cookie%,8
UNTIL read_cook%=0 OR read_cook%=nom_cook%
IF read_cook%=nom_cook%
  RETURN TRUE
ELSE
  RETURN FALSE
ENDIF
ELSE
RETURN FALSE
ENDIF
ENDFUNC
> FUNCTION pci_get_error$(pci_error%)
SELECT pci_error%
CASE &H0
RETURN "PCI_SUCCESSFUL"
CASE &HFFFFFFFE
RETURN "PCI_FUNC_NOT_SUPPORTED"
CASE &HFFFFFFFD
RETURN "PCI_BAD_VENDOR_ID"
CASE &HFFFFFFFC
RETURN "PCI_DEVICE_NOT_FOUND"
CASE &HFFFFFFFB
RETURN "PCI_BAD_REGISTER_NUMBER"
CASE &HFFFFFFFA
RETURN "PCI_SET_FAILED"
CASE &HFFFFFFF9
RETURN "PCI_BUFFER_TOO_SMALL"
CASE &HFFFFFFF8
RETURN "PCI_GENERAL_ERROR"
CASE &HFFFFFFF7
RETURN "PCI_BAD_HANDLE"
CASE &HFFFFF001
RETURN "PCI_BIOS_NOT_INSTALLED"
CASE &HFFFFF000
RETURN "PCI_BIOS_WRONG_VERSION"
DEFAULT
RETURN "PCI_UNKNOWN_ERROR"
ENDSELECT
ENDFUNC
'
> FUNCTION pci_find_pci_device(pci_id%,pci_index&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_id%
pci_rcall%(1)=pci_index&
RCALL pci_find_pci_device%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_find_pci_classcode(pci_class%,pci_index&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_class%
pci_rcall%(1)=pci_index&
RCALL pci_find_pci_classcode%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_config_byte(pci_handle%,pci_reg|,VAR pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(8)=V:pci_byte|
RCALL pci_read_config_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_config_word(pci_handle%,pci_reg|,VAR pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(8)=V:pci_word&
RCALL pci_read_config_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_config_longword(pci_handle%,pci_reg|,VAR pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(8)=V:pci_longword%
RCALL pci_read_config_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_fast_read_config_byte(pci_handle%,pci_reg|)
$F|
LOCAL old_stack%,pci_value|
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
RCALL pci_fast_read_config_byte%,pci_rcall%()
pci_value|=BYTE(pci_rcall%(0) AND &HFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value|
ENDFUNC
> FUNCTION pci_fast_read_config_word(pci_handle%,pci_reg|)
$F&
LOCAL old_stack%,pci_value&
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
RCALL pci_fast_read_config_word%,pci_rcall%()
pci_value&=CARD(pci_rcall%(0) AND &HFFFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value&
ENDFUNC
> FUNCTION pci_fast_read_config_longword(pci_handle%,pci_reg|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
RCALL pci_fast_read_config_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_config_byte(pci_handle%,pci_reg|,pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(2)=pci_byte|
RCALL pci_write_config_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_config_word(pci_handle%,pci_reg|,pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(2)=pci_word&
RCALL pci_write_config_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_config_longword(pci_handle%,pci_reg|,pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_reg|
pci_rcall%(2)=pci_longword%
RCALL pci_write_config_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_hook_interrupt(pci_handle%,pci_routine%,pci_parameter%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(8)=pci_routine%
pci_rcall%(9)=pci_parameter%
RCALL pci_hook_interrupt%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_unhook_interrupt(pci_handle%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
RCALL pci_unhook_interrupt%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_special_cycle(pci_bus|,pci_data%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_bus|
pci_rcall%(1)=pci_data%
RCALL pci_special_cycle%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_get_routing(pci_handle%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
RCALL pci_get_routing%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_set_interrupt(pci_handle%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
RCALL pci_set_interrupt%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_get_ressource(pci_handle%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
RCALL pci_get_ressource%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_get_card_used(pci_handle%,pci_ptr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(8)=pci_ptr%
RCALL pci_get_card_used%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_set_card_used(pci_handle%,pci_adr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(8)=V:pci_adr%
RCALL pci_set_card_used%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_mem_byte(pci_handle%,pci_offset%,VAR pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_byte|
RCALL pci_read_mem_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_mem_word(pci_handle%,pci_offset%,VAR pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_word&
RCALL pci_read_mem_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_mem_longword(pci_handle%,pci_offset%,VAR pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_longword%
RCALL pci_read_mem_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_fast_read_mem_byte(pci_handle%,pci_offset%)
$F|
LOCAL old_stack%,pci_value|
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_mem_byte%,pci_rcall%()
pci_value|=BYTE(pci_rcall%(0) AND &HFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value|
ENDFUNC
> FUNCTION pci_fast_read_mem_word(pci_handle%,pci_offset%)
$F&
LOCAL old_stack%,pci_value&
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_mem_word%,pci_rcall%()
pci_value&=CARD(pci_rcall%(0) AND &HFFFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value&
ENDFUNC
> FUNCTION pci_fast_read_mem_longword(pci_handle%,pci_offset%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_mem_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_mem_byte(pci_handle%,pci_offset%,pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_byte|
RCALL pci_write_mem_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_mem_word(pci_handle%,pci_offset%,pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_word&
RCALL pci_write_mem_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_mem_longword(pci_handle%,pci_offset%,pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_longword%
RCALL pci_write_mem_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_io_byte(pci_handle%,pci_offset%,VAR pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_byte|
RCALL pci_read_io_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_io_word(pci_handle%,pci_offset%,VAR pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_word&
RCALL pci_read_io_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_read_io_longword(pci_handle%,pci_offset%,VAR pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(8)=V:pci_longword%
RCALL pci_read_io_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_fast_read_io_byte(pci_handle%,pci_offset%)
$F|
LOCAL old_stack%,pci_value|
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_io_byte%,pci_rcall%()
pci_value|=BYTE(pci_rcall%(0) AND &HFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value|
ENDFUNC
> FUNCTION pci_fast_read_io_word(pci_handle%,pci_offset%)
$F&
LOCAL old_stack%,pci_value&
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_io_word%,pci_rcall%()
pci_value&=CARD(pci_rcall%(0) AND &HFFFF)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value&
ENDFUNC
> FUNCTION pci_fast_read_io_longword(pci_handle%,pci_offset%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
RCALL pci_fast_read_io_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_io_byte(pci_handle%,pci_offset%,pci_byte|)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_byte|
RCALL pci_write_io_byte%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_io_word(pci_handle%,pci_offset%,pci_word&)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_word&
RCALL pci_write_io_word%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_write_io_longword(pci_handle%,pci_offset%,pci_longword%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_offset%
pci_rcall%(2)=pci_longword%
RCALL pci_write_io_longword%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_get_machine_id
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
RCALL pci_get_machine_id%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_get_pagesize
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
RCALL pci_get_pagesize%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_virt_to_bus(pci_handle%,pci_adr%,pci_ptr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_adr%
pci_rcall%(8)=pci_ptr%
RCALL pci_virt_to_bus%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_bus_to_virt(pci_handle%,pci_adr%,pci_ptr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_handle%
pci_rcall%(1)=pci_adr%
pci_rcall%(8)=pci_ptr%
RCALL pci_bus_to_virt%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_virt_to_phys(pci_adr%,pci_ptr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_adr%
pci_rcall%(8)=pci_ptr%
RCALL pci_virt_to_phys%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
> FUNCTION pci_phys_to_virt(pci_adr%,pci_ptr%)
$F%
LOCAL old_stack%,pci_value%
'
IF pci_enabled!
old_stack%=GEMDOS(32,L:0)
'
pci_rcall%(0)=pci_adr%
pci_rcall%(8)=pci_ptr%
RCALL pci_phys_to_virt%,pci_rcall%()
pci_value%=pci_rcall%(0)
'
~GEMDOS(32,L:old_stack%)
ENDIF
'
RETURN pci_value%
ENDFUNC
