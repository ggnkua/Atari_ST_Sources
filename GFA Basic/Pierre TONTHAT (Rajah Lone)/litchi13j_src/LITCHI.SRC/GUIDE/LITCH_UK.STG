@database "LITCHI"
@options "+g -i -s +z -t2 -d12"
@author "Pierre TONTHAT"
@$VER: 1.3J
@subject "Litchi documentation"

@node "litchi_start" "Litchi: guide"

@image LITCHI.IMG 1









      @{"What is it?" LINK "litchi_presentation"}
      @{"Legal aspects" LINK "litchi_legal"}

      @{"Installation and required things" LINK "litchi_install"}
      @{"Preferences" LINK "litchi_preferences"}
      @{"S‚curity" LINK "litchi_secure_connections"}

      @{"URLs" LINK "litchi_signets"}
      @{"Remote files" LINK "litchi_remote"}
      @{"Local files" LINK "litchi_local"}

      @{"Keyboard shortcuts" LINK "litchi_keys"}

      @{"Limitations" LINK "litchi_bogues"}
      @{"Historic" LINK "litchi_versions"}

      @{"Greetings" LINK "litchi_merci"}
 
@endnode

@node "litchi_presentation" "Litchi: presentation"

  Litchi is a FTP client for
  - STiK2, STiNG and compatibles TCP/IP layers.
  - MiNnet which is used directly, but still needs Gluestick for the
    resolver.

  SSL/TLS secure connections are supported since 1.3 version, with the
  help of the Polarssl.ldg library.

  Supported Atari protocols:
    ARGS, DHST, Drag&Drop, VA_START, BubbleGEM, STGuide






@image RENAISSA.IMG 50

  This program is provided by Renaissance, coded
  with GFA Basic by Rajah Lone.
 
@endnode


@node "litchi_legal" "Litchi: legal"

  Litchi is a freeware.
  The GFA sources are available and you can modify them for your own usage.
  Selling Litchi is forbidden.
 
  As always, we decline any responsability concerning dysfonctions,
  nasty bugs, corruption on personnal datas, etc.
 
@endnode

@node "litchi_install" "Litchi: requisites and installation"

  @{0U}Needs:@{0}

  ú 2 MB RAM or more (TT-RAM is used if present)
  ú a hard disk is advised
  ú a multitasking system is advised (tests under MagiC)
  ú NVDI or other modern VDI is counselled

  @{0U}Update:@{0}

  > Copy the LITCHI.PRG, RSC, BUB and HYP on the olders.

  @{0U}Installation:@{0}

  > Copy the whole archive on a choosen hard disk partition.

  > Verify the $HOME environment variable is set in the configuration
    file of you system. For example in MAGX.INF:

    #_ENV HOME=C:\GEMSYS\HOME

  > Under MiNT, launch gluestik.prg before to install the STiK cookie.
    With FireBee, use its option "--force" to supersede the STiK functions
    of FireTOS.
    Gluetick is only used for the STiK cookie and its resolver function
    (that translates domains into IP address). MiNTnet sockets are used
    directly.

  > Launch Litchi and go in the Options to set the pathfiles, the
    display preferences, the choosen fonts, etc.

    @{0B}Attention@{0}: for security reasons, please create the DOWNLOAD
    folder (and also the LITCHI.LOG file) on a different partition that:
    ú can support a large amount of writings.
    ú will host unimportant files (that can be easily found/recovered from
      other media).
    ú can be erased/zero-ized without regret if crash.

  > To have the documentation and bubbles under Litchi, you must install
    ST-Guide and BubbleGEM. Please refer yourself to their documentations.
    You must declare theirs environment variables, for exemple, in MAGX.INF:

    #_ENV BUBBLEGEM=C:\GEMSYS\BUBBLE\BUBBLE.APP
    #_ENV STGUIDE=C:\ST-GUIDE.ACX

  > To open the LITCHI.LOG directly under Litchi, please declare in your
    desktop the *.LOG files readable/managed/linked to the MGVIEW.APP
    application.

  > if your Atari does not have a saved clock, you may have to set the
    current year in the @{"LITCHI.CFG" LINK "litchi_date"} file.
 
@endnode

@node "litchi_preferences" "Litchi: preferences"

  The preferences are located in the Options menu.
  you can find several types:

  ú @{"Paths" LINK "litchi_pref_path"}
  ú @{"Fonts" LINK "litchi_pref_font"}
  ú @{"Display" LINK "litchi_pref_display"}
  ú @{"Miscellaneous" LINK "litchi_pref_misc"}

  The location, size and opening of the windows, and
  also the help features (alerts and bubbles) are saved
  with all options in the LITCHI.CFG file. If possible
  in the $HOME folder, if not, near the LITCHI.PRG file.
 
@endnode

@node "litchi_pref_path" "Litchi: paths"

  @{0U}Doumentation@{0}
    Indicate the complete path and filename for the LITCHI.HYP file.

  @{0U}Work folder@{0}
    The program will use this folder for its URLs database
    files, which is saved at program exit.

  @{0U}Log file@{0}
    The server discussion, under FTP protocol are logged
    in this file, if the option is activated. It is
    recommended to set it on a robust hard disk partition.

  @{0U}Download folder@{0}
    You can set a download folder for each URL you create, but
    you do need to set this general download folder in case
    some other programm (CAB, Troll) call Litchi with a clicked
    URL.
 
@endnode

@node "litchi_pref_font" "Litchi: fonts"

  Litchi can handle vectorial fonts (NVDI required) and/or
  bitmap fonts (GDOS minimum) instead of the system font.

  You can set the size of these fonts.

  Attention, the font used for the console must be monospaced.
 
@endnode

@node "litchi_pref_display" "Litchi: display"

  There are some sections, concerning the general display and elements
  showed in the different windows.

  The color icon display requires an AES 3.99 minimum and a sufficient
  font size.

  You can sort the listed files in this window. Carefull, a sort provokes
  a new call LIST to the FTP server.

  If your Atari does not have a saved clock and the FTP server doesn't 
  have "MLSD" command in its features, then take care to set the
  @{"current year" LINK "litchi_date"} in the LITCHI.CFG file.
  This for a correct date sorting.
 
@endnode

@node "litchi_pref_misc" "Litchi: miscellaneous"

  Are listed some options that modify the behavior of the
  program.


@{0U}Connection:@{0}

  @{0U}Connection openning timeout@{0}
    Delay in second, waiting for the server to open.

    You can set a lower value, if you get impatient.

  @{0U}Try to be persistent@{0}
    Usualy, the server disconnects itself after a period of inactivity.
    You can make it persistent by using this option. NOOP calls will
    be sent to tell to the server you can to keep alive.

    It's working well with my built-in MacOSX ftp server, but this
    trick may be not appreciated by some servers: they do not accept NOOP
    calls.

    So if you are disconnected against your will, be sto‹c. When the
    server has disconnect by user inactivity, the calls become very long
    and ineffective, so click on the '' button to commit disconnection.


  @{0U}Refresh list automaticaly@{0}
    Keep checked. unless you hage huge remote files list, and you want
    to manipulate something quickly.

    A list refresh is equivalent to a file download, size 60Bytes * number
    of files. Litchi has a 64K buffer, so it can list about 800 files in
    a folder.

  @{0U}Verify links automaticaly@{0}
    (not yet functionnal)

  @{0U}Save all on exit and restore session next launch@{0}
    Session, preferences and urls are automaticaly saved when leaving, and
    all will be restored next launching.
    
    For skilled users:
    The timeout at connection works now with MiNTnet so it's secure, but
    if you want a confirmation and delay before automatic reconnection, you
    can edit the LITCHI.CFG file and set the variable
    MISC_RESTORE_SESSION_CONFIRM_DELAY with a number in seconds (0 to 10).
    It's 0 by default to avoid the confirmation and reconnect without delay.
   
  @{0U}Use a log file@{0}
    Counsel: leave unchecked. Use it only if connection
    problems with the news server.


@{0U}Transfer:@{0}

  @{0U}Convert filenames to small case when sending them@{0}
    Leave unchecked. may be usefull if you are with 8+3 DOS names with
    upper case, and the remote filesystem prefers small case.
    Carefull with your HTML <A HREF> (& co) links.

  @{0U}Keep rights@{0} (MiNT only)
    After downloading and saving the file, tries to set rights as same
    as the remote one.

  @{0U}Keep dates@{0}
    After downloading and saving the file, tries to set the filedate as
    same as the remote one.

    If you Atari does not have a saved clock, please @{"indicate" LINK "litchi_date"} the current
    year in the LITCHI.CFG file. If not, the filedate will have the same
    year as your Atari ROMs.

  @{0U}If the file to download is already there:@{0}
    If 'Ask just before download' is selected, then a modal dialog will
    appear just before download to ask for the action to decide. This
    dialog has a 10s timeout, the purpose is not to block the next downloads.
    First, default is rewrite, then next default is the previous action.


@{0U}Confirm:@{0}

  @{0U}Program exit if connection is active@{0}
    If you are afraid to quit with a bad move.

  @{0U}Uploading or downloading@{0}
    Alert to confirm a transfer or not.

  @{0U}Deleting@{0}
    If you are afraid to delete by error.


@{0U}Statistic:@{0}

  @{0U}Flow for each file@{0}
    Average data flow, displayed in the console, when file has been transfered
    Does not slow transfers.

  @{0U}Flow and estimated end while transfering@{0}
    Current data flow, time from start, estimated duration, while the file
    is been transfered. Displayed in the transfer window.
    May slow transfers.


@{0U}Security:@{0}

    @{0U}Verify servers certificates@{0}
      If set, the POLARSSL.CA file is loaded, parsed, and used at connection
      start to verify the certificates. If the server certificate is not
      valid, then an alert appears for the user to accept or reject the
      connection.
      If the certificate is signed by a Certificate Authority (CA), then
      it is automaticaly accepted.
      
      Disabling verification uses less RAM and time, but it lowers security.

      This option is disabled under TOS.
      If the POLARSSL.CA is not found, then verification is disabled.   

    @{0U}Accepted protocols@{0}
      From lighter to heavier: SSL 3.0, TLS 1.0, TLS 1.1, TLS 1.2
      The lighter asks less computations and therefore less delay 
      at connection start (SSL Handshake step).
      
      For quickness: lower maximum.
      For better security: increase minimum.


    @{0U}Preferred ciphersuites file@{0}
      SSL Handshake may take too long and fail because of heavy or buggy
      ciphersuites. You can choose wished ones in the POLARSSL.CS folder
      by selecting a *.CS file.
      
      If not selected, then POLARSSL.LDG will used its built-in ciphersuites.

@{0U}Drives:@{0}

  @{0U}Display of A: and B: in the listed drives pop-up@{0}
    On evolved Atari machines, the floppy drives can be replaced by a SD card
    reader, or completly missing.
    The labels appear disabled if the drives are not listed in Drvmap(), but
    it's still possible to (de)select the option if the setup has changed.
    
  @{0U}Under MiNT, prefer local paths written with u:\x\ rather than X:\@{0}
    This option is enabled by default under MiNT. 
    It's possible to use it under MagiC.
 
@endnode

@node "litchi_secure_connections" "Litchi: secure connections"

  Secure connections are supported since Litchi's 1.3 version and the 
  POLARSSL.LDG library.
    
  LDG.PRG must be launched (in AUTO folder or manualy after) to add the
  LDGM cookie.
  These files must be located in the LDG folder (usualy C:\GEMSYS\LDG\):
  - POLARSSL.LDG (mandatory)
  - POLARSSL.CA (optional, for servers certificates verification)
  - Folder POLARSSL.CS (optional, for using external ciphersuites files)

  Secure protocol version, ciphersuite and certificate informations are
  stored in the log file, if enabled.
  
  See also @{"security" LINK "litchi_pref_misc"} preferences in the miscellaneous options,
  and @{"URLs" LINK "litchi_signets"} settings.
 
@endnode


@node "litchi_date" "Litchi: current year"

  Attention: the filedate given by the FTP server is incomplete if "LIST"
  command is used. This doesn't apply for "MLSD" command.

  Always hour OR current year.
  Therefore:
  If hour is not there, and Litchi considers it to 00:00
  If year is not there, and Litchi considers the file year to be the current one

  For Atari with saved clocks, this is not a problem.
  If your Atari does not have a saved clock, then the current date is the
  date of the Atari ROMs.

  To prevent this, edit the LITCHI.CFG file and add the line

  CURRENT_YEAR=2007

  If the current year is 2007.
 
@endnode


@node "litchi_signets" "Litchi: URLs"

  1) In the 'Windows' menus, select the 'URLs' item.

  2) In the new window, click on '+' to add a new URL, that you will modify.

     Trick: if you want to create similar URLs, you have just to select
     the one you want to copy, and then click the '+' button.

  3) Use the list to select the wanted URL.

     Wording: as you wish. This will appear in the remote files window, in
     the pop-up URL selector.

     Server: the servername, without the ftp://

     Port: the port number, usualy 21

     Connection mode: PASSIVE advised (moreover if you are behind a router)
                      ACTIVE is not advised (does not working will)

     Connection security:
           
        - none: commands, list, files and password are visible on the internet.

        - over SSL/TLS explicit (ftp:// or ftpes://): 
                Connection starts unsecure, then AUTH TLS command is sent,
                SSL Handshake is made and if successful, it continues in 
                secure mode. Commands and password are thus sent encrypted.
         
        - over SSL/TLS implicit (ftps://):
                Connection starts directly with SSL Handshake on port 990.
                This mode is not supported by IETF.

     Includes data port: files list and files themselves are also encrypted.
       
                Attention, SSL Handshake is done every time a file list or
                one file is transfered. Navigation and multiple transferts
                are slower.
                
     Only for authentification: CCC command is sent after logging to return 
                                to unsecure mode. 
                                Only the password is sent encrypted.        
 
     Authentification:
     
        - None, as anonymous.
        - Basic, with username (login) and password
        - With certificate and private key (not yet supported).
 
     Start: if this unix path is present, Litchi will try to go into just after
            connecting to the FTP server.

     Download to: set a folder where the files wil be retreived.
     
     Point to folder at connection start: local window points to the download
                                          folder when connection is started.
     
     Verify disk free space: convenient if floppy disk or small media.
                             should be disabled with Aranym and hostfs.
                             
     Convert filename to 8+3: is the partition is not VFAT.     

  4) Click on 'Apply' button to commit modifications.

  5) Use '-' button to delete a selected URL. Delete is permited only if
     not connected with this URL.

  Notes:

  - URL database is always saved at Litchi exits, so don't bother to think
    about it. Remember of this fact only if you kills Litchi instead of
    quitting it properly.

  - an URL is created automaticaly if Litchi is called (VA_START or command
    line). This URL is temporary and named {servername}. It will be deleted
    at program exit, so if you want to keep it, make a similar one, by
    selecting this URL, and clicking the '+' button.
 
@endnode

@node "litchi_remote" "Litchi: remote files"

  Once one or more URLs is created, you can connect to a FTP server.

  Your TCP/IP stack (STiK2, STinG or compatible) must be activated.

  Go into the 'Windows' menu, click on the 'Remote files' item.

  In the 'Remote Files' windows, click on the pop-up (left up corner) to
  select your FTP site.

  Once connected, a files list appears, and it's possible to disconnect
  ('' button) or execute some commands ('~' button).

  Browsing is made by double-clicking on folders to open them, or '..' to
  go to the parent directory.

  Under multitasking environment, you can use Drag'n'Drop method.

  Attention: the desktop can send file list, but seems not to be able to
  receive ones (D&D as receiver + PATH is not implemented in most desktop).
  So if you drag remote files on an other window than Litchi, these files
  will be downloaded, but in the download folder specified with your URL,
  not in the folder the desktop windows shows.

  (*) A click on the right mousebutton opens a popup menu with a subset of
  these options.

  Commands:

    - Execute a command (SITE)
      for example to change rights with a 'CHMOD 777 filename'.
      the command and the last line result are shown after execution

    * Delete (files or folders and their contents)

    * Refresh remote file list

    * New folder
      which is created in the current directory

    * Go into a folder
      may be useful to avoid long file lists

    * Rename
      a file or a folder

    * Get informations
      shows exact bytes lengths of the file or folder
      you can modify rights in this window

    - Store a file
      calls the fileselector to send a local file to the remote folder

    * Retreive files
      the remote selected files will be downloaded in:
      -> if the local files browser window is opened, in the current folder
      -> if the local files window is closed, in the download folder you
      have set in the URL settings.

    - Retreive to...
      calls the fileselector to indicate a local folder, then after, the
      remote files will be downloaded into this local folder

  About the transfers:

  * If there's enough memory space, the file will be entirely downloaded in RAM.

  If not enough space, the program will use a 192004 Bytes (or less) buffer,
  and will access disk during the transfer. Do not kill the program when this
  happens.
  A console message will appear if this behavior applies to the current file.

  * Si download or remote delete includes folders contents, a search/list will
  be done: a window with files/folders/(amount of KB) is show. You can abort
  the operation by closing this window.
 
@endnode

@node "litchi_local" "Litchi: local files"

  A local file browser is implemented to facilite files selection, under
  monoTOS, to upload and to choose the folder where you will download files.

  A pop-up is there to select the current drive.

  To browse, double-click on the ".." line to go up, and a folder to open it.

  An other pop-up ('~' button) permits to:

    * Delete
      a selection of files and folder (if they are empty)

    * Refresh the list

    * New folder
      created in the current folder

    * Go into a folder
      can be useful to change quickly

    * Rename
      a file or a folder

    * Send the (selected) files and folders and contents

  (*) A click on the right mousebutton opens a popup menu with a subset of
  these options.
 
@endnode

@node "litchi_keys" "Litchi: keyboard shortcuts"

   For remote and local windows:

   Space - swap windows (between local and remote)

   F1 - sort by name
   F2 - sort by date
   F3 - sort by length
   F4 - sort by type
   F5 - unsorted

   Esc - refresh list
   ClrHome - go to the top of the list
   Shift+ClrHome - go to the bottom of the list
   Up or Down Arrows - item per item scrolling
   Control+Up or Down Arrows  - page per page scrolling
   Control+Backspace - go into parent directory

   Control+A - select all files in the current folder
   Control+Del - delete files and empty folders
                 (only if confirm alert is activated)
   Control+R - rename file or folder
   Control+I - informations on distant file or folder or link
   Control+G - change the current folder
   Control+N - new folder

   Control+Left Arrow (local only) - upload the selection
   Control+Right Arrow (distant only) - download the selection

   Control+Mouse Drag&Drop - MOVE instead of COPY mode
 
@endnode

@node "litchi_bogues" "Litchi: bugs & limits"

  ú 'ACTIVE' connexion mode is not well reliable, morever behing a router.
    Please prefer 'PASSIVE' method, moreoever if you are behind a router.

  ú ABOR command seems to be ignored by the server. So the download
    cannot be interrupted. The only method, if you get impatient, is
    to kill Litchi. It's safe, but only if the download is not yet
    finished.

  ú compatibility is not tested with exotic disk partitions (ie ext2 on MiNT)
    Please set the DONWLOAD folder on GEMDOS partitions.

  Please report any bug to pierre.tonthat@free.fr
 
@endnode

@node "litchi_versions" "Litchi: changelog"

  ú @{0U}1.3J@{0}
   - fix: sort by date or type were not correctly read from the configuration
          file.
   - fix: when using the sliders, redraw window content only if necessary.
   - fix: Dserdrv() with bad value if drive letter was minor-case.
   - fix: Drvmap() replaced by Dsetdrv(Dgetdrv()) for drives detection.
   - fix: add prefix "u:" on $HOME value if written in un*x fashion.
   - add: in the Misc Options, Drives panel, with 3 new options
          don't list A:, don't list B:, use "u:\x\" rather than "X:\" for MiNT.
   Thanks to MiKRO and Kroll

  ú @{0U}1.3I@{0}
   - fix: Control+1 on the numeric pad triggered program Quit.
   - fix: WIND_GET/SET calls on horizontal slider on the console window
          (but it hasn't these widgets).
   - fix: buffer size inscreased for MLSD/LIST in the remote folder (256KB,
          less if not enough RAM, minimum 80KB), can be customized by editing
          the LITCHI.CFG file, value of MISC_LIST_BUFFER_SIZE_KB (in KB).
   - fix: errors if LITCHI.RSC not found.
   Thanks to Lars Schmidbauer, Thorsten Otto, Lonny Pursell

  ú @{0U}1.3H@{0}
     Fixes related to timestamps given by LIST ftp command.
   - fix: if hour is not provided, then hour will not be displayed.
   - fix: if hour is provided (ie not the year), then system date and file date
           are compared to determine between current year or last year.
           (the system clock must be right/fixed/set for correct display)
    Thanks to Lars Schmidbauer

  ú @{0U}1.3G@{0}
   - add: restore windows internal positions if browsing reaches back
          (after going down the files tree).
   - fix: clean error message when disconnecting.

  ú @{0U}1.3F@{0}
   - fix: while download, if conflict name and choice for other name, this new
          name could be blank if period and extension were missing.

  ú @{0U}1.3E@{0}
   - fix: UTF-8 decoding (letter+0xCC+glyph, ‡ €). Less Malloc/Mfree.
   - fix: conflict names dialog appeared to many times if DOS8+3 file renaming
          was enabled, evenif miscellanous options were already set.
   - fix: transfered filename wasn't displayed after conflict name dialog.
   - fix: test if GEMDOS(0x160 = Fsocket() is available, if not then MiNTnet API
          is not used directly and need all GlueSTiK Gateway.
   - fix: force MiNTnet usage in PolarSSL if MiNTnet GEMDOS API is used.
   - fix: bad parameter in Fgetsockname().
   - fix: Fcntl(set flags) is discarded (3 bombs) if MiNTnet is used under
          MagiC and ACTIVE transfer mode.
   -> works now on MagiCNet and older MiNT.
   Thanks to Gerhard STOLL

  ú @{0U}1.3D@{0}
    - fix: RAM allocations were done in ST-RAM instead in TT-RAM, including
           for the files transfers.
    Thanks to Miro Kropacek et Helmut Karlowski

  ú @{0U}1.3C@{0}
    - fix: connexion problems on the FTP Command port with MiNTnet
           and MiNT 1.19 (wrong usage of Fselect(1,...))

  ú @{0U}1.3B@{0}
    - add: SSL/TLS support for secure connections over STinG TCP layer,
           with POLARSSL.LDG since @{0B}release 2@{0}.
    - add: misc > security option, wished ciphersuites can be declared.
    - fix: smoother transfers with STinG (better managment of E_NODATA and
           E_OBUFFULL messages).
    - fix: dates of received files were not fixed with the GMT shift.
    - fix: show titles in the fileselector.
    - fix: stack problem, missing 3rd parameter for tcp_close() (STiK >= 01.20)
    - fix: certificate check is possible only under MagiC or MiNT
           (loading and parsing POLARSSL.CA uses too many malloc() for old TOS).
    - fix: remove unnecessary $C+ and $C-

  ú @{0U}1.3@{0}
    - add: SSL/TLS support for secure connections, with POLARSSL.LDG library
           (and LDG.PRG in AUTO folder).
        - for now, only with MiNTNet TCP layer.
        - secure connection FTP over SSL/TLS, explicit or implicit methods.
        - can inclure secure transfers for datas (optional, "PROT P" command).
        - can secure only for authentification ("CCC" command).
        - optional verification of the servers certificates, with POLARSSL.CA
          (located beside POLARSSL.LDG)
        - choice of the minimal and maximal protocols versions: from SSL 3.0
          to TLS 1.0, TLS 1.1, TLS 1.2. Default is min = max = SSL 3.0.
        - managment for ftpes:// and ftps:// in arguments ARGS and VA_START.
    - fix: possible crash at start, when reading the preferences file.
    - fix: better handling of FTP responses, browsing is more convenient, 
           no more delays after files list and transfers.
    - fix: removed some MiNTnet calls that fooled the client about the
           connection, crash could happen if server wasn't available.
    - fix: crash if could not send FTP command (server has closed the
           connection or became unavailable).
    - fix: one file (or more) was missing if one reconnection (or more) 
           happened while downloading.
    - fix: crash of AVSERVER under Memory Protection mode, when the
           AV_PATH_UPDATE was sent.
    - fix: URL in ARGV was forgotten at start.
    - fix: buffer bad sizes for big files, download could crash under Memory
           Protection mode, upload could corrupt files.
    - add: if present in the server's features (command "FEAT"), the "MLSD"
           command is used instead of "LIST". This fixes files dates if there's
           no saved clock.
    - add: GMT correction for remote files dates.
    - add: German date format.
    - add: if supported (MLSD or UTF8 in the server FEATures), then special
           characters in filenames are supported (UTF-8 <> Atari charset).
    - add: VA_DRAGACCWIND support (drag'n'drop from AV server like Thing desk),
           filenames managment improved for spaces and quotes.
    - fix: cookie detection method preferentialy uses Ssystem().
    - fix: mouse cursor hide/show with AES GRAF_MOUSE function
           instead of VDI v_hide/show_c.
    - chg: code cleaning.
    Merci … Lars Schmidbauer

  ú @{0U}1.2E@{0}
    - fix: display in iconified window under MyAES.

  ú @{0U}1.2D@{0}
    - add: in display options, windows can be linked (convenient for larges
    screens) if mode is not free.
    - new: error message in console if PORT command is refused (Active mode).
    - new: error message in console when download ends if one file (or more)
    in the list was downloaded incomplete.
    - new: if not url is set, mouse click on ftp site pop-up opens url dialog.
    - add: in conflict filename dialog, 'same choice' for the next conflicts.

  ú @{0U}1.2C@{0}
    - fix: changes in ftp_get_response() for correct authentification
      to Kurobox (Merci … Lars Schmidbauer).
    - add: wind_update() with NO_BLOCK for MagiC and new AES, transfers are not
      blocked any more by other redraw (Merci … Daroou).
    - fix: progress bar and stats display less slow while transfers.
    - fix: division with zero (occured when scanning folders, STinG and MegaST)
    - fix: Control key actions were inactivated if CapsLock was enabled (at
      least under XaAES)

  ú @{0U}1.2B@{0}
    - fix: authentification problem with distants servers with MiNTnet
      (ftp get response wasn't getting long responses).
    - fix: Tab and Control+I had the same effect
    - fix: with restored session and MiNT, confirmation dialog wasn't displayed
    - add: retreive and send functions in right-click popup menu
    - fix: realtime calculations disabled on ColdFire (speedrate's too fast)
    Merci … Lars Schmidbauer
 
  ú @{0U}1.2@{0}
    - compiled with Lonny Pursell's GFA Library, with Classic 68000 
      and ColdFire targets.
    - rewrite of file load functions for preferences and
      text clipboard.
    - MiNTnet sockets are used directly. Gluestik is still and only
      needed for the STiK cookie, the knowlegde of localhost
      IP address and its resolver function.
      Consequence: files transferts are quicker and safer.
    - some delay removed before downloads, that could loss some datas.
    - misc option to save urls, preferences and session on exit and
      restore the session on the next launch.
    - with mouse right-click on remote or local windows: pop-up with
      some features displayed at cursor mouse position.
 
  ú @{0U}1.1J@{0}
    - the program was shareware, it is now freeware.
    + alert at launch if the work folder (containing the urls) is
      not found.
    - fixes:
      - launch of BubbleGEM (BUBBLE.APP), now effective, could crash
        under MiNT.
      - wrongly registered in the menu as accessory under Falcon TOS.
      - verify free space disk, that was not adapted with large disks
        such as Aranym HOSTFS.
    Merci … Lars Schmidbauer and Cooper/Paradize
 
  ú @{0U}1.1H@{0}
    - fixes:
      - trying to keep position inside window files list, after a dir
        or files manipulation
      - better file selection if it was not yet selected (if no mouse
        movement, then selection and drag'n'drop, instead of grabbox
        for multi-selection)
      - pop-ups sliders redraw problem, under XaAES: 1 pixel larger.
      - bad redraw after grabbox selection on one item only
    Merci … O.Landemarre et JF.Lemaire

  ú @{0U}1.1G@{0}
    - fixed: grabbox size more adapted if more than one selected files

  ú @{0U}1.1F@{0}
    - fixed: read/save now correctly in the configuration file, the
      choice if already existing file (misc options).
    + lower memory usage, when manipulating long lists of files.

  ú @{0U}1.1E@{0}
    - fixed crash under MiNT with Memory Protection after file
      upload or download (av_path_update should use global malloc).
      Merci Jean Fran‡ois LEMAIRE.

  ú @{0U}1.1D@{0}
    - fixed crash under monoTOS after file upload or download
      (av_path_update should never have been called under monoTOS).
      Merci Cooper and SimonSunnyBoy
    + windows swap with Tab, no more with Space.

  ú @{0U}1.1C@{0}
    + GokMasE's patches (fixes under XaAES environment and
      AV enhancements)

      - Using the correct app name when signing up with
        AV_PROTOKOLL (Using "LITCHI  " instead of "TROLL   ")
      + Dragging files from from REMOTE window to desktop window
        should work.  (Involves improved AV-PROTOCOL support)
      + Refreshing the desktops directory window after downloading
        (AV_PATHUPDATE)
      - Sending Litchi's windows to bottom of window stack should
        work OK on all AES' now.
      + The application name is now correctly reported through
        MENU_REGISTER now.
      - WM_ARROWED problem under (at least) XaAES has been fixed now.
      + Added check if URL file was written OK to disk, else show
        an ALERT.

    - bugfixes: in the URLs window, alerts corresponds now this the
      blank text field. Also no more need to indicate
      username/password if anonymous access
    + informations on a distant folder: numbers are more reliable.
      Scan is done in the remote folder to set correct number of
      files+subfolders and length of datas.
      ("merci" to Joakim H”gberg and Lars Schmidbauer)

   ú @{0U}1.1B@{0}
   - bugfixes:
     - no more crash at launch under MiNT with Memory Protection.
     - removed bad TOS version detection (LPEEK)
   + shell capability in the local files window.
     Just programs launches.
     The none-executable fichiers can be opened if an AV_SERVER
     is present.
   + Control is detected after drag'n'drop, for files moves
   + Alternate + mouse click : several items selected if one was.
   + mouse selection if an item was not selected (adding files with
     shift is allowed, but while the rubberbox is active)

  ú @{0U}1.1@{0}
   - replaced all $F by $F%, seems to react quicker (specially when
     sorting files). Thanks Lonny Pursell
   + download for folders contents
     (careful: if DOS8.+3 name conversion, folders with similar name
     may be merged)
   + remote delete for folders contents
   + counting informations window when scanning remote files/folders
     to download or delete (closing with window cancels the operation)
   + 'Abort' option (in the file already exist dialog box)
   + save Console contents in a text file
   + clear Console contents

  ú @{0U}1.0D@{0}
   - bugfix: all downloaded files with 0 Bytes, or under MagiC,
     crash with DOS_XFS. (newly created file not correctly closed)
     Thanks JL.CECCOLI

  ú @{0U}1.0C@{0}
   + folders download (but not yet their contents)
   + upload and download of files to big to fit in memory (careful,
     do not kill this program, due to disk access while transfering)
   + local port indicated in the console (may help some ftp opening)

 ú @{0U}1.0B@{0}
   - bugfixes :
     - division by zero, if up/download was lesser than 200ms
     - couldn't delete a distant folder, evenif empty
     - iconified window not redrawn if moved. Thanks to JF.LEMAIRE
     - double slash in distant path, if uploading a folder
       to ftp root
     - if failed to load file in RAM, PORT or PASV were sent to
       no avail
     - while uploading group files and directories, and reconnection
       (disconnected from server):
       - nasty crash when logging
       - did not keep the previous working folder
       - forgot the uploaded file
       Thanks to Cooper/Paradize
     - lack of redraw when changing the fonts (console and
       local window)
     - menu item 'Console' enabled by default at start
     - under TOS, it was possible to move up evenif on the disk root
     + empty files can be now uploaded
     + ALLO command used (allocate space for uploaded file) if the
       server supports it

 ú @{0U}1.0@{0}
   - bugfixes:
     - automatic opening of newly created local folder (final "\"
       was forgotten)
     - remaining space on correct disk (bad parameter in Dfree())
       Thanks Cooper/Paradize
     - alert #254 and exit, when listing a file more than
       2 GB length. The files more than 1 GB length are now skipped
       from downloading. Thanks JL.CECCOLI
     - the Console did not open with the menu item
     - display problem of Console window is not topped
   + recursivity for local files and folders contents deletions
   + recursivity for files and folders contents uploads

 ú @{0U}beta3@{0}
   - internal database numbers, unsused are removed
     (listing will be quicker)
   - RSC adaptations for 640*200 screen rezolution
   - if 8+3 filename convertion and if filename already present,
     the dialog will always appear.
   + warning alert if using accent or space on foldername or filename
     (FTP protocole do not manage those, it's dangerous to use them)
   + console (disabled by default, activate it in the options),
     choice to display errors, warnings, informations, FTP protocole
   + data flow and estimated remaining time computing (disabled by
     default, activate it in the options, doing this maths may slow
     data transfers)
   + LITCHI.BUB file for helping bubbles (carefull, in BUBBLGEM.CPX,
     check 'top only' if you have checked 'help deamon', to avoid
     nasty blocking by bubble during files transfers)
   + new dieHardUser behavior: if 'Control' key is pressed at start
     of a drag&drop (local to remote, remote to local windows only),
     then the files will be MOVED instead of COPIED.
     (deletion at the source, if transfer was correct)

 ú @{0U}beta2@{0}
   - fixed a bug in the 'sort by name' (that may cause a crash)
   + sort by type, distinguish case or not for sorting (Thanks _Dbug_)
   + some keyboard shortcuts
   + local files browser (convenient for monoTOS, Thanks Cooper
     fot the idea)
   + Tidy windows
   + Download behaviors for each URL:
     . point to download folder when opening connection
     . verify free disk space before saving downloaded file
       (careful, verifying slows the process)
     . convert filenames to DOS 8+3 names (always done if not
       MagiC or MiNT)

 ú @{0U}beta1@{0}
   * first public version.
 
@endnode

@node "litchi_merci" "Litchi: thanks"

  to Claude ATTARD,
     who teached me to code in GEM in his articles

  to Daroou / Renaissance aka Jean-Marc STOCKLAUSEN
     an old friend, met during the Dungeon GEM adventure ;)

  thanks to Cyril 'Bibou' LEFEBVRE, Cooper/Paradize, cicile+fabounio,
            Jace/STKnights, BouB/PoPsYTeam, AmigaLyon dudes,
            ThyReX, Skweek, Keops, _Dbug_/NeXT, 'beau' Minz, JFL,
            PMdata, TripleA, Frost/Sct1

            and people on ircnet #atari.fr and #atariscne
 
@endnode
