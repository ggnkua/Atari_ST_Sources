@database "MyJester"
@options "+g -i -s +z -t2 -d12"
@author "Pierre TONTHAT"
@$VER: May 2024
@subject "MyJester documentation"

@node "commencer" "MyJester: guide"


@image WILL.IMG 2

@image TITLE.IMG 30





                       "Be movŠd with fun thou wilt!"

                       ú @{"Shakespeare insult generator" LINK "general"}

                       ú @{"Legal" LINK "legal"}
                       ú @{"Installation and system requirements" LINK "install"}
                       ú @{"Key short-cuts" LINK "clavier"}
                       ú @{"Customization" LINK "customize"}

 
@endnode

@node "general" "MyJester: presentation"

  This program is a sort of "cadavre exquis" as we call it in France.
  Sentences are randomly made from several lists of words, so that
  each seems a new one.

  The lists of words are coming from (more or less) officials Websites
  dedicaced to Shakespeare and fun. @{"Customization" LINK "customize"} is possible, by
  editing the RSC file.

  After initialization, the program will iconify itself. Click in the
  iconified window to see what insult you deserve. Please see the
  @{"system requirements" LINK "install"}, for MyJester needs some OS functionnalities.
  Note: if the system does not allow simple clic in the iconified 
  window, then use the deamon function of BubbleGEM.

  Your teacher, a six years old most witted and cunning boy, named Calvin,
  will make faces to invite you to ear the sentences.
 
@endnode

@node "legal" "MyJester: legal"

  This program is freeware, copy and spreading is strongly advised.

  The images are Calvin's, extracted from the famous comic called
  "Calvin & Hobbes", written with talent by Bill WATTERSON.
  If you like his work, I advise you to buy some of his
  writings (in original English tongue, for more fun ;-)

  If you want to upgrade or add functionnalites (example: tranform the
  application into a "companion"), feel free to edit the GFA code.
 
@endnode

@node "install" "MyJester: installation"

  Put the PRG file everywhere on your hard-disk, but you must have
  beside the HYP and RSC files.

  The system environment must support iconification and multitasking
  mode. MyJester therefore needs "MagiC" or "MiNT". It may run under
  old TOS, but you will not have all the functionnalities.

  Sentences are displayed in a bubble, so you must have (or install)
  "BubbleGEM".

  At start is made an automatic iconification, at top-left of the screen.
 
@endnode

@node "clavier" "MyJester: keyboard short-cuts"

  Control+U or Q
  -> Leave the program

  Control+I
  -> Iconify the window

  Help
  -> call this documentation, if STGUIDE environment variable is set,
     or ST-Guide is present in accessory mode.

  Note that you can use Control+C/X in the Bubble to copy the sentence in
  the clipboard
 
@endnode

@node "customize" "MyJester: customization"

  You can customize this program to make a new one.

@{0U}Rename the program@{0}

  This program supports name change by using the GEM function APPL_SEARCH,
  available on modern OS suc as MagiC or MiNT (thanks to Lonny PURSELL for
  his help :). Doing so, you will have to rename all the files.

  example :  MYJESTER.PRG   to   TAMERE.PRG
             MYJESTER.RSC   to   TAMERE.RSC
             MYJESTER.HYP   to   TAMERE.HYP

  Please respect the old TOS fashioned filename (8+3 major letters).

  Note that if you want to do that, you will have to make a new
  HYP documentation. Mail-me if you need a model for STG source file
  for ST-Guide.

@{0U}Customize the RSC file@{0}

  USE a RSC editor such as Interface, WERCS, RSC3...
  DO NOT delete or replace or move a tree in the ressource file!

  ú @{U}Tree 0:@{0} information window

   You make what interface you want in this tree.
   The only thing to respect is the Help button and its object number
   that must be always 1.
   I would appreciate that you put my name in the credits.

  ú @{U}Tree 1:@{0} the object shown when the window is iconified

   Contains one only object (should be an image, icon or color icon,
   but other is permitted), that will be shown the first time, and
   replaced by others contained in the tree 3.
   So put one of the objects of the tree 3 in this tree.
   Do not bother about centering the object, the program do it
   automaticaly for you.

  ú @{0U}Tree 2:@{0} strings objects for the program long name and alerts

   Just change the first string (name of the program) if you have
   renamed the application.
   The name can be a long filename, it will be used for the window
   title and to reply to GEMScript command AppGetLongName.

  ú @{0U}Tree 3:@{0} objects base to be shown randomly

   You can make your own base of objects. Images, icons and/or color
   icons, and/or every type of GEM object is accepted.
   Do not bother about objects positions, if does not matter.
   The minimum number of object is one, there is no maximum, except maybye
   the length of the resulting RSC file.

  ú @{0U}Tree 4 to 8:@{0} list of words, words, words...

   Write words in the trees by putting, adding or deleting @{0B}strings@{0}
   objects. Each word from one list is separated with the next words by a
   space, except between the words of the tree 7 and 8.

   The tree 8 is reserved for punctuation, but you can trick by adding
   a space before the strings (they are not TRIMed), and put new words.

   The sentence made with randomly taken words is displayed in a bubble,
   so carefull not to overstep the 256 bytes buffer. No crashes, but
   the sentences will be only cut fo fit in.
 
@endnode
