.###############################
.### Screx 3D par GAIA/NOTEC ###
.###############################
.
speed%=5
@pal
PRINT "Please Wait..."
@init
CLS
@rotation
EDIT
.
> PROCEDURE pal
  .
  VSETCOLOR 0,0
  FOR c%=1 TO 15
    VSETCOLOR c%,15,15,15
    VSYNC
  NEXT c%
  .
RETURN
> PROCEDURE init
  .
  .x%(),y%() = coordonn‚es lignes
  DIM x%(100),y%(100)
  .ax%(),ay%() = angle pour rotation
  DIM ax%(100),ay%(100)
  .fx%(),fy%() = force par rapport … x160-y100
  DIM fx%(100),fy%(100)
  .
  .nom du logo 3D
  ch$="GAIA"
  .
  .nb_ligne% = nombre de lignes que composent le logo.
  nb_ligne%=0
  .
  .pas% = taille en ligne d'un pixel
  pas%=5
  .
  .### Lecture des 'DATAS' ###
  .
  dx%=0
  dy%=0
  FOR nb%=1 TO LEN(ch$)
    a$=MID$(ch$,nb%,1)
    RESTORE dat
    DO
      READ b$
      EXIT IF b$=a$
    LOOP
    READ nb_l%
    FOR nb2%=0 TO nb_l%-1
      READ x1%,y1%,x2%,y2%
      x%(nb_ligne%)=x1%+dx%
      y%(nb_ligne%)=y1%+dy%
      INC nb_ligne%
      x%(nb_ligne%)=x2%+dx%
      y%(nb_ligne%)=y2%+dy%
      INC nb_ligne%
    NEXT nb2%
    ADD dx%,6
  NEXT nb%
  .
  .### On calcule les coordonn‚es de d‚part du logo ( centrage ) ###
  .
  .On compte les intervalles + la longueur du texte * 5 (taille fonte) * pas%
  dx%=(319-((LEN(ch$)*5*pas%)+((LEN(ch$)-1)*pas%)))/2
  dy%=(199-5*pas%)/2
  .
  .### Conversion des coordonn‚es 'pixels' en 'lignes' ###
  .
  FOR nb%=0 TO nb_ligne%-1 STEP 2
    x%(nb%)=dx%+x%(nb%)*pas%
    y%(nb%)=dy%+y%(nb%)*pas%
    x%(nb%+1)=dx%+x%(nb%+1)*pas%
    y%(nb%+1)=dy%+y%(nb%+1)*pas%
  NEXT nb%
  .
  .### Cr‚ation des ax%(),ay%() pour les angles et des fx%(),fy%() pour les ###
  .### forces.                                                              ###
  .
  FOR nb%=0 TO nb_ligne%-1 STEP 2
    CLS
    VSETCOLOR 7,15
    COLOR 7
    LINE x%(nb%),y%(nb%),x%(nb%+1),y%(nb%+1)
    COLOR 15
    PLOT x%(nb%),y%(nb%)
    PLOT x%(nb%+1),y%(nb%+1)
    ax%(nb%)=(ABS(x%(nb%)<160)*180)
    ay%(nb%)=(ABS(y%(nb%)<100)*180)
    ax%(nb%+1)=(ABS(x%(nb%+1)<160)*180)
    ay%(nb%+1)=(ABS(y%(nb%+1)<100)*180)
    fx%(nb%)=ABS(160-x%(nb%))
    fy%(nb%)=ABS(100-y%(nb%))
    fx%(nb%+1)=ABS(160-x%(nb%+1))
    fy%(nb%+1)=ABS(100-y%(nb%+1))
    LINE 160,0,160,200
    LINE 0,100,320,100
    LOCATE 1,1
    PRINT "AX : ";ax%(nb%)
    PRINT "AY : ";ay%(nb%)
    PRINT "AX2: ";ax%(nb%+1)
    PRINT "AY2: ";ay%(nb%+1)
    PRINT "FX : ";fx%(nb%)
    PRINT "FY : ";fy%(nb%)
    PRINT "FX2: ";fx%(nb%+1)
    PRINT "FY2: ";fy%(nb%+1)
  NEXT nb%
  .
RETURN
> PROCEDURE rotation
  .
  DO
    .
    FOR nb%=0 TO nb_ligne%-1 STEP 2
      .
      .Conversion tableau en coordonn‚es centr‚es et orient‚es
      .     x1%=x%(nb%)+fx%(nb%)*COSQ(ax%(nb%))
      .     y1%=y%(nb%)+fy%(nb%)*SINQ(ay%(nb%))
      .     x2%=x%(nb%+1)+fx%(nb%+1)*COSQ(ax%(nb%+1))
      .     y2%=y%(nb%+1)+fy%(nb%+1)*SINQ(ay%(nb%+1))
      x1%=x%(nb%)+fx%(nb%)*COSQ(ax%(nb%))
      y1%=y%(nb%)+fx%(nb%)*SINQ(ax%(nb%))
      x2%=x%(nb%+1)+fx%(nb%+1)*COSQ(ax%(nb%+1))
      y2%=y%(nb%+1)+fx%(nb%+1)*SINQ(ax%(nb%+1))
      .
      .Affichage
      LINE x1%,y1%,x2%,y2%
      .
      .Changement d'angle
      ADD ax%(nb%),speed%
      ADD ay%(nb%),speed%
      ADD ax%(nb%+1),speed%
      ADD ay%(nb%+1),speed%
      .
    NEXT nb%
    .
    ." Synchro "
    .
    VSYNC
    CLS
    .
  LOOP UNTIL PEEK(&HFFFFFC02)=&H39
  .
RETURN
> PROCEDURE dat
  .
dat:
  DATA "A",4,0,0,4,0,4,0,4,4,0,2,4,2,0,0,0,4
  DATA "B"
  DATA "C"
  DATA "D"
  DATA "E"
  DATA "F"
  DATA "G",4,0,0,4,0,0,0,0,4,0,4,4,4,4,2,4,4
  DATA "H"
  DATA "J"
  DATA "I",3,0,0,4,0,2,0,2,4,0,4,4,4
  DATA "K"
  DATA "L"
  DATA "M"
  DATA "N"
  DATA "O"
  DATA "P"
  DATA "Q"
  DATA "R"
  DATA "S"
  DATA "T"
  DATA "U"
  DATA "V"
  DATA "W"
  DATA "X"
  DATA "Y"
  DATA "Z"
  .
RETURN
