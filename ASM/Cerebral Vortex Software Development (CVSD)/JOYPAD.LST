'
' Hi SimmonSunnyboy, here come the Jagpad rout with bitstring var.
' don't try to understand the rout, it's a very big 'Chaos Code !!!!'
' (and of course a very big 'shitty code !')
' coz doing some bit operation in gfa is not like playing with 68000
' registers ! It's 2 in the morning !! My little eyes are crying, so i will go
' to bed for....... reading some manuals !!!!! No it's a joke, go sleeping !!
'
'
'                            C U Soon to all coders over the world !
'
'                                   GT Turbo(Cerebral Vortex)
'
' Greetings to all people i know on the Atari-forum.
'
CLS
ON BREAK GOSUB arret
ON ERROR GOSUB error
super%=GEMDOS(32,L:0)           ! Supervisor mode !!
'
' the Joy_pad rout give back four var : Fire_0&, Fire_1&, Key_0%, Key_1%
'
' the bit map of the Fire_x Var :
'
'    bit :76543210
' Fire_0&=ABCO0123 where A=Fire A, B=Fire B, C=fire C, O=option
'                  and 01234=pad direction like ikbd joy for the first joypad
'
' Fire_1&=ABCO0123 where A=Fire A, B=Fire B, C=fire C, O=option
'                  and 01234=pad direction like ikbd joy for the second joypad
'
' The bit map of the Key_x Var are :
'
'  bit : cba9876543210
' Key_0%=P147*2580369# (1,4,7,*,2,5,8,0,3,6,9,# are the respective keys)
'                      and p for the pause key (First joypad)
'
' Key_1%=P147*2580369# (1,4,7,*,2,5,8,0,3,6,9,# are the respective keys)
'                      and p for the pause key (Second joypad)
'
' That's all !!!
'
DO
  @joy_pad
  '
  ' Example
  '
  PRINT AT(10,10);AND(fire_0&,&HF)              ! Aff dir pad 0
  PRINT AT(10,12);AND(fire_1&,&HF)              ! Aff dir pad 1
  '
  fire_a!=fire_0& AND &H80
  PRINT AT(10,16);fire_a!;" ";                  ! Display Fire A Jagpad 0
  '
  fire_a!=fire_1& AND &H80
  PRINT AT(10,18);fire_a!;" ";                  ! Display Fire A JagPad 1
  '
LOOP
> PROCEDURE arret
  ~GEMDOS(32,L:super%)
  EDIT
RETURN
> PROCEDURE error
  ~GEMDOS(32,L:super%)
  EDIT
RETURN
'
> PROCEDURE joy_pad
  adr_3%=&HFFFF9203
  adr_2%=&HFFFF9202
  adr_1%=&HFFFF9201
  '
  BYTE{adr_3%}=&HEE
  b&=NOT (BYTE{adr_1%})
  a&=NOT (BYTE{adr_2%})
  '
  c&=AND(SHL(b&,6),&H80)
  d&=AND(SHL(b&,4),&H80)
  '
  key_0%=b& AND 1
  key_0%=SHL(key_0%,4)
  '
  key_1%=b& AND 4
  key_1%=SHL(key_1%,2)
  '
  fire_0&=a& AND &HF
  fire_1&=SHR(AND(a&,&HF0),4)
  '
  fire_0&=fire_0& OR c&
  fire_1&=fire_1& OR d&
  '
  BYTE{adr_3%}=&HDD
  b&=NOT (BYTE{adr_1%})
  a&=NOT (BYTE{adr_2%})
  '
  c&=AND(SHL(b&,5),&X1000000)
  d&=AND(SHL(b&,3),&X1000000)
  '
  fire_0&=fire_0& OR c&
  fire_1&=fire_1& OR d&
  '
  key0%=a& AND &HF
  key1%=SHR(a& AND &HF0,4)
  '
  key_0%=key_0% OR key0%
  key_1%=key_1% OR key1%
  '
  key_0%=SHL(key_0%,4)
  key_1%=SHL(key_1%,4)
  '
  BYTE{adr_3%}=&HBB
  b&=NOT (BYTE{adr_1%})
  a&=NOT (BYTE{adr_2%})
  '
  c&=AND(SHL(b&,4),&X100000)
  d&=AND(SHL(b&,2),&X100000)
  '
  fire_0&=fire_0& OR c&
  fire_1&=fire_1& OR d&
  '
  key0%=a& AND &HF
  key1%=SHR(a& AND &HF0,4)
  '
  key_0%=key_0% OR key0%
  key_1%=key_1% OR key1%
  '
  key_0%=SHL(key_0%,4)
  key_1%=SHL(key_1%,4)
  '
  BYTE{adr_3%}=&H77
  b&=NOT (BYTE{adr_1%})
  a&=NOT (BYTE{adr_2%})
  '
  c&=AND(SHL(b&,3),&X10000)
  d&=AND(SHL(b&,1),&X10000)
  '
  fire_0&=fire_0& OR c&
  fire_1&=fire_1& OR d&
  '
  key0%=a& AND &HF
  key1%=SHR(a& AND &HF0,4)
  '
  key_0%=key_0% OR key0%
  key_1%=key_1% OR key1%
  '
RETURN
