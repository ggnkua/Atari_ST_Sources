Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 1



1         00FFE0         PBC       equ     $ffe0
2         00FFE9         HSR       equ     $ffe9
3         00FFEB         HTX       equ     $ffeb
4      
5         P:0000                   org     p:$0
6         P:0000 0AF080            jmp     init
                 000040
7      
8         P:0040                   org     p:$40
9                        init
10        P:0040 0BF080            jsr     receive_1surX                     ; r
ecoit table de 1 sur x
                 000231
11        P:0042 0BF080            jsr     load
                 000243
12        P:0044 547000            move              a1,x:$120               ; r
ecoit la taille de l'image
                 000120
13        P:0046 0BF080            jsr     receive_img                       ; r
ecoit l'image pas tournee
                 00021A
14        P:0048 0BF080            jsr     receive_palette
                 00025F
15        P:004A 0BF080            jsr     tab_line
                 00024A
16                       main
17        P:004C 60F400            move              #$100,r0
                 000100
18        P:004E 061180            do      #17,fin_rec_coor
                 000052
19        P:0050 0BF080            jsr     load
                 000243
20        P:0052 545800            move              a1,x:(r0)+
21                       fin_rec_coor
22     
23        P:0053 380100            move              #1,n0
24        P:0054 0BF080            jsr     droite_ab
                 0000DF
25        P:0056 0BF080            jsr     droite_bc
                 000125
26        P:0058 0BF080            jsr     droite_cd
                 00016B
27        P:005A 0BF080            jsr     droite_da
                 0001B1
28        P:005C 61F400            move              #$200,r1
                 000200
29        P:005E 67F400            move              #$10c,r7
                 00010C
30        P:0060 60F400            move              #$100,r0
                 000100
31        P:0062 65F400            move              #$10d,r5
                 00010D
32        P:0064 66F400            move              #$102,r6
                 000102
33        P:0066 0BF080            jsr     calcul_col
                 0001F7
34        P:0068 67F400            move              #$10d,r7
                 00010D
35        P:006A 60F400            move              #$102,r0
                 000102
36        P:006C 65F400            move              #$10e,r5
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 2



                 00010E
37        P:006E 66F400            move              #$104,r6
                 000104
38        P:0070 0BF080            jsr     calcul_col
                 0001F7
39        P:0072 67F400            move              #$10e,r7
                 00010E
40        P:0074 60F400            move              #$104,r0
                 000104
41        P:0076 65F400            move              #$10f,r5
                 00010F
42        P:0078 66F400            move              #$106,r6
                 000106
43        P:007A 0BF080            jsr     calcul_col
                 0001F7
44        P:007C 67F400            move              #$10f,r7
                 00010F
45        P:007E 60F400            move              #$106,r0
                 000106
46        P:0080 65F400            move              #$110,r5
                 000110
47        P:0082 66F400            move              #$108,r6
                 000108
48        P:0084 0BF080            jsr     calcul_col
                 0001F7
49     
50        P:0086 0BF080            jsr     calcul_mapp
                 000089
51        P:0088 0C004C            jmp     main
52     
53                       calcul_mapp
54        P:0089 60F400            move              #$10a,r0                ; a
dresse du point le plus o
                 00010A
55        P:008B 57F413            clr     a         #$300,b                 ; 0
 ds a et $300 dans b
                 000300
56        P:008D 45D800            move              x:(r0)+,x1              ; c
harge le pt le plus bas
57        P:008E 3A0260            add     x1,a      #2,n2                   ;
58        P:008F 65F460            add     x1,a      #$120,r5
                 000120
59        P:0091 200060            add     x1,a
60        P:0092 390210            add     b,a       #2,n1
61        P:0093 219110            add     b,a       a1,r1
62        P:0094 219200            move              a1,r2
63        P:0095 56F400            move              #$900,a
                 000900
64        P:0097 57F460            add     x1,a      #$a00,b
                 000A00
65        P:0099 219468            add     x1,b      a1,r4
66        P:009A 21B300            move              b1,r3
67        P:009B 45D800            move              x:(r0)+,x1
68        P:009C 30FE00            move              #$fe,r0
69        P:009D 380100            move              #1,n0
70        P:009E 36FC00            move              #$fc,r6
71        P:009F 3E0100            move              #1,n6
72        P:00A0 06C500            do      x1,calcul_line
                 0000DD
73        P:00A2 67F400            move              #$200,r7
                 000200
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 3



74        P:00A4 56D91B            clr     b         x:(r1)+,a
75        P:00A5 45DA00            move              x:(r2)+,x1
76        P:00A6 0BF080            jsr     send_x1
                 00023E
77        P:00A8 2D0164            sub     x1,a      #1,b1
78        P:00A9 0BF080            jsr     send
                 000239
79        P:00AB 200003            tst     a
80        P:00AC 0AF0A3            jpl     no_bug
                 0000B2
81        P:00AE 56CA00            move              x:(r2)+n2,a
82        P:00AF 56C900            move              x:(r1)+n1,a
83        P:00B0 0AF080            jmp     fin_ligne_tourne
                 0000DD
84                       no_bug
85        P:00B2 200010            add     b,a
86        P:00B3 219F00            move              a1,n7
87     
88        P:00B4 56DC00            move              x:(r4)+,a
89        P:00B5 45E300            move              x:(r3),x1
90        P:00B6 200064            sub     x1,a
91        P:00B7 46EF00            move              x:(r7+n7),y0
92        P:00B8 218400            move              a1,x0
93        P:00B9 57DBD0            mpy     y0,x0,a   x:(r3)+,b
94        P:00BA 485800            move              a,l:(r0)+
95        P:00BB 494000            move              b,l:(r0)-n0
96     
97        P:00BC 56D900            move              x:(r1)+,a
98        P:00BD 57D900            move              x:(r1)+,b
99        P:00BE 45DA00            move              x:(r2)+,x1
100       P:00BF 47DA00            move              x:(r2)+,y1
101    
102       P:00C0 204264            sub     x1,a      (r2)-n2
103       P:00C1 21847C            sub     y1,b      a1,x0
104       P:00C2 21A4D0            mpy     y0,x0,a   b1,x0
105       P:00C3 2185D8            mpy     y0,x0,b   a1,x1
106       P:00C4 210400            move              a0,x0
107       P:00C5 21A700            move              b1,y1
108       P:00C6 212600            move              b0,y0
109    
110       P:00C7 56DA00            move              x:(r2)+,a
111       P:00C8 57DA00            move              x:(r2)+,b
112       P:00C9 436E00            move              y,l:(r6+n6)
113    
114       P:00CA 67F400            move              #$ffeb,r7
                 00FFEB
115    
116       P:00CC 06DF00            do      n7,fin_ligne_tourne
                 0000DC
117    
118       P:00CE 21B538            add     y,b       b1,r5
119       P:00CF 219D20            add     x,a       a1,n5
120       P:00D0 65E500            move              x:(r5),r5
121    
122       P:00D1 495E00            move              b,l:(r6)+
123       P:00D2 6DED00            move                          y:(r5+n5),r5
124       P:00D3 43D800            move              l:(r0)+,y
125       P:00D4 49E000            move              l:(r0),b
126       P:00D5 43C638            add     y,b       l:(r6)-n6,y
127       P:00D6 494019            rnd     b         b,l:(r0)-n0
128       P:00D7 21BD00            move              b1,n5
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 4



129       P:00D8 49E600            move              l:(r6),b
130    
131    
132       P:00D9 6DED00            move                          y:(r5+n5),r5
133       P:00DA 0AA981            jclr    #1,X:HSR,*
                 0000DA
134       P:00DC 656700            move              r5,X:(r7)
135    
136                      fin_ligne_tourne
137       P:00DD 000000            nop
138                      calcul_line
139       P:00DE 00000C            rts
140    
141    
142                      droite_ab
143       P:00DF 60F400            move              #$100,r0
                 000100
144       P:00E1 61F400            move              #$200,r1
                 000200
145       P:00E3 62F400            move              #$120,r2
                 000120
146       P:00E5 45D800            move              x:(r0)+,x1              ; x
1
147       P:00E6 44D800            move              x:(r0)+,x0              ; y
1
148       P:00E7 56D800            move              x:(r0)+,a               ; x
2
149       P:00E8 57D800            move              x:(r0)+,b               ; y
2
150       P:00E9 63F400            move              #$600,r3                ; d
ans r3 buffer droit
                 000600
151       P:00EB 60F400            move              #$100,r0
                 000100
152       P:00ED 200064            sub     x1,a                              ; c
alcul delta x
153       P:00EE 20004C            sub     x0,b                              ; c
alcul delta y
154       P:00EF 0AF0A3            jpl     positif1                          ; t
est signe du delta y
                 00010E
155       P:00F1 63F400            move              #$300,r3                ; o
n range dans le buffer gauche
                 000300
156       P:00F3 60F400            move              #$102,r0
                 000102
157       P:00F5 20003E            neg     b
158       P:00F6 200036            neg     a
159    
160       P:00F7 21B90B            tst     b         b1,n1
161       P:00F8 0AF0AA            jeq     fin_calcul_buff_dg9
                 00010D
162    
163       P:00FA 73E800            move              x:(r0+n0),n3
164       P:00FB 44E900            move              x:(r1+n1),x0
165       P:00FC 218600            move              a1,y0
166       P:00FD 47E2D0            mpy     y0,x0,a   x:(r2),y1
167       P:00FE 204BCC            mpy     -x0,y1,b  (r3)+n3
168       P:00FF 44CB00            move              x:(r3)+n3,x0
169       P:0100 44CB00            move              x:(r3)+n3,x0
170       P:0101 218500            move              a1,x1
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 5



171       P:0102 210400            move              a0,x0
172       P:0103 21A700            move              b1,y1
173       P:0104 212600            move              b0,y0
174       P:0105 57E213            clr     a         x:(r2),b
175       P:0106 3B0000            move              #0,n3
176       P:0107 56E000            move              x:(r0),a
177       P:0108 06D900            do      n1,fin_calcul_buff_dg9
                 00010C
178       P:010A 545B20            add     x,a       a1,x:(r3)+
179       P:010B 735B00            move              n3,x:(r3)+
180       P:010C 575B38            add     y,b       b,x:(r3)+
181                      fin_calcul_buff_dg9
182       P:010D 00000C            rts
183    
184                      positif1
185       P:010E 21B90B            tst     b         b1,n1
186       P:010F 0AF0AA            jeq     fin_calcul_buff_dg
                 000124
187    
188       P:0111 73E800            move              x:(r0+n0),n3
189       P:0112 44E900            move              x:(r1+n1),x0
190       P:0113 218600            move              a1,y0
191       P:0114 47E2D0            mpy     y0,x0,a   x:(r2),y1
192       P:0115 204BC8            mpy     x0,y1,b   (r3)+n3
193       P:0116 44CB00            move              x:(r3)+n3,x0
194       P:0117 44CB00            move              x:(r3)+n3,x0
195       P:0118 218500            move              a1,x1
196       P:0119 210400            move              a0,x0
197       P:011A 21A700            move              b1,y1
198       P:011B 212600            move              b0,y0
199       P:011C 2F0013            clr     a         #0,b
200       P:011D 3B0000            move              #0,n3
201       P:011E 56E000            move              x:(r0),a
202       P:011F 06D900            do      n1,fin_calcul_buff_dg
                 000123
203       P:0121 545B20            add     x,a       a1,x:(r3)+
204       P:0122 735B00            move              n3,x:(r3)+
205       P:0123 575B38            add     y,b       b,x:(r3)+
206                      fin_calcul_buff_dg
207       P:0124 00000C            rts
208    
209    
210                      droite_bc
211       P:0125 60F400            move              #$102,r0
                 000102
212       P:0127 61F400            move              #$200,r1
                 000200
213       P:0129 62F400            move              #$120,r2
                 000120
214       P:012B 45D800            move              x:(r0)+,x1              ; x
1
215       P:012C 44D800            move              x:(r0)+,x0              ; y
1
216       P:012D 56D800            move              x:(r0)+,a               ; x
2
217       P:012E 57D800            move              x:(r0)+,b               ; y
2
218       P:012F 63F400            move              #$600,r3                ; d
ans r3 buffer droit
                 000600
219       P:0131 60F400            move              #$102,r0
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 6



                 000102
220       P:0133 200064            sub     x1,a                              ; c
alcul delta x
221       P:0134 20004C            sub     x0,b                              ; c
alcul delta y
222       P:0135 0AF0A3            jpl     positif11                         ; t
est signe du delta y
                 000154
223       P:0137 63F400            move              #$300,r3                ; o
n range dans le buffer gauche
                 000300
224       P:0139 60F400            move              #$104,r0
                 000104
225       P:013B 20003E            neg     b
226       P:013C 200036            neg     a
227       P:013D 21B90B            tst     b         b1,n1
228       P:013E 0AF0AA            jeq     fin_calcul_buff_dg19
                 000153
229    
230       P:0140 73E800            move              x:(r0+n0),n3
231       P:0141 44E900            move              x:(r1+n1),x0
232       P:0142 218600            move              a1,y0
233       P:0143 47E2D0            mpy     y0,x0,a   x:(r2),y1
234       P:0144 204BCC            mpy     -x0,y1,b  (r3)+n3
235       P:0145 44CB00            move              x:(r3)+n3,x0
236       P:0146 44CB00            move              x:(r3)+n3,x0
237       P:0147 218500            move              a1,x1
238       P:0148 210400            move              a0,x0
239       P:0149 21A700            move              b1,y1
240       P:014A 212600            move              b0,y0
241       P:014B 57E213            clr     a         x:(r2),b
242       P:014C 73E200            move              x:(r2),n3
243       P:014D 56E000            move              x:(r0),a
244       P:014E 06D900            do      n1,fin_calcul_buff_dg19
                 000152
245       P:0150 545B20            add     x,a       a1,x:(r3)+
246       P:0151 555B38            add     y,b       b1,x:(r3)+
247       P:0152 735B00            move              n3,x:(r3)+
248                      fin_calcul_buff_dg19
249       P:0153 00000C            rts
250    
251    
252                      positif11
253       P:0154 21B90B            tst     b         b1,n1
254       P:0155 0AF0AA            jeq     fin_calcul_buff_dg1
                 00016A
255    
256       P:0157 73E800            move              x:(r0+n0),n3
257       P:0158 44E900            move              x:(r1+n1),x0
258       P:0159 218600            move              a1,y0
259       P:015A 47E2D0            mpy     y0,x0,a   x:(r2),y1
260       P:015B 204BC8            mpy     x0,y1,b   (r3)+n3
261       P:015C 44CB00            move              x:(r3)+n3,x0
262       P:015D 44CB00            move              x:(r3)+n3,x0
263       P:015E 218500            move              a1,x1
264       P:015F 210400            move              a0,x0
265       P:0160 21A700            move              b1,y1
266       P:0161 212600            move              b0,y0
267       P:0162 2F0013            clr     a         #0,b
268       P:0163 73E200            move              x:(r2),n3
269       P:0164 56E000            move              x:(r0),a
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 7



270       P:0165 06D900            do      n1,fin_calcul_buff_dg1
                 000169
271       P:0167 545B20            add     x,a       a1,x:(r3)+
272       P:0168 555B38            add     y,b       b1,x:(r3)+
273       P:0169 735B00            move              n3,x:(r3)+
274                      fin_calcul_buff_dg1
275       P:016A 00000C            rts
276    
277    
278                      droite_cd
279       P:016B 60F400            move              #$104,r0
                 000104
280       P:016D 61F400            move              #$200,r1
                 000200
281       P:016F 62F400            move              #$120,r2
                 000120
282       P:0171 45D800            move              x:(r0)+,x1              ; x
1
283       P:0172 44D800            move              x:(r0)+,x0              ; y
1
284       P:0173 56D800            move              x:(r0)+,a               ; x
2
285       P:0174 57D800            move              x:(r0)+,b               ; y
2
286       P:0175 63F400            move              #$600,r3                ; d
ans r3 buffer droit
                 000600
287       P:0177 60F400            move              #$104,r0
                 000104
288       P:0179 200064            sub     x1,a                              ; c
alcul delta x
289       P:017A 20004C            sub     x0,b                              ; c
alcul delta y
290       P:017B 0AF0A3            jpl     positif111                        ; t
est signe du delta y
                 00019A
291       P:017D 63F400            move              #$300,r3                ; o
n range dans le buffer gauche
                 000300
292       P:017F 60F400            move              #$106,r0
                 000106
293       P:0181 20003E            neg     b
294       P:0182 200036            neg     a
295       P:0183 21B90B            tst     b         b1,n1
296       P:0184 0AF0AA            jeq     fin_calcul_buff_dg29
                 000199
297    
298       P:0186 73E800            move              x:(r0+n0),n3
299       P:0187 44E900            move              x:(r1+n1),x0
300       P:0188 218600            move              a1,y0
301       P:0189 47E2D0            mpy     y0,x0,a   x:(r2),y1
302       P:018A 204BC8            mpy     x0,y1,b   (r3)+n3
303       P:018B 44CB00            move              x:(r3)+n3,x0
304       P:018C 44CB00            move              x:(r3)+n3,x0
305       P:018D 218500            move              a1,x1
306       P:018E 210400            move              a0,x0
307       P:018F 21A700            move              b1,y1
308       P:0190 212600            move              b0,y0
309       P:0191 2F0013            clr     a         #0,b
310       P:0192 73E200            move              x:(r2),n3
311       P:0193 56E000            move              x:(r0),a
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 8



312       P:0194 06D900            do      n1,fin_calcul_buff_dg29
                 000198
313       P:0196 545B20            add     x,a       a1,x:(r3)+
314       P:0197 735B00            move              n3,x:(r3)+
315       P:0198 575B38            add     y,b       b,x:(r3)+
316                      fin_calcul_buff_dg29
317       P:0199 00000C            rts
318                      positif111
319       P:019A 21B90B            tst     b         b1,n1
320       P:019B 0AF0AA            jeq     fin_calcul_buff_dg2
                 0001B0
321    
322       P:019D 73E800            move              x:(r0+n0),n3
323       P:019E 44E900            move              x:(r1+n1),x0
324       P:019F 218600            move              a1,y0
325       P:01A0 47E2D0            mpy     y0,x0,a   x:(r2),y1
326       P:01A1 204BCC            mpy     -x0,y1,b  (r3)+n3
327       P:01A2 44CB00            move              x:(r3)+n3,x0
328       P:01A3 44CB00            move              x:(r3)+n3,x0
329       P:01A4 218500            move              a1,x1
330       P:01A5 210400            move              a0,x0
331       P:01A6 21A700            move              b1,y1
332       P:01A7 212600            move              b0,y0
333       P:01A8 57E213            clr     a         x:(r2),b
334       P:01A9 73E200            move              x:(r2),n3
335       P:01AA 56E000            move              x:(r0),a
336       P:01AB 06D900            do      n1,fin_calcul_buff_dg2
                 0001AF
337       P:01AD 545B20            add     x,a       a1,x:(r3)+
338       P:01AE 735B00            move              n3,x:(r3)+
339       P:01AF 575B38            add     y,b       b,x:(r3)+
340                      fin_calcul_buff_dg2
341       P:01B0 00000C            rts
342    
343    
344    
345                      droite_da
346       P:01B1 60F400            move              #$106,r0
                 000106
347       P:01B3 61F400            move              #$200,r1
                 000200
348       P:01B5 62F400            move              #$120,r2
                 000120
349       P:01B7 45D800            move              x:(r0)+,x1              ; x
1
350       P:01B8 44D800            move              x:(r0)+,x0              ; y
1
351       P:01B9 56D800            move              x:(r0)+,a               ; x
2
352       P:01BA 57D800            move              x:(r0)+,b               ; y
2
353       P:01BB 63F400            move              #$600,r3                ; d
ans r3 buffer droit
                 000600
354       P:01BD 60F400            move              #$106,r0
                 000106
355       P:01BF 200064            sub     x1,a                              ; c
alcul delta x
356       P:01C0 20004C            sub     x0,b                              ; c
alcul delta y
357       P:01C1 0AF0A3            jpl     positif1111                       ; t
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 9



est signe du delta y
                 0001E0
358       P:01C3 63F400            move              #$300,r3                ; o
n range dans le buffer gauche
                 000300
359       P:01C5 60F400            move              #$108,r0
                 000108
360       P:01C7 20003E            neg     b
361       P:01C8 200036            neg     a
362       P:01C9 21B90B            tst     b         b1,n1
363       P:01CA 0AF0AA            jeq     fin_calcul_buff_dg39
                 0001DF
364    
365       P:01CC 73E800            move              x:(r0+n0),n3
366       P:01CD 44E900            move              x:(r1+n1),x0
367       P:01CE 218600            move              a1,y0
368       P:01CF 47E2D0            mpy     y0,x0,a   x:(r2),y1
369       P:01D0 204BC8            mpy     x0,y1,b   (r3)+n3
370       P:01D1 44CB00            move              x:(r3)+n3,x0
371       P:01D2 44CB00            move              x:(r3)+n3,x0
372       P:01D3 218500            move              a1,x1
373       P:01D4 210400            move              a0,x0
374       P:01D5 21A700            move              b1,y1
375       P:01D6 212600            move              b0,y0
376       P:01D7 2F0013            clr     a         #0,b
377       P:01D8 3B0000            move              #0,n3
378       P:01D9 56E000            move              x:(r0),a
379       P:01DA 06D900            do      n1,fin_calcul_buff_dg39
                 0001DE
380       P:01DC 545B20            add     x,a       a1,x:(r3)+
381       P:01DD 555B38            add     y,b       b1,x:(r3)+
382       P:01DE 735B00            move              n3,x:(r3)+
383                      fin_calcul_buff_dg39
384       P:01DF 00000C            rts
385    
386                      positif1111
387       P:01E0 21B90B            tst     b         b1,n1
388       P:01E1 0AF0AA            jeq     fin_calcul_buff_dg3
                 0001F6
389    
390       P:01E3 73E800            move              x:(r0+n0),n3
391       P:01E4 44E900            move              x:(r1+n1),x0
392       P:01E5 218600            move              a1,y0
393       P:01E6 47E2D0            mpy     y0,x0,a   x:(r2),y1
394       P:01E7 204BCC            mpy     -x0,y1,b  (r3)+n3
395       P:01E8 44CB00            move              x:(r3)+n3,x0
396       P:01E9 44CB00            move              x:(r3)+n3,x0
397       P:01EA 218500            move              a1,x1
398       P:01EB 210400            move              a0,x0
399       P:01EC 21A700            move              b1,y1
400       P:01ED 212600            move              b0,y0
401       P:01EE 57E213            clr     a         x:(r2),b
402       P:01EF 3B0000            move              #0,n3
403       P:01F0 56E000            move              x:(r0),a
404       P:01F1 06D900            do      n1,fin_calcul_buff_dg3
                 0001F5
405       P:01F3 545B20            add     x,a       a1,x:(r3)+
406       P:01F4 555B38            add     y,b       b1,x:(r3)+
407       P:01F5 735B00            move              n3,x:(r3)+
408                      fin_calcul_buff_dg3
409       P:01F6 00000C            rts
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 10



410    
411    
412    
413    
414                      calcul_col
415       P:01F7 22F300            move              r7,r3
416       P:01F8 221400            move              r0,r4
417       P:01F9 45D800            move              x:(r0)+,x1              ; x
1
418       P:01FA 44D800            move              x:(r0)+,x0              ; y
1
419       P:01FB 56D800            move              x:(r0)+,a               ; x
2
420       P:01FC 57D800            move              x:(r0)+,b               ; y
2
421       P:01FD 45DF00            move              x:(r7)+,x1
422       P:01FE 56DF00            move              x:(r7)+,a
423    
424       P:01FF 62F400            move              #$a00,r2                ; d
ans r3 buffer droit
                 000A00
425       P:0201 227764            sub     x1,a      r3,r7
426       P:0202 22904C            sub     x0,b      r4,r0                   ; c
alcul delta y
427       P:0203 0AF0A3            jpl     pos_col                           ; t
est signe du delta y
                 000209
428       P:0205 62F400            move              #$900,r2                ; o
n range dans le buffer gauche
                 000900
429       P:0207 22D03E            neg     b         r6,r0
430       P:0208 22B736            neg     a         r5,r7
431                      pos_col
432       P:0209 21B90B            tst     b         b1,n1
433       P:020A 0AF0AA            jeq     fin_calcul_col
                 000219
434    
435       P:020C 72E800            move              x:(r0+n0),n2
436       P:020D 44E900            move              x:(r1+n1),x0
437       P:020E 218600            move              a1,y0
438       P:020F 204AD0            mpy     y0,x0,a   (r2)+n2
439       P:0210 57E700            move              x:(r7),b
440       P:0211 218500            move              a1,x1
441       P:0212 210400            move              a0,x0
442       P:0213 200001            tfr     b,a
443       P:0214 06D900            do      n1,fin_calcul_col
                 000218
444       P:0216 545A28            add     x,b       a1,x:(r2)+
445       P:0217 200001            tfr     b,a
446       P:0218 200011            rnd     a
447                      fin_calcul_col
448       P:0219 00000C            rts
449    
450                      receive_img
451       P:021A 60F400            move              #$a00,r0
                 000A00
452       P:021C 46F000            move              x:$120,y0
                 000120
453       P:021E 06C600            do      y0,re1
                 000227
454    
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 11



455       P:0220 06C600            do      y0,re0
                 000224
456       P:0222 0BF080            jsr     load
                 000243
457       P:0224 5C5800            move                          a1,y:(r0)+
458                      re0
459       P:0225 0BF080            jsr     load
                 000243
460       P:0227 5C5800            move                          a1,y:(r0)+
461                      re1
462       P:0228 06C600            do      y0,re10
                 00022C
463       P:022A 0BF080            jsr     load
                 000243
464       P:022C 5C5800            move                          a1,y:(r0)+
465                      re10
466       P:022D 0BF080            jsr     load
                 000243
467       P:022F 5C5800            move                          a1,y:(r0)+
468    
469       P:0230 00000C            rts
470    
471                      receive_1surX
472       P:0231 60F400            move              #$200,r0
                 000200
473       P:0233 060081            do      #256,re011
                 000237
474       P:0235 0BF080            jsr     load
                 000243
475       P:0237 545800            move              a1,x:(r0)+
476                      re011
477       P:0238 00000C            rts
478    
479       P:0239 0AA981  send      jclr    #1,X:HSR,*
                 000239
480       P:023B 547000            move              a1,X:HTX
                 00FFEB
481       P:023D 00000C            rts
482    
483       P:023E 0AA981  send_x1   jclr    #1,X:HSR,*
                 00023E
484       P:0240 457000            move              x1,X:HTX
                 00FFEB
485       P:0242 00000C            rts
486    
487                      load
488       P:0243 08F4A0            movep             #1,X:PBC
                 000001
489       P:0245 0AA980            jclr    #0,x:HSR,load
                 000243
490       P:0247 54F000            move              x:HTX,a1
                 00FFEB
491       P:0249 00000C            rts
492    
493                      tab_line
494       P:024A 200013            clr     a
495       P:024B 2C0100            move              #1,a1
496       P:024C 2D0100            move              #1,b1
497       P:024D 21A400            move              b1,x0
498       P:024E 45F000            move              x:$120,x1
                 000120
Motorola DSP56000 Assembler  Version 4.1.1   100-06-0412:00:36  12:00:36  
GOURAUD2.ASM  Page 12



499       P:0250 200060            add     x1,a
500       P:0251 218500            move              a1,x1
501       P:0252 300000            move              #$0,r0
502       P:0253 2F0013            clr     a         #0,b
503    
504       P:0254 060081            do      #256,fin_tab_line
                 00025D
505       P:0256 200013            clr     a
506       P:0257 50F400            move              #$a00*2,a0
                 001400
507       P:0259 21A700            move              b1,y1
508       P:025A 2000F2            mac     x1,y1,a
509       P:025B 200022            asr     a
510       P:025C 505800            move              a0,x:(r0)+
511       P:025D 200048            add     x0,b
512    
513                      fin_tab_line
514       P:025E 00000C            rts
515    
516                      receive_palette
517       P:025F 300000            move              #0,r0
518       P:0260 060082            do      #512,fin_receive_palette
                 000263
519       P:0262 0D0243            jsr     load
520       P:0263 5C5800            move                          a1,y:(r0)+
521                      fin_receive_palette
522       P:0264 00000C            rts
523    
524    

0    Errors
0    Warnings
