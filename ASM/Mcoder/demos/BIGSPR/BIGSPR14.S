	OPT	T-
FINAL	EQU	0	;0=CODE EN ABSOLU
LOAD_TEXT = 0		;0=CHARGE SCROLLER.BIN
tempo	equ	4
TIMERB	EQU	0	;0=AUTORISE TIMER B
;
; programme d'affichage du sprite de Scoopex
;
fastcls = 1		;0=efface tout l'‚cran,autre=efface les sprites
TAILLE = 16		;HAUTEUR DU SCROLLER
STEP = 4		;PAS DU SCROLLER
top = $80000
ecran0 = top-32000
ecran1 = ecran0-32000
nbspr = 22
MAX = 64

CPU	macro
;	cmp.b	#$F,$fffffc02.w
;	bne.s	\@
;	move	\1,$ffff8240.w
;\@
	endm
;
; A0=ptr table X
; A1=ptr table Y
; A4=base routines
; A5=adresse retour
; A6=adresse ‚cran
;
; A2=INCX
; A3=INCY
; USP=ADRESSE ECRAN
;
aff	macro
	lea	\@(pc),a5
	JMP	(A4)
\@
	endm

	offset	$300
ecran:	ds.l	1
ptbuf:	ds.l	1
ptrmus	ds.l	1
ptrdeg	ds.l	1
cptdeg	ds.w	1
lastkey	ds.b	1
sync:	ds.b	1
	even
ANGX	DS.W	1
ANGY	DS.W	1
INCX	DS.W	1
INCY	DS.W	1
DEPX	DS.W	1
DEPY	DS.W	1

L5E94	DS.L	1
L5E9A	DS.W	1
L5E9C	DS.L	1
L5EA6	DS.W	1
L5E96	DS.L	1
PTRTXT	DS.L	1
	section	text

	IFEQ	FINAL
	ORG	$6000
	bra	skipmes
	DC.B	"HE, GUY ! THE SPRITES WERE GENERATED BY MY CODE "
	DC.B	"GENERATOR V2.25 SO THE SPRITE ROUT IS NOT VERY "
	DC.B	"INTERESTING TO DISASSEMBLE. BUT IF YOU FIND ANY "
	DC.B	"IMPROVEMENT, TRY TO CONTACT ZUUL OR THE REPLICANTS "
	DC.B	"SO I'LL KNOW WHAT I COULD IMPROVE. "
	DC.B	"SOME NUMBERS NOW : "
	DC.B	"THE MUSIC TAKES 1/2 RASTERLINE (WHAT DO YOU THINK OF "
	DC.B	"THAT MAD MAX ???) "
	DC.B	"THE SCROLLER TAKES 5 RASTERLINES (HIGHLY OPTIMISED), "
	DC.B	"THE COLOURS IN THE SCROLL TAKES 5 RASTERLINES, "
	DC.B	"CLEARING THE SPRITES TAKES 70-80 RASTERLINES, "
	DC.B	"THE REST IS USED WHILE DISPLAYING THE SPRITES !!! "
	DC.B	"IN FACT THERE ARE 2-3 RASTERLINES FREE IN THE WORST "
	DC.B	"CASE BUT THE CODING IS SO BORINNNNGGG.... "
	even
skipmes:
	ELSEIF

	move	sr,d0
	and	#$2000,d0
	bne.s	super
	clr.l	-(sp)
	move	#$20,-(sp)
	trap	#1
	addq	#6,sp
super:
	ENDC

	move	#$2700,sr
	moveq	#0,d0
	move.l	d0,a0
	movep.l	d0,$fffffa01(a0)
	movep.l	d0,$fffffa09(a0)
	movep.l	d0,$fffffa11(a0)
	movep.l	d0,$fffffa19(a0)

	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	movem.l	d0-d7,$ffff8240.w

;	BSR	debugger

	IFEQ	TIMERB
	MOVE.B	#$40,$FFFFFA17.W
;	MOVE.L	#HBL,$120.W
;	MOVE.B	#199-16,$FFFFFA21.W
;	CLR.B	$FFFFFA1B.W
	OR.B	#1,$FFFFFA07.W
	OR.B	#1,$FFFFFA13.W
	move.l	#vbl1,$70.w
	ELSEIF
	move.l	#vbl,$70.w
	ENDC
;
; initialise variables, buffers
;
	move.l	#ecran0,ecran\w
	lea	ecran1,a0
	lea	top,a1
	moveq	#0,d0
bigcls	move.l	d0,(a0)+
	cmp.l	a1,a0
	blo.s	bigcls

	LEA	TABLEX(PC),A0
	LEA	TABLEX2(PC),A1
	LEA	AFFICHE,A2
GENX:	MOVE	(A0),D0
	BMI.S	ENDX
	MOVEQ	#-16,D1
	AND	D0,D1
	EOR	D1,D0
	ADD	D0,D0
	LSR	#1,D1
	MOVE	D1,(A0)+		;OFFSET X
	MOVE	(A2,D0.W),(A1)+		;DECALAGE*16
	BRA.S	GENX
ENDX:
	lea	buffer1,SP
	lea	buffer2,a0
	PEA	reteff(PC)
	move.l	#reteff,-(a0)
	move.l	a0,ptbuf\w

	LEA	AFFICHE+32,A0
	LEA	$500\W,A1
	LEA	ENDAFF,A2
COPYAFF:MOVE	(A0)+,(A1)+
	CMP.L	A2,A0
	BLO.S	COPYAFF

	CLR	ANGX\W
	CLR	ANGY\W
	MOVE	#MAX/2,INCX\W
	MOVE	#MAX/2,INCY\W
	MOVE	#4,DEPX\W
	MOVE	#4,DEPY\W
;
; PREDECALE LA FONTE
;
	MOVEQ	#16,D1
	LEA	PREDEC,A1
NXTDEC:
	LEA	FONTE,A0
NXTCAR:
	MOVEQ	#16-1,D7
DECAL:
	MOVEQ	#0,D0
	MOVE	(A0)+,D0
	ROR.L	D1,D0
	MOVE.L	D0,(A1)+
	DBRA	D7,DECAL

	CMP.L	#FINFONTE,A0
	BLO.S	NXTCAR

	SUBQ	#STEP,D1
	BHI.S	NXTDEC

	IFNE	FINAL
	CMP.L	#FINPREDEC,A1
	BLO.S	1$
	MOVEQ	#-1,D0
2$	MOVE	D0,$FFFF8240.W
	DBRA	D0,2$
1$
	ENDC

	IFNE	LOAD_TEXT
;
; INITIALISE LE SCROLLER
;
	LEA	TEXTE,A0
	MOVEQ	#0,D0
CONV	MOVE.B	(A0),D0
	BMI	FINCONV
	MOVE.B	L5D94(PC,D0.W),(A0)+
	BRA.S	CONV
L5D94
	DC.B	$2E,$24,$24,$24,$24,$24,$24,$24
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24	;10
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24
	DC.B	$24,$29,$2D,$24,$24,$24,$24,$2D	;20
	DC.B	$25,$26,$24,$32,$2B,$33,$27,$24
	DC.B	$23,$1A,$1B,$1C,$1D,$1E,$1F,$20	;30
	DC.B	$21,$22,$28,$2C,$24,$24,$24,$2A
	DC.B	$24,0,1,2,3,4,5,6		;40
	DC.B	7,8,9,$A,$B,$C,$D,$E
	DC.B	$F,$10,$11,$12,$13,$14,$15,$16	;50
	DC.B	$17,$18,$19,$24,$24,$24,$24,$24
	DC.B	$24,$30,$31,$24,$24,$24,$24,$24	;60
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24	;70
	DC.B	$24,$24,$24,$24,$24,$24,$24,$24

FINCONV:
	ENDC

	LEA	TEXTE,A0
	MOVEQ	#0,D0
	MOVE.B	(A0)+,D0
	MOVE.L	A0,PTRTXT\W
	ASL	#6+1,D0
	ADD.L	#PREDEC,D0
	MOVE.L	D0,L5E96\W

	CLR.L	L5E94\W
	CLR	L5E9A\W
	MOVE.L	#L6ECC,L5E9C\W
	CLR	L5EA6\W

	LEA	L6ECC,A0
	MOVEQ	#0,D0
	MOVE	#(16/STEP)*TAILLE*80/4-1,D1
L84C8	MOVE.L	D0,(A0)+
	DBF	D1,L84C8

	move.l	ecran\w,d0
	lsr	#8,d0
	move.l	d0,$ffff8200.w

	BSR	INITMUS

	move.l	#debut_mus,ptrmus\w
	clr	bouclage
genmus
	cmp	#3,bouclage
	beq.s	bloque3
	clr	bouclage
	clr	boucle2
bloque3:
	clr.b	regb
	BSR	PLAYMUS

	lea	reg0(pc),a0
	move.l	ptrmus\w,a1
	moveq	#12-1,d0
copy:	move.b	2(a0),(a1)+
	addq	#4,a0
	dbra	d0,copy
	move.l	a1,ptrmus\w

	cmp	#2,boucle2
	bne.s	.notfin
	cmp	#3,bouclage
	beq.s	finmus
.notfin

	bra.s	genmus
bouclage:dc.w	0
boucle2:dc.w	0
finmus:
	cmp.l	#fin_mus,ptrmus\w
	beq.s	okmus
	illegal
okmus
	move	#$2300,sr

	move	#tempo,cptdeg\w		;toutes les 2 secondes
	lea	DEGRADE(pc),a3
	move.l	a3,ptrdeg\w

	move.l	#debut_mus,ptrmus\w
	clr.b	sync\w
bcl1:
	tst.b	sync\w
	beq.s	bcl1
	clr.b	sync\w
	move.l	#vbl,$70.w
	clr.b	$ffff8260.w
	move.b	#2,$ffff820a.w
	movem.l	palette(pc),d0-d7
	movem.l	d0-d7,$ffff8240.w

boucle:
	CPU	#$555
;
; musique
;
	move.l	ptrmus\w,a0
x	set	0
	rept	11
	move.b	#x,$ffff8800.w
	move.b	(a0)+,$ffff8802.w
x	set	x+1
	endr
	move.b	(a0)+,d0
	beq.s	.no11
	move.b	#11,$ffff8800.w
	move.b	d0,$ffff8802.w
	MOVE.l	#$0C000000,$FFFF8800.W
	MOVE.l	#$0D000A00,$FFFF8800.W	;triangulaire
.no11
	cmp.l	#fin_mus,a0
	bne.s	2$
	lea	debut_mus+12+36+12,a0
2$	move.l	a0,ptrmus\w
	CPU	#$700

	ifeq	fastcls
	lea	buffer1,sp

	move.l	ecran\w,a0
	lea	32000(a0),a0
	move.l	a0,usp
	move.l	#reteff,$10.w
	move	#$300,sr
	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	move.l	d0,a0
	move.l	d0,a1
	move.l	d0,a2
	move.l	d0,a3
	move.l	d0,a4
	move.l	d0,a5
	move.l	d0,a6

x	set	0
	rept	32000/4/15
	movem.l	d0-d7/a0-a6,-(a7)
x	set	x+15*4
	endr
	movem.l	d0-d4,-(a7)
x	set	x+5*4
	ifne	x-32000
	fail
	endc

	illegal
reteff:
	addq	#6,sp
	elseif
	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	rts
reteff:
	pea	reteff(pc)
	endc

	CPU	#$007
	IFNE	TIMERB
	move.b	ecran+2.w,$ffff8203.w	;poids faible seul change
	ENDC

	LEA	TABLEX(PC),A0
	LEA	TABLEY(PC),A1
	MOVEM	ANGX\W,D0/D1
	and	#511*2,d0
	and	#511*2,d1
	ADD	D0,A0
	ADD	D1,A1
	ADD	DEPX\W,D0
	ADD	DEPY\W,D1
	MOVEM	D0/D1,ANGX\W

	MOVEM	INCX\W,A2/A3
	move.l	ecran\w,A6
	MOVE.L	A6,USP
X	SET	0
	rept	nbspr
	ifne	X
	move.l	USP,a6
	ADD	A2,A0
	endc
X	SET	X+1
	ADD	(A0),A6			;OFFSET EN X
	ifeq	X-nbspr
	ADD	(A1,A3.L),A6
	ELSEIF
	IFNE	X-1
	ADD	A3,A1
	endc
	ADD	(A1),A6			;Y*160
	ENDC
	MOVE	TABLEX2-TABLEX(A0),A4	;adresse branchement
	aff
	endr

	move.l	ptbuf\w,A0
	move.l	sp,ptbuf\w
	MOVE.L	A0,SP

	IFEQ	TIMERB
	move.b	ecran+2.w,$ffff8203.w	;poids faible seul change
	ENDC
;
; SCROLLEUR 1 PLAN !!!!
;
	CPU	#$007
	MOVE.L	L5E96\W,A0		;PTR FONTE COURANT
	ADD.L	L5E94\W,A0

	MOVE.L	L5E9C\W,A1
	ADD	L5E9A\W,A1

	CPU	#$700
;	MOVE.L	ecran\w,A2
	MOVE.L	USP,A2			;GAIN DE CYCLES...

	cmp.b	#$F,$fffffc02.w
	bne.s	.pal
	move	#$222,$ffff8240.w
.pal
;	LEA	DEGRADE(pc),A3
	move.l	ptrdeg\w,a3
	subq	#1,cptdeg\w
	bne.s	.notch
	move	#tempo,cptdeg\w		;toutes les 2 secondes
	lea	4*16-4(a3),a3
	cmp.l	#findeg,a3
	blo.s	.chg
	lea	DEGRADE(pc),a3
.chg	move.l	a3,ptrdeg\w
.notch

1$
	tst.b	sync\w
	beq.s	1$
	clr	$ffff8240.w
	clr.b	sync\w
Z	SET	32

Y	SET	(200-16)*160+6
X	SET	0
	REPT	TAILLE*152/8

	MOVE	(A1)+,X+Y(A2)
X	SET	X+8

	IFEQ	X-X/160*160-152

	MOVE.L	(A0)+,D0
	OR	(A1),D0
	MOVE	D0,X+Y(A2)
	SWAP	D0
	MOVE.L	D0,-40(A1)
	MOVE.L	D0,(A1)
X	SET	X+8

	IFNE	X-TAILLE*160
	LEA	40-2+4(A1),A1
	ENDC

	ENDC
	ENDR
	CPU	#$070

	ADD.L	#TAILLE*80,L5E9C\W
	ADD.L	#(FINFONTE-FONTE)*2,L5E94\W
	CMP.L	#(FINFONTE-FONTE)*2*(16/STEP),L5E94\W	;SCROLLER 4 EN 4
	BLO.S	L5102
	CLR.L	L5E94\W
	MOVE.L	#L6ECC,L5E9C\W

	ADDQ	#2,L5E9A\W
	CMP	#40,L5E9A\W
	BNE.S	L50BC
	CLR	L5E9A\W
L50BC	NOT	L5EA6\W
	BEQ.S	L50D4
	ADD.L	#2*2*TAILLE,L5E96\W
	BRA.S	L5102
L50D4
	MOVE.L	PTRTXT\W,A0
	MOVEQ	#0,D0
	MOVE.B	(A0)+,D0
	BPL.S	L50F8
	LEA	TEXTE,A0
	MOVE.B	(A0)+,D0
L50F8	MOVE.L	A0,PTRTXT\W
	ASL	#6+1,D0
	ADD.L	#PREDEC,D0
	MOVE.L	D0,L5E96\W
L5102
	eor.l	#ecran0^ecran1,ecran\w

;	clr	$ffff8240.w
	moveq	#0,d0
	move.b	$fffffc02.w,d0
	cmp.b	lastkey\w,d0
	beq	boucle
	move.b	d0,lastkey\w
	sub.b	#$3B,D0
	CMP.B	#$43-$3B,D0
	BHS	boucle
	asl	#4,d0
	jmp	keys(pc,d0.w)
keys:
; F1
	CMP	#$10,DEPX\W
	BEQ.S	nokey
	ADDQ	#2,DEPX\W
	bra	boucle
; F2
	tst	DEPX\W
;	cmp	#2,DEPX\W
	BEQ.S	nokey
	SUBQ	#2,DEPX\W
	bra	boucle
	DS.W	1
; F3
	CMP	#$10,DEPY\W
	BEQ.S	nokey
	ADDQ	#2,DEPY\W
	bra	boucle
; F4
	tst	DEPY\W
	BEQ.S	nokey
	SUBQ	#2,DEPY\W
	bra	boucle
	ds.w	1
; F5
	CMP	#MAX,INCX\W
	BEQ.S	nokey
	ADDQ	#2,INCX\W
	bra	boucle
; F6
	cmp	#2,INCX\W
	BEQ.S	nokey
	SUBQ	#2,INCX\W
	bra	boucle
; F7
	CMP	#MAX,INCY\W
	BEQ.S	nokey
	ADDQ	#2,INCY\W
	bra	boucle
; F8
	TST	INCY\W
	BEQ.S	nokey
	SUBQ	#2,INCY\W
nokey:
	bra	boucle

DEG	MACRO
X	SET	(\2-\1)/7
	DC.W	\1+X,\1+X
	DC.W	\1+X*2,\1+X*2
	DC.W	\1+X*3,\1+X*3
	DC.W	\1+X*4,\1+X*4
	DC.W	\1+X*5,\1+X*5
	DC.W	\1+X*6,\1+X*6
	DC.W	\1+X*7,\1+X*7
	DC.W	\1+X*7,\1+X*7
	DC.W	\1+X*6,\1+X*6
	DC.W	\1+X*5,\1+X*5
	DC.W	\1+X*4,\1+X*4
	DC.W	\1+X*3,\1+X*3
	DC.W	\1+X*2,\1+X*2
	DC.W	\1+X*1,\1+X*1
	DC.W	\1,\1
	ENDM

DEGRADE:
	incbin	degrade.img
findeg

vbl:
	IFEQ	TIMERB
	MOVE.L	#HBL,$120.W
	MOVE.B	#199-15,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	rte
HBL:	CLR.B	$FFFFFA1B.W
	MOVE.B	#1,$FFFFFA21.W
	MOVE.L	#HBL2,$120.W
	MOVE.B	#8,$FFFFFA1B.W
	addq.b	#1,sync\w
	RTE

PAL	MACRO
	MOVE.L	(A3)+,A4
	LEA	$FFFF8250.W,A5
	MOVE.L	A4,(A5)+
	MOVE.L	A4,(A5)+
	MOVE.L	A4,(A5)+
	MOVE.L	A4,(A5)+
	RTE
	ENDM
HBL2	MOVE.L	#HBL3,$120.W
	PAL
HBL3	MOVE.L	#HBL4,$120.W
	PAL
HBL4	MOVE.L	#HBL5,$120.W
	PAL
HBL5	MOVE.L	#HBL6,$120.W
	PAL
HBL6	MOVE.L	#HBL7,$120.W
	PAL
HBL7	MOVE.L	#HBL8,$120.W
	PAL
HBL8	MOVE.L	#HBL9,$120.W
	PAL
HBL9	MOVE.L	#HBL10,$120.W
	PAL
HBL10	MOVE.L	#HBL11,$120.W
	PAL
HBL11	MOVE.L	#HBL12,$120.W
	PAL
HBL12	MOVE.L	#HBL13,$120.W
	PAL
HBL13	MOVE.L	#HBL14,$120.W
	PAL
HBL14	MOVE.L	#HBL15,$120.W
	PAL
HBL15	MOVE.L	#HBL16,$120.W
	PAL
HBL16
	CLR.B	$FFFFFA1B.W
	PAL

vbl1:
	ENDC
	addq.b	#1,sync\w
	rte

palette:
	DC.W	$000,$777,$740,$520,$747,$605,$323,$555
	rept	8
	dc.w	$444
	endr
;	DC.W	$444,$420,$300,$423,$302,$101,$222,$777

	ds.b	8*nbspr+50
buffer1:
	ds.b	8*nbspr+50
buffer2:

	INCLUDE	SINUS.S
TABLEX2	DS.W	512*3


;debugger:incbin	debugger.bin

;
; FONTE !!!
;
FONTE:
	DC.L	$3FF0FFF,$1FFF3FFF	;A
	DC.L	$3FFF7FFF,$7FC07F80
	DC.L	$7F807FFF,$7FFF7FFF
	DC.L	$7FFF7FFF,$7F803F00
	DC.L	$FFC0FFF0,$FFF8FFFC
	DC.L	$FFFCFFFE,$3FE01FE
	DC.L	$1FEFFFE,$FFFEFFFE
	DC.L	$FFFEFFFE,$1FE00FC
	DC.L	$3FFF7FFF,$7FFF7FFF	;B
	DC.L	$7FFF7F80,$7F807FFF
	DC.L	$7FFF7FFF,$7F807F80
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFE0FFF8,$FFFCFFFC
	DC.L	$FFFE00FE,$7EFFFC
	DC.L	$FFFCFFFE,$7E00FE
	DC.L	$FFFCFFFC,$FFF8FFE0
	DC.L	$3FF0FFF,$1FFF3FFF	;C
	DC.L	$3FFF7FFF,$7FFF7F80
	DC.L	$7F807FFF,$7FFF3FFF
	DC.L	$3FFF1FFF,$FFF03FF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFC0000
	DC.L	$FFFC,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$3FFF7FFF,$7FFF7FFF	;D
	DC.L	$7FFF7FFF,$7FFF7F80
	DC.L	$7F807FFF,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFC0FFF0,$FFF8FFFC
	DC.L	$FFFCFFFE,$FFFE01FE
	DC.L	$1FEFFFE,$FFFEFFFC
	DC.L	$FFFCFFF8,$FFF0FFC0
	DC.L	$3FFF7FFF,$7FFF7FFF	;E
	DC.L	$7FFF7F80,$7FFF7FFF
	DC.L	$7FFF7FFF,$7F807FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFC0000,$FFF0FFF8
	DC.L	$FFF8FFF0,$FFFC
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$3FFF7FFF,$7FFF7FFF	;F
	DC.L	$7FFF7F80,$7FFF7FFF
	DC.L	$7FFF7FFF,$7F807F80
	DC.L	$7F807F80,$7F803F00
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFC0000,$FFF0FFF8
	DC.L	$FFF8FFF0,0
	DC.L	0,0
	DC.L	$3FF0FFF,$1FFF3FFF	;G
	DC.L	$7FFF7FFF,$7F807F01
	DC.L	$7F037F03,$7F017F80
	DC.L	$3FFF3FFF,$1FFF07FF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFEFFFC,$FFFC
	DC.L	$FFFEFFFE,$FFFE007E
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$3F007F80,$7F807F80	;H
	DC.L	$7F807F80,$7FFF7FFF
	DC.L	$7FFF7FFF,$7F807F80
	DC.L	$7F807F80,$7F803F00
	DC.L	$FC01FE,$1FE01FE
	DC.L	$1FE01FE,$FFFEFFFE
	DC.L	$FFFEFFFE,$1FE01FE
	DC.L	$1FE01FE,$1FE00FC
	DC.L	$FFF1FFF,$1FFF1FFF	;I
	DC.L	$1FFF0FFF,$1F001F
	DC.L	$1F001F,$FFF1FFF
	DC.L	$1FFF1FFF,$1FFF0FFF
	DC.L	$FFF0FFF8,$FFF8FFF8
	DC.L	$FFF8FFF0,$F000F000
	DC.L	$F000F000,$FFF0FFF8
	DC.L	$FFF8FFF8,$FFF8FFF0
	DC.L	$3FFF7FFF,$7FFF7FFF	;J
	DC.L	$7FFF7FFF,$3FFF0000
	DC.L	$3FFF,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFE01FE
	DC.L	$1FEFFFE,$FFFEFFFC
	DC.L	$FFFCFFF8,$FFF0FFC0
	DC.L	$3F007F80,$7F807F80	;K
	DC.L	$7F807FFF,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF7F80
	DC.L	$7F807F80,$7F803F00
	DC.L	$1F807FC,$FF81FF0
	DC.L	$3FE0FFC0,$FF80FF00
	DC.L	$FF00FF80,$FFC03FE0
	DC.L	$1FF00FF8,$7FC01F8
	DC.L	$3F807FC0,$7FC07FC0	;L
	DC.L	$7FC07FC0,$7FC07FC0
	DC.L	$7FC07FC0,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	0,0
	DC.L	0,0
	DC.L	0,$FFFCFFFE
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$3F007FC0,$7FE07FF0	;M
	DC.L	$7FF87FFC,$7FFE7FFF
	DC.L	$7FFF7FFF,$7FBF7F9F
	DC.L	$7F8F7F87,$7F813F00
	DC.L	$FC03FE,$7FE0FFE
	DC.L	$1FFE3FFE,$7FFEFFFE
	DC.L	$FFFEFFFE,$FDFEF9FE
	DC.L	$F1FEE1FE,$81FE00FC
	DC.L	$3FF87FFE,$7FFF7FFF	;N
	DC.L	$7FFF7FFF,$7FFF7FBF
	DC.L	$7F9F7F8F,$7F877F83
	DC.L	$7F817F80,$7F803F00
	DC.L	$FC01FE,$1FE81FE
	DC.L	$C1FEE1FE,$F1FEF9FE
	DC.L	$FDFEFFFE,$FFFEFFFE
	DC.L	$FFFEFFFE,$7FFE1FFC
	DC.L	$3FF0FFF,$1FFF3FFF	;O
	DC.L	$3FFF7FFF,$7FC07F80
	DC.L	$7F807FC0,$7FFF3FFF
	DC.L	$3FFF1FFF,$FFF03FF
	DC.L	$FFC0FFF0,$FFF8FFFC
	DC.L	$FFFCFFFE,$3FE01FE
	DC.L	$1FE03FE,$FFFEFFFC
	DC.L	$FFFCFFF8,$FFF0FFC0
	DC.L	$3FFF7FFF,$7FFF7FFF	;P
	DC.L	$7FFF7F80,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF7F80
	DC.L	$7F807F80,$7F803F00
	DC.L	$FFE0FFF8,$FFFCFFFC
	DC.L	$FFFE00FE,$FFFEFFFC
	DC.L	$FFFCFFF8,$FFE00000
	DC.L	0,0
	DC.L	$3FF0FFF,$1FFF3FFF	;Q
	DC.L	$3FFF7FFF,$7F807F00
	DC.L	$7F007F80,$7FFF3FFF
	DC.L	$3FFF1FFF,$FFF03FF
	DC.L	$FFC0FFF0,$FFF8FFFC
	DC.L	$FFFCFFFE,$1FE00FE
	DC.L	$7E7FBE,$BFDEDFEE
	DC.L	$EFF4F7F8,$FBFCFDFE
	DC.L	$3FFF7FFF,$7FFF7FFF	;R
	DC.L	$7FFF7F80,$7FFF7FFF
	DC.L	$7FFF7FFF,$7FFF7F80
	DC.L	$7F807F80,$7F803F00
	DC.L	$FFE0FFF8,$FFFCFFFC
	DC.L	$FFFE007E,$FFFEFFFE
	DC.L	$FFFCFFFC,$FFF83FE0
	DC.L	$1FF00FF8,$7FC01F8
	DC.L	$FFF3FFF,$7FFF7FFF	;S
	DC.L	$7FFF7FFF,$3FFF1FFF
	DC.L	$7FF00FF,$3FFF7FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFEFFFC,$F000FE00
	DC.L	$FFC0FFF8,$FFFCFFFE
	DC.L	$FFFEFFFE,$FFFCFFF0
	DC.L	$3FFF7FFF,$7FFF7FFF	;T
	DC.L	$7FFF7FFF,$3FFF001F
	DC.L	$1F001F,$1F001F
	DC.L	$1F001F,$1F000F
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFCF000
	DC.L	$F000F000,$F000F000
	DC.L	$F000F000,$F000E000
	DC.L	$3F007F80,$7F807F80	;U
	DC.L	$7F807F80,$7F807F80
	DC.L	$7FC07FFF,$7FFF3FFF
	DC.L	$3FFF1FFF,$FFF03FF
	DC.L	$FC01FE,$1FE01FE
	DC.L	$1FE01FE,$1FE01FE
	DC.L	$3FEFFFE,$FFFEFFFC
	DC.L	$FFFCFFF8,$FFF0FFC0
	DC.L	$3F007FC0,$3FE01FF0	;V
	DC.L	$FF807FC,$3FE01FF
	DC.L	$FF007F,$3F001F
	DC.L	$F0007,$30001
	DC.L	$FC03FE,$7FC0FF8
	DC.L	$1FF03FE0,$7FC0FF80
	DC.L	$FF00FE00,$FC00F800
	DC.L	$F000E000,$C0008000
	DC.L	$3F007F80,$7F817F83	;W
	DC.L	$7F877F8F,$7F9F7FBF
	DC.L	$7FFF7FFF,$7FFF3FFE
	DC.L	$3FFC1FF8,$FF003C0
	DC.L	$FC01FE,$81FEC1FE
	DC.L	$E1FEF1FE,$F9FEFDFE
	DC.L	$FFFEFFFE,$FFFE7FFC
	DC.L	$3FFC1FF8,$FF003C0
	DC.L	$1F803FE0,$1FF00FF8	;X
	DC.L	$7FC03FF,$1FF00FF
	DC.L	$FF01FF,$3FF07FC
	DC.L	$FF81FF0,$3FE01F80
	DC.L	$1F807FC,$FF81FF0
	DC.L	$3FE0FFC0,$FF80FF00
	DC.L	$FF00FF80,$FFC03FE0
	DC.L	$1FF00FF8,$7FC01F8
	DC.L	$3F007FC0,$3FE01FF0	;Y
	DC.L	$FF807FC,$3FE01FF
	DC.L	$FF007F,$3F001F
	DC.L	$1F001F,$1F000F
	DC.L	$FC03FE,$7FC0FF8
	DC.L	$1FF03FE0,$7FC0FF80
	DC.L	$FF00FE00,$FC00F800
	DC.L	$F800F800,$F800F000
	DC.L	$3FFF7FFF,$7FFF7FFF	;Z
	DC.L	$7FFF7FFF,$3FFF007F
	DC.L	$FF01FF,$3FF07FF
	DC.L	$FFF1FFF,$3FFF7FFF
	DC.L	$FFFEFFFC,$FFF8FFF0
	DC.L	$FFE0FFC0,$FF80FF00
	DC.L	$FE00FFFC,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$7000F,$F000F		;1
	DC.L	$F000F,$70000
	DC.L	0,0
	DC.L	0,0
	DC.L	$FFE0FFF0,$FFF0FFF0
	DC.L	$FFF0FFF0,$FFF00FF0
	DC.L	$FF00FF0,$FF00FF0
	DC.L	$FF00FF0,$FF007E0
	DC.L	$3FFF7FFF,$7FFF7FFF	;2
	DC.L	$7FFF7FFF,$3FFF007F
	DC.L	$FF01FF,$3FF07FF
	DC.L	$FFF1FFF,$3FFF7FFF
	DC.L	$FFF8FFFC,$FFFEFFFE
	DC.L	$FFFEFFFC,$FFF8FFF0
	DC.L	$FFE0FFFC,$FFFEFFFE
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$3FFF7FFF,$7FFF7FFF	;3
	DC.L	$3FFF0000,$FFF1FFF
	DC.L	$1FFF0FFF,$3FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFC0FFF0,$FFF8FFFC
	DC.L	$FFFC01FE,$FFFEFFFE
	DC.L	$FFFEFFFE,$1FEFFFC
	DC.L	$FFFCFFF8,$FFF0FFC0
	DC.L	$7001F,$3F007F		;4
	DC.L	$FF01FF,$3FF07FF
	DC.L	$FFF1FFF,$1FFF0FFF
	DC.L	0,0
	DC.L	$E000F000,$E000C7E0
	DC.L	$8FF00FF0,$FFFCFFFE
	DC.L	$FFFEFFFE,$FFFEFFFC
	DC.L	$FF00FF0,$FF007E0
	DC.L	$3FFF7FFF,$7FFF7FFF	;5
	DC.L	$7FFF7F80,$7FFF7FFF
	DC.L	$7FFF3FFF,$3FFF
	DC.L	$7FFF7FFF,$7FFF3FFF
	DC.L	$FFFCFFFE,$FFFEFFFE
	DC.L	$FFFC0000,$FFF8FFFC
	DC.L	$FFFCFFFE,$FEFFFE
	DC.L	$FFFEFFFC,$FFFCFFF8
	DC.L	$7F01FF,$3FF07FE	;6
	DC.L	$FFC1FFF,$3FFF3FFF
	DC.L	$7FFF7FFF,$7FC07FFF
	DC.L	$3FFF3FFF,$1FFF07FF
	DC.L	$80008000,0
	DC.L	$FFE0,$FFF8FFFC
	DC.L	$FFFCFFFE,$FEFFFE
	DC.L	$FFFCFFFC,$FFF8FFE0
	DC.L	$7F01FF,$3FF07FF	;7
	DC.L	$FFF0FFF,$7FF0003
	DC.L	$7000F,$1F003F
	DC.L	$7F00FF,$1FF01FE
	DC.L	$FFF0FFF8,$FFF8FFF0
	DC.L	$FFE0FFC0,$FF80FF00
	DC.L	$FE00FC00,$F800F000
	DC.L	$E000C000,$80000000
	DC.L	$3FF,$FFF1FFF		;8
	DC.L	$1F801FFF,$FFF0FFF
	DC.L	$3FFF7FFF,$7F007F80
	DC.L	$3FFF3FFF,$1FFF07FF
	DC.L	$FFC0,$FFF0FFF8
	DC.L	$1F8FFF8,$FFF0FFF0
	DC.L	$FFFCFFFE,$7E00FE
	DC.L	$FFFCFFFC,$FFF8FFE0
	DC.L	$7FF1FFF,$3FFF3FFF	;9
	DC.L	$7FFF7E00,$7FFF3FFF
	DC.L	$3FFF1FFF,$7FF0000
	DC.L	1,$30003
	DC.L	$FFC0FFF0,$FFF8FFF8
	DC.L	$FFFC03FC,$FFFCFFFC
	DC.L	$FFF8FFF8,$FFF07FE0
	DC.L	$FFC0FF80,$FF00FC00
	DC.L	$7FF1FFF,$3FFF7FFF	;0
	DC.L	$7FFFFFFF,$FF87FF0F
	DC.L	$FF1FFFBF,$FFFF7FFF
	DC.L	$7FFF3FFF,$1FFF07FF
	DC.L	$FF80FFE0,$FFF0FFF8
	DC.L	$FFF8FFFC,$F7FCE3FC
	DC.L	$C3FC87FC,$FFFCFFF8
	DC.L	$FFF8FFF0,$FFE0FF80
	DC.L	0,0			;ESPACE
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0			;(
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	$7001F,$3F007F
	DC.L	$7F00FF,$FE00FC
	DC.L	$FC00FE,$FF007F
	DC.L	$7F003F,$1F0007
	DC.L	$38003E00,$3F003F80	;)
	DC.L	$3F803FC0,$1FC00FC0
	DC.L	$FC01FC0,$3FC03F80
	DC.L	$3F803F00,$3E003800
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0			;.
	DC.L	0,0
	DC.L	0,$3C007E0
	DC.L	$7E007E0,$7E003C0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,$7800FC0		;:
	DC.L	$FC00FC0,$FC00780
	DC.L	0,$7800FC0
	DC.L	$FC00FC0,$FC00780
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	$3F007F8,$7F807F8	;!
	DC.L	$7F807F8,$7F807F8
	DC.L	$7F803F0,$3F0
	DC.L	$7F807F8,$7F803F0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	$3FFF7FFF,$7FFF3FFF	;?
	DC.L	$3FFF,$7FFF7FFF
	DC.L	$7FFF3FFF,$3FFE
	DC.L	$7FFF7FFF,$7FFF3FFE
	DC.L	$FFC0FFE0,$FFE0FFF0
	DC.L	$3F0FFF0,$FFE0FFE0
	DC.L	$FFC00000,0
	DC.L	0,0
	DC.L	0,0			;,
	DC.L	0,0
	DC.L	$7800FC0,$FC00FC0
	DC.L	$FC007C0,$F801F00
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	$780,$FC00FC0		;;
	DC.L	$FC00FC0,$7800000
	DC.L	$7800FC0,$FC00FC0
	DC.L	$FC007C0,$F801F00
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	7,$F000F		;'
	DC.L	$F000F,$7000F
	DC.L	$1F0000,0
	DC.L	0,0
	DC.L	$8000,$C000C000
	DC.L	$C000C000,$C0008000
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0			;" BAS
	DC.L	0,0
	DC.L	$7870FCF,$FCF0FCF
	DC.L	$FCF07C7,$F8F1F1F
	DC.L	0,0
	DC.L	0,0
	DC.L	$8000C000,$C000C000
	DC.L	$C000C000,$80000000
	DC.L	$787,$FCF0FCF		;" HAUT
	DC.L	$FCF0FCF,$7C70F8F
	DC.L	$1F1F0000,0
	DC.L	0,0
	DC.L	$8000,$C000C000
	DC.L	$C000C000,$C0008000
	DC.L	0,0
	DC.L	0,0
	IFEQ	1
	DC.L	$F003F,$7F007F		;REX GAUCHE
	DC.L	$FF00FF,$FF00FF
	DC.L	$FF00FF,$FF00FF
	DC.L	$FF00FF,$FF00FF
	DC.L	$FFFFFFFF,$FFFFFFFF
	DC.L	$FFFFFFFF,$FFFF83FE
	DC.L	$3FF03FF,$3FF03FF
	DC.L	$1FF01FF,$FF003F
	DC.L	$FFF8FFFC,$FFFEFFFF	;REX DROIT
	DC.L	$FFFFFFFF,$FFFF001F
	DC.L	$FFBFFF7F,$FEFF01FF
	DC.L	$FFFEFFFC,$FFF8FFF0
	DC.L	$3FE07FC0,$FF80FF00
	DC.L	$FE00FC00,$F800F000
	DC.L	$F800FC00,$FE00FF00
	DC.L	$FF807FC0,$3FE01FF0
	DC.L	0,0			;+
	DC.L	0,0
	DC.L	0,0
	DC.L	0,0
	DC.L	$C000,$E000E000
	DC.L	$E000FF00,$FF80FF80
	DC.L	$FF80FF80,$FF80FF00
	DC.L	$E000E000,$E000C000
	ENDC
	DC.L	0,0			;-
	DC.L	$1FF,$3FF03FF
	DC.L	$3FF03FF,$3FF01FF
	DC.L	0,0
	DC.L	0,0
	DC.L	$FF00,$FF80FF80
	DC.L	$FF80FF80,$FF80FF00
	DC.L	0,0
FINFONTE:
;
; LISTE DES VARIABLES
;
	SECTION	DATA
TEXTE
	IFEQ	LOAD_TEXT
;x	set	0
;	rept	49
;	dc.b	x
;x	set	x+1
;	endr

	INCBIN	SCROLLER.BIN
	ELSEIF
;	INCBIN	SCROLLER.TXT
	DC.B	'THIS IS MCODER AGAIN WITH A NEW CONVERSION FROM THE AMIGA. '
	DC.B	'THIS WAS THE SCOOPEX INTRO ! '
	DC.B	'  THE ORIGINAL DEMO HAD 22 SPRITES IN 3 BIT-PLANES '
	DC.B	'AND AN UGLY SCROLLER 2 BIT-PLANES .......... '
	DC.B	$FF
	ENDC
	EVEN
AFFICHE
	INCBIN	FAST.BIN
ENDAFF
	SECTION	BSS
PREDEC:	DS.B	2*(16/STEP)*(FINFONTE-FONTE)
	DS.W	1
FINPREDEC:
L6ECC	DS.B	(16/STEP)*TAILLE*80	;BUFFER POUR SCROLLER

;	ds.b	100
debut_mus	ds.b	41508+24+12
fin_mus


	SECTION	TEXT
INITMUS
	MOVEQ	#2,D0
	LEA	L407E6(PC),A0
	LEA	L40798(PC),A1
	LEA	L407A0(PC),A2
L4062E	MOVE.L	A1,$A(A0)
	CLR	$E(A0)
	clr.B	$2D(A0)
	CLR.B	8(A0)
	CLR.B	9(A0)
	MOVE.L	A1,$12(A0)
	CLR	$30(A0)
	MOVE.B	#1,$17(A0)
	MOVE.B	#1,$18(A0)
	CLR.B	$19(A0)
	CLR.B	$1A(A0)
	CLR.B	$1B(A0)
	CLR.B	$1C(A0)
	CLR.B	$1D(A0)
	CLR	$1E(A0)
	CLR.B	$20(A0)
	moveq	#$f,d3
	and.B	(A2),D3
	ADD	D3,D3
	ADD	D3,D3
	MOVE.B	(A2)+,$21(A0)
	MOVE.L	#LBA0,(A0)
	MOVE.L	#LBA0,$34(A0)
	ADD.L	#($23+1)*$C,$34(A0)
	ADD.L	D3,$34(A0)
	;ADD.L	D7,(A0)
	ADD.L	D3,(A0)
	MOVE	#$C,4(A0)
	MOVE.L	(A0),A3
	MOVEQ	#0,D1
	MOVE.B	(A3),D1
	ASL	#6,D1
	LEA	L6A0(PC),A4
	ADD	D1,A4
	MOVE.L	A4,$22(A0)
	CLR	$26(A0)
	MOVE.B	#2,$2A(A0)
	MOVE.B	1(A3),$2C(A0)
	CLR.B	$2B(A0)
	MOVE.B	2(A3),$16(A0)
	CLR.B	$3C(A0)
	moveq	#$10,d1
	add.b	3(a3),d1
	bcc.s	L406F6
	MOVE.B	D1,$3C(A0)
L406F6	CLR.B	$2D(A0)
	CLR	$38(A0)
	lea	$3E(a0),A0
	DBF	D0,L4062E
	RTS

PLAYMUS
	MOVEQ	#0,D7
	LEA	L407A4(PC),A6
	SUBQ	#1,L407E0
	BNE.S	L401AE
	addq	#1,boucle2
	MOVE	#3,L407E0
	LEA	L407E6(PC),A0
	BSR.s	L40254
	LEA	L40824(PC),A0
	BSR.s	L40254
	LEA	L40862(PC),A0
	BSR.s	L40254
L401AE
	LEA	L407A4+$1E(PC),A5
	LEA	L407E6(PC),A0
	BSR	L40376
	move	D0,6(A6)
	MOVE.B	D0,2(A6)
	MOVE.B	D1,$22(A6)
	LEA	L40824(PC),A0
	BSR	L40376
	move	D0,$E(A6)
	MOVE.B	D0,$A(A6)
	MOVE.B	D1,$26(A6)
	LEA	L40862(PC),A0
	BSR	L40376
	move	D0,$16(A6)
	MOVE.B	D0,$12(A6)
	MOVE.B	D1,$2A(A6)

;	MOVEM.L	(A6),D0-D7/A0-A2
;	MOVEM.L	D0-D7/A0-A2,$FFFF8800.W
	RTS
;
; nouvelle note
;
L40254
	MOVE.L	$22(A0),A1
	ADD	$26(A0),A1
	moveq	#$7f,d0
	and.B	(A1),D0
	subq.b	#1,D0
	BEQ.S	L40278
	CMP	#64,$26(A0)
	BNE.s	L402EA
L40278
	MOVE.L	(A0),A2
	ADD	4(A0),A2
	CMP.L	$34(a0),A2
	BNE.S	1$
	addq	#1,bouclage
	MOVE	D7,4(A0)		;la voix reboucle !!!
	MOVE.L	(A0),A2
1$	MOVEQ	#0,D1
	MOVE.B	(A2)+,D1
	MOVE.B	(A2)+,$2C(A0)
	MOVE.B	(A2)+,$16(A0)
	moveq	#$10,d0
	add.b	(a2),d0
	bcc.s	2$
	MOVE.B	D0,$3C(A0)
2$
	MOVE	D7,$26(A0)
	ASL	#6,D1
	LEA	L6A0(PC),A3
	ADD	D1,A3
	MOVE.L	A3,$22(A0)
	ADD	#$C,4(A0)
	MOVE.L	$22(A0),A1
	ADD	$26(A0),A1
L402EA
	moveq	#$7f,d1
	and.B	(A1)+,D1
	BEQ.s	L40370
	MOVE.L	D7,$38(A0)
	MOVE.B	D1,8(A0)
	MOVE.L	A1,A3
	TST	$26(A0)
	BNE.S	1$
	LEA	64(A3),A3
1$	MOVE.B	-2(A3),$1F(A0)
	MOVE.B	(A1),9(A0)
	moveq	#$1f,d1
	and.B	(A1),D1
	ADD.B	$16(A0),D1
	LEA	L360(PC),A2
	ASL	#6,D1
	ADD	D1,A2
	MOVE	D7,$E(A0)
	MOVE.B	(A2),$17(A0)
	MOVE.B	(A2)+,$18(A0)
	clr	d1
	MOVE.B	(A2)+,D1
	MOVE.B	(A2)+,$1B(A0)
	MOVE.B	D7,$2E(A0)
	MOVE.B	(A2)+,D0
	MOVE.B	D0,$1C(A0)
	MOVE.B	D0,$1D(A0)
	MOVE.B	(A2)+,$1E(A0)
	MOVE.L	A2,$A(A0)
	LEA	L20(PC),A2
	ASL	#4,D1
	ADD	D1,A2
	MOVE.L	A2,$12(A0)
	MOVE	D7,$30(A0)
	MOVE.B	D7,$1A(A0)
	MOVE.B	D7,$19(A0)
L40370	ADDQ	#2,$26(A0)
	RTS

le0	moveq	#$3f,d0
	and.B	1(A1,D5.W),D0
	MOVE	D0,D5
	bra.s	L40392
le2
	MOVE	D7,$E(A0)
	MOVE.B	#1,$17(A0)
	ADDQ	#1,D5
	BRA.s	L4038A
le9
;	MOVE.B	#$B,$FFFF8800.W
	MOVE.B	1(A1,D5.W),regb
;	MOVE.B	1(A1,D5.W),$FFFF8802.W
;	MOVE.l	#$0C000000,$FFFF8800.W
;	MOVE.l	#$0D000A00,$FFFF8800.W	;triangulaire
	ADDQ	#2,D5
	BRA.s	L4038A
le4
	MOVE.B	D7,$2A(A0)
	MOVE.B	1(A1,D5.W),$20(A0)
	ADDQ	#2,D5
	BRA.s	L40486
le5
	MOVE.B	#1,$2A(A0)
	ADDQ	#1,D5
	BRA.s	L4037C
le6
	MOVE.B	#2,$2A(A0)
	ADDQ	#1,D5
	BRA.S	L40486
;
; joue note courante
;
L40376
	MOVE.B	D7,$20(A0)
	MOVE.L	$12(A0),A1
	MOVE	$30(A0),D5
L4037C
L4038A
L40392
	moveq	#0,d0
	move.b	(a1,D5.W),d0
	sub.b	#$e0,d0
	cmp.b	#$ea-$e0,d0
	bhs.s	L40486
	add	d0,d0
	add	d0,d0
	jmp	func(pc,d0.w)
func:	bra.w	le0
	bra.w	L40496
	bra.w	le2
	ILLEGAL
	ILLEGAL
	bra.w	le4
	bra.w	le5
	bra.w	le6
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	bra.w	le9

L40486
	MOVE.B	(A1,D5.W),$2B(A0)
	ADDQ	#1,D5
L40496
	MOVE	D5,$30(A0)
	SUBQ.B	#1,$17(A0)
	BNE.S	L404F0
	MOVE.B	$18(A0),$17(A0)
	MOVE.L	$A(A0),A1
	ADD	$E(A0),A1
	CMP.B	#$E1,(A1)
	BEQ.S	L404F0
	MOVE.B	(A1),$2D(A0)
	ADDQ	#1,$E(A0)
L404F0	moveq	#0,d5
	MOVE.B	$2B(A0),D5
	BMI.S	L404FE
	ADD.B	8(A0),D5
	ADD.B	$2C(A0),D5
L404FE
	LEA	L408FC(PC),A1
	ADD.b	D5,D5
	MOVE	(A1,d5.w),D0
	MOVE.B	$21(A0),D3
	BCLR	D3,(A5)
	ADDQ	#3,D3
	BCLR	D3,(A5)
	moveq	#$f,d2
	and.B	$2A(A0),D2
	BEQ.S	L40554
	subq.B	#1,D2
	BNE.S	L4054E
	subq	#3,d3
	MOVE.B	8(A0),$20(A0)
	moveq	#$7f,d1
	and.B	$2B(A0),D1
	MOVE.B	D1,$20(A0)
L4054E	BSET	D3,(A5)
L40554	move.B	$20(A0),d3
	BEQ.S	L4056A
L40556	not.b	d3
	and.b	#$1F,d3
	MOVE.B	D3,$1A(A6)
L4056A	TST.B	$1E(A0)
	BEQ.S	L4057A
	SUBQ.B	#1,$1E(A0)
	BRA.S	L405D0
L4057A
	moveq	#0,d4
	MOVE.B	$1C(A0),D4
	moveq	#0,d1
	MOVE.B	$1D(A0),D1
	tst.B	$2E(A0)
	bmi.S	L405A4
	SUB.B	$1B(A0),D1
	BCC.S	L405B2
	eor.B	#$80,$2E(A0)
	MOVEQ	#0,D1
	BRA.S	L405B2
L405A4
	ADD.B	$1B(A0),D1
	add.B	D4,D4
	CMP.B	D4,D1
	BCS.S	L405B0
	eor.B	#$80,$2E(A0)
	MOVE.B	D4,D1
L405B0	lsr.B	#1,D4
L405B2	MOVE.B	D1,$1D(A0)
	SUB	D4,D1
	ADD.B	#$A0,D5
	BCS.S	L405CE
	moveq	#$18,d2
	ADD	D1,D1
	ADD.B	d2,D5
	BCs.S	L405CE
	ADD	D1,D1
	ADD.B	d2,D5
	BCs.S	L405CE
	ADD	D1,D1
	ADD.B	d2,D5
	BCs.S	L405CE
	ADD	D1,D1
L405CE	ADD	D1,D0
L405D0
	MOVE.B	$2D(A0),D1
	SUB.B	$3C(A0),D1
	BPL.S	L4060A
	MOVEQ	#0,D1
L4060A	RTS
;
; sortie :
;	D0=fr‚quence
;	D1=volume
;
L40798	DC.W	$100,0,0,$E1
L407A0	DC.W	1,$200
reg0
L407A4	DC.W	0,0
	DC.W	$101,0,$202,0
	DC.W	$303,0,$404,0
	DC.W	$505,0,$606,0
	DC.W	$707
	DC.W	$C0C0
	DC.W	$808,0
	DC.W	$909,0,$A0A,0

	DC.W	$0B0B
regb	DC.W	0

L407E0	DC.W	3
L407E6	DS.B	$3E
L40824	DS.B	$3E
L40862	DS.B	$3E

L408FC	DC.W	$EEE,$E17
	DC.W	$D4D,$C8E,$BD9,$B2F
	DC.W	$A8E,$9F7,$967,$8E0
	DC.W	$861,$7E8,$777,$70B
	DC.W	$6A6,$647,$5EC,$597
	DC.W	$547,$4FB,$4B3,$470
	DC.W	$430,$3F4,$3BB,$385
	DC.W	$353,$323,$2F6,$2CB
	DC.W	$2A3,$27D,$259,$238
	DC.W	$218,$1FA,$1DD,$1C2
	DC.W	$1A9,$191,$17B,$165
	DC.W	$151,$13E,$12C,$11C
	DC.W	$10C,$FD,$EE,$E1
	DC.W	$D4,$C8,$BD,$B2
	DC.W	$A8,$9F,$96,$8E
	DC.W	$86,$7E,$77,$70
	DC.W	$6A,$64,$5E,$59
	DC.W	$54,$4F,$4B,$47
	DC.W	$43,$3F,$3B,$38
	DC.W	$35,$32,$2F,$2C
	DC.W	$2A,$27,$25,$23
	DC.W	$21,$1F,$1D,$1C
	DC.W	$1A,$19,$17,$16
	DC.W	$15,$13,$12,$11
	DC.W	$10,$F
;
; VARIATIONS VOLUME
;
L20
	DC.B	$E2,$E5,$95,$E6,$97,$95,$93,$8C
	DC.B	$E0,6,0,0,0,0,0,0

	DC.B	$E2,$E4,$93,$A1,$E6,$9D,$9F,$E4
	DC.B	$96,$9F,$E5,$96,$95,$E1,0,0

	DC.B	$E2,$E4,$9F,$BD,$BA,$E1,0,0
	DC.B	0,0,0,0,0,0,0,0

	DC.B	$E2,$E9,$2A,$E6,$C,$C,$C,$C
	DC.B	0,$E1,0,0,0,0,0,0

	DC.B	$E2,$E6,5,0,7,$C,$E0,2
	DC.B	0,0,0,0,0,0,0,0

	DC.B	$E2,$E6,4,0,7,$C,$E0,2
	DC.B	0,0,0,0,0,0,0,0

	DC.B	$E2,$E5,$96,$E6,8,7,6,5
	DC.B	4,3,2,1,0,$E1,0,0

	DC.B	$E2,$E6,$C,0,$E0,2,0,0
	DC.B	0,0,0,0,0,0,0,0

	DC.B	$E2,$E9,$24,$E6,$C,$C,$C,$C
	DC.B	0,$E1,0,0,0,0,0,0

	DC.B	$E2,$E9,$20,$E6,$C,$C,$C,$C
	DC.B	0,$E1,0,0,0,0,0,0

	DC.B	$E2,$E9,$2F,$E6,$18,$18,$18,$18
	DC.B	0,$E1,0,0,0,0,0,0

	DC.B	$E2,$E9,$38,$E6,$C,$C,$C,$C
	DC.B	0,$E1,0,0,0,0,0,0

	DC.B	$E2,$E6,0,$E1,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
;
; VARIATION FREQUENCE
;
L360	DC.W	$100,0
	DC.W	$D,$F0F,$F0E,$D0C
	DC.W	$E1,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$101,0
	DC.W	$D,$F0F,$E0D,$C0B
	DC.W	$A0A,$909,$908,$706
	DC.W	$504,$302,$100,$E100
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$102,0
	DC.W	$D,$A00,$E100,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$103,$306
	DC.W	$710,$1010,$1010,$100D
	DC.W	$D0C,$C0B,$B0A,$A09
	DC.W	$908,$807,$606,$504
	DC.W	$302,$100,$E100,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	2,$202,$101,$101
	DC.W	$100,$E1,$304,0
	DC.W	$C,$D0E,$D0C,$B0A
	DC.W	$908,$706,$504,$302
	DC.W	$100,$E100,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$305,0
	DC.W	$C,$D0E,$D0C,$B0A
	DC.W	$908,$706,$503,$201
	DC.W	$E1,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$106,0
	DC.W	$D,$E0D,$C0A,$705
	DC.W	$302,$E1,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$207,$101
	DC.W	$E,$D0C,$B0A,$908
	DC.W	$706,$505,$504,$404
	DC.W	$303,$302,$202,$101
	DC.W	$100,$E100,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$108,$306
	DC.W	$710,$1010,$1010,$100D
	DC.W	$D0C,$C0B,$B0A,$A09
	DC.W	$908,$707,$606,$505
	DC.W	$404,$403,$303,$202
	DC.W	$201,$101,$E1,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$109,$305
	DC.W	$710,$1010,$1010,$100D
	DC.W	$D0C,$C0B,$B0A,$A09
	DC.W	$908,$807,$706,$504
	DC.W	$302,$100,$E100,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$10A,$407
	DC.W	$710,$1010,$1010,$100D
	DC.W	$D0C,$C0B,$B0A,$A09
	DC.W	$908,$807,$706,$504
	DC.W	$302,$100,$E100,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$10B,$306
	DC.W	$710,$1010,$1010,$100D
	DC.W	$D0D,$C0C,$C0B,$B0B
	DC.W	$A0A,$909,$908,$807
	DC.W	$605,$504,$302,$100
	DC.W	$E100,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$10C,$204
	DC.W	$A10,$E100,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0
;
; PATTERNS
;
L6A0
	DC.W	0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$C00,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	0,0,$C00,0
	DC.W	0,0,$C01,0
	DC.W	0,0,$C00,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	0,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	0,0,$C00,0
	DC.W	0,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$1803,0
	DC.W	0,0,0,0
	DC.W	0,0,$1B08,0
	DC.W	0,0,0,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,$160A,0
	DC.W	0,0,0,0
	DC.W	0,0,$1803,0
	DC.W	0,0,0,0
	DC.W	0,0,$1803,0
	DC.W	0,0,$1B08,0
	DC.W	0,0,0,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,$1F0B,0
	DC.W	0,0,$220A,0
	DC.W	0,0,0,0
	DC.W	0,0,$1803,0
	DC.W	0,0,$1B08,0
	DC.W	0,0,0,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,$160A,0
	DC.W	0,0,$1803,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	0,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	0,0,$C00,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C01,0
	DC.W	$C01,0,$160A,0
	DC.W	0,0,0,0
	DC.W	0,0,$1803,0
	DC.W	0,0,0,0
	DC.W	0,0,$1B08,0
	DC.W	0,0,$1D09,0
	DC.W	0,0,0,0
	DC.W	0,0,$160A,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$160A,0
	DC.W	0,0,$130B,0
	DC.W	0,0,0,0
	DC.W	0,0,$160A,0
	DC.W	0,0,0,0
	DC.W	0,0,$3600,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$3600,0
	DC.W	0,0,$3900,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$3900,0
	DC.W	0,0,$3B00,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$3B00,0
	DC.W	0,0,$3900,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$3900,0
	DC.W	0,0,$C00,0
	DC.W	$C00,0,$C00,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$C01,0
	DC.W	0,0,0,0
	DC.W	0,0,$C01,0
	DC.W	0,0,0,0
	DC.W	0,0,$C00,0
	DC.W	$C02,0,$C02,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	$C02,0,$C00,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	$C02,0,$C02,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C01,0,$C02,0
	DC.W	$C00,0,$C02,0
	DC.W	$C00,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C01,0,$C00,0
	DC.W	$C02,0,$C02,0
	DC.W	$C02,0,$C01,0
	DC.W	0,0,$C02,0
	DC.W	$C02,0,$C00,0
	DC.W	$C02,0,$1D06,0
	DC.W	0,0,$1B06,0
	DC.W	0,0,$1906,0
	DC.W	$1906,0,$2F00,0
	DC.W	0,0,$2D00,0
	DC.W	0,0,$2F00,0
	DC.W	0,0,$2D00,0
	DC.W	$3100,0,0,0
	DC.W	$3100,0,$2D00,0
	DC.W	0,0,$2A00,0
	DC.W	0,0,0,0
	DC.W	0,0,$2F00,0
	DC.W	0,0,$2D00,0
	DC.W	0,0,$2F00,0
	DC.W	0,0,$2D00,0
	DC.W	$3100,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,$2F00,0
	DC.W	0,0,$2F00,0
	DC.W	0,0,$2D00,0
	DC.W	0,0,$2C00,0
	DC.W	$2A00,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0,0,0
	DC.W	0,0
;
; LISTE DES PATTERNS JOUES
;
LBA0
	DC.W	0,$F1
	DC.W	$3FA,0,$900,$4F1
	DC.W	0,0,$5FA,0
	DC.W	$A00,$500,0,0
	DC.W	$7FA,0,$B00,$400
	DC.W	0,0,$8FA,0
	DC.W	$C00,$400,0,0
	DC.W	$3FA,0,$900,$400
	DC.W	0,0,$5FA,0
	DC.W	$A00,$500,0,0
	DC.W	$7FA,0,$B00,$400
	DC.W	0,0,$8FA,0
	DC.W	$C00,$400,$E00,0
	DC.W	$3FA,0,$900,$400
	DC.W	$E00,0,$5FA,0
	DC.W	$A00,$500,$F00,0
	DC.W	$7FA,0,$B00,$400
	DC.W	$1000,0,$8FA,0
	DC.W	$C00,$500,$E00,0
	DC.W	$3FA,0,$900,$400
	DC.W	$E00,0,$5FA,0
	DC.W	$A00,$500,$F00,0
	DC.W	$7FA,0,$B00,$400
	DC.W	$1000,0,$8FA,0
	DC.W	$C00,$500,$E00,0
	DC.W	$FA,0,0,0
	DC.W	$E00,0,0,0
	DC.W	0,0,$F00,0
	DC.W	0,0,0,0
	DC.W	$1000,0,0,0
	DC.W	0,0,$E00,0
	DC.W	$3FA,0,$1100,$700
	DC.W	$E00,0,$5FA,0
	DC.W	$1200,$700,$F00,0
	DC.W	$7FA,0,$1100,$700
	DC.W	$1000,0,$8FA,0
	DC.W	$1300,$700,$E00,0
	DC.W	$3FA,0,$1100,$700
	DC.W	$E00,0,$5FA,0
	DC.W	$1200,$700,$F00,0
	DC.W	$7FA,0,$1100,$700
	DC.W	$1000,0,$8FA,0
	DC.W	$1300,$700,0,0
	DC.W	$3FA,0,$900,$400
	DC.W	0,0,$5FA,0
	DC.W	$A00,$500,0,0
	DC.W	$7FA,0,$B00,$400
	DC.W	0,0,$8FA,0
	DC.W	$C00,$400,$E00,0
	DC.W	$3FA,0,$900,$400
	DC.W	$E00,0,$5FA,0
	DC.W	$A00,$500,$F00,0
	DC.W	$7FA,0,$B00,$400
	DC.W	$1000,0,$8FA,0
	DC.W	$C00,$500
