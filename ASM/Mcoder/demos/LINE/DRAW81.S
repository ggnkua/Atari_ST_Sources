	opt	o+,OW-,T-
	ORG	$800		;OPTIMISATION ULTIME ???
;
FRE1	EQUR	D1	;LIBRE
CUMUL	EQUR	D3	;CUMUL
DX	EQUR	D4	;DELTAX
DY	EQUR	D5	;DELTAY
FRE2	EQUR	D6	;LIBRE
PAT	EQUR	D7	;PATTERN
ECRAN	EQUR	A0	;ECRAN
FRE3	EQUR	A3	;LIBRE
FRE4	EQUR	A4	;LIBRE
RETOUR1	EQU	7	;A7=RETURN
;
milieu		equ	160
OFFSET_GAUCHE	EQU	65
OFFSET_DROIT	EQU	256	;PAR EXEMPLE
LARGE		EQU	190	;ON ENLEVE 1 PIXEL A GAUCHE (SANS DEGATS ???)
;
; OFFSET=32=4*8 A GAUCHE=4*16 PIXELS A GAUCHE=OFFSET GAUCHE DE 64 PIXELS
;
; 12*8 BYTES DE LARGE=12*16 PIXELS DE LARGE=192 PIXELS DE LARGE
;
; REGISTRES UTILISES :
;
;	D3=CUMUL
;	D4=DX
;	DY=DY
;	D7=PATTERN
;	A0=ECRAN
;
; REGISTRES CONSTANTS :
;
; A1=MUL160(PC)
; A2=BASE ECRAN
; A7=RETURN\W
; A6=ADRESSE RETOUR APPELANT
;
; 3Šme essai de fast-draw (pas terrible)
;  avantage : marche dans tous les cas !
;  d‚faut   : n'affiche que 42 points au maximum
;
; am‚liorations :
;	- afficher de droite … gauche (ADD plus rapide que ROR)
;	- DRAWV avec offsets
;	- transformer SUB/ADD par DIV
;
	OPT	O+
RETOUR	MACRO
	JMP	(A6)		;SPEEDUP
	ENDM

X0Y0	MACRO
	MOVEQ	#$F,D2
	EOR	D2,D0		;INVERSE LES 4 BITS
	AND	D0,D2
	EOR	D2,D0
	ASR	#1,D0
	ADD	D1,D1
	ADD	(A1,D1.W),D0
	ADD	D0,ECRAN
	MOVEQ	#0,PAT
	BSET	D2,PAT
	ENDM
X0Y1	MACRO
	MOVEQ	#$F,D2
	EOR	D2,D0		;INVERSE LES 4 BITS
	AND	D0,D2
	EOR	D2,D0
	ASR	#1,D0
	ADD	D3,D3
	ADD	(A1,D3.W),D0
	ADD	D0,ECRAN
	MOVEQ	#0,PAT
	BSET	D2,PAT
	ENDM
X1Y1	MACRO
	MOVEQ	#$F,D0
	EOR	D0,D2		;INVERSE LES 4 BITS
	AND	D2,D0
	EOR	D0,D2
	ASR	#1,D2
	ADD	D3,D3
	ADD	(A1,D3.W),D2
	ADD	D2,ECRAN
	MOVEQ	#0,PAT
	BSET	D0,PAT
	ENDM
X1Y0	MACRO
	MOVEQ	#$F,D0
	EOR	D0,D2		;INVERSE LES 4 BITS
	AND	D2,D0
	EOR	D0,D2
	ASR	#1,D2
	ADD	D1,D1
	ADD	(A1,D1.W),D2
	ADD	D2,ECRAN
	MOVEQ	#0,PAT
	BSET	D0,PAT
	ENDM
;
DRAWV	MACRO
	OR	PAT,\1(ECRAN)
	SUB	DX,CUMUL
	BHS.S	.\@
	ADD	DY,CUMUL
	ADD	PAT,PAT
	BCC.S	.\@
	ADDX	PAT,PAT
	SUBQ	#8,ECRAN
.\@
	ENDM

CODE2	MACRO
	BRA	.1
	BRA	.2
	BRA	.3
	BRA	.4
	BRA	.5
	BRA	.6
	BRA	.7
	BRA	.8
	BRA	.9
	BRA	.10
	BRA	.11
	BRA	.12
	BRA	.13
	BRA	.14
	BRA	.15
	BRA	.16
	BRA	.17
	BRA	.18
	BRA	.19
	BRA	.20
	BRA	.21
	BRA	.22
	BRA	.23
	BRA	.24
	BRA	.25
	BRA	.26
	BRA	.27
	BRA	.28
	BRA	.29
	BRA	.30
	BRA	.31
	BRA	.32
	BRA	.33
	BRA	.34
	BRA	.35
	BRA	.36
	BRA	.37
	BRA	.38
	BRA	.39
	BRA	.40
	BRA	.41
	BRA	.42
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL
	ILLEGAL

.42	DRAWV	\1*41
.41	DRAWV	\1*40
.40	DRAWV	\1*39
.39	DRAWV	\1*38
.38	DRAWV	\1*37
.37	DRAWV	\1*36
.36	DRAWV	\1*35
.35	DRAWV	\1*34
.34	DRAWV	\1*33
.33	DRAWV	\1*32
.32	DRAWV	\1*31
.31	DRAWV	\1*30
.30	DRAWV	\1*29
.29	DRAWV	\1*28
.28	DRAWV	\1*27
.27	DRAWV	\1*26
.26	DRAWV	\1*25
.25	DRAWV	\1*24
.24	DRAWV	\1*23
.23	DRAWV	\1*22
.22	DRAWV	\1*21
.21	DRAWV	\1*20
.20	DRAWV	\1*19
.19	DRAWV	\1*18
.18	DRAWV	\1*17
.17	DRAWV	\1*16
.16	DRAWV	\1*15
.15	DRAWV	\1*14
.14	DRAWV	\1*13
.13	DRAWV	\1*12
.12	DRAWV	\1*11
.11	DRAWV	\1*10
.10	DRAWV	\1*9
.9	DRAWV	\1*8
.8	DRAWV	\1*7
.7	DRAWV	\1*6
.6	DRAWV	\1*5
.5	DRAWV	\1*4
.4	DRAWV	\1*3
.3	DRAWV	\1*2
.2	DRAWV	\1*1
.1
	ENDM

;
; A1=MUL160
; A2=ADRESSE ECRAN
; ECRAN=PTR DYNAMIQUE
;
DRAW_IT
	MOVE.L	A2,ECRAN

	MOVE	D2,DX
	SUB	D0,DX		;dX
	BMI	OCTANT3

	MOVE	D3,DY
	SUB	D1,DY		;dY
	BMI.S	OCTANT2
;
; dX>=0,dY>=0
;
	CMP	DX,DY
	BLO	DRAW21		;X0=GAUCHE,Y0=HAUT
	X1Y0
	BRA	DRAW4

OCTANT2
;
; dX>=0,dY<0
;
	NEG	DY

	CMP	DX,DY
	BLO	DRAW11		;X0=GAUCHE,Y0=BAS
	X1Y0
	BRA	DRAW3

OCTANT3
	NEG	DX

	MOVE	D3,DY
	SUB	D1,DY		;dY
	BMI.S	OCTANT4
;
; dX<0,dY>=0
;
	CMP	DX,DY
	BLO	DRAW12		;X0=DROITE,Y0=HAUT
	X0Y1
	BRA	DRAW3

OCTANT4
;
; dX<0,dY<0
;
	NEG	DY

	CMP	DX,DY
	BLO	DRAW22		;X0=DROIT,Y0=BAS
	X0Y1
	BRA	DRAW4

DRAW3
	MOVE	DY,CUMUL
	LSR	#1,CUMUL
	MOVE	DY,D2
	ADD	D2,D2
	ADD	D2,D2
	JMP	DRW3(PC,D2.W)
DRW3
	CODE2	-160
	OR	PAT,(ECRAN)
	RETOUR

DRAW4
	MOVE	DY,CUMUL
	LSR	#1,CUMUL
	MOVE	DY,D2
	ADD	D2,D2
	ADD	D2,D2
	JMP	DRW4(PC,D2.W)
DRW4
	CODE2	160
	OR	PAT,(ECRAN)
	RETOUR
;
GENERE	MACRO
lab\<number>:
	ENDM

DXSUPDY	MACRO
lab\<number>:
	iif	(\1&15)=0	move	#$8000,PAT
	iif	(\1&15)=1	or	#$4000,PAT
	iif	(\1&15)=2	or	#$2000,PAT
	iif	(\1&15)=3	or	#$1000,PAT
	iif	(\1&15)=4	or	#$0800,PAT
	iif	(\1&15)=5	or	#$0400,PAT
	iif	(\1&15)=6	or	#$0200,PAT
	iif	(\1&15)=7	or	#$0100,PAT
	iif	(\1&15)=8	tas	PAT
	iif	(\1&15)=9	or	#$40,PAT
	iif	(\1&15)=10	or	#$20,PAT
	iif	(\1&15)=11	or	#$10,PAT
	iif	(\1&15)=12	addq	#8,PAT
	iif	(\1&15)=13	addq	#4,PAT
	iif	(\1&15)=14	addq	#2,PAT
	iif	(\1&15)=15	OR	#1,PAT
number	set	number+1
	ifne	~\1&15
	SUB	DY,CUMUL
	BHS.s	\@
	ADD	DX,CUMUL
	or	PAT,(\1-milieu)&-16/2(ECRAN)
	clr	PAT
	elseif
	or	PAT,(\1-milieu)&-16/2(ECRAN)
	SUB	DY,CUMUL
	BHS.s	\@
	ADD	DX,CUMUL
	endc
	lea	y(ECRAN),ECRAN
\@
	endm
;
; DESCEND
;

DRAW21
;X0=GAUCHE,Y0=HAUT
	ADD	D1,D1		;YHAUT
	ADD	(A1,D1.W),ECRAN
	MOVEQ	#-16,FRE2
	AND	D2,FRE2
	ADD	D0,D0
	ADD	D2,D2
	LEA	OFFSETS1+(LARGE/2)*2(PC),FRE3
	MOVE	(FRE3,D0.W),FRE4
	MOVE	(FRE3,D2.W),FRE3

	MOVE	DX,CUMUL
	LSR	#1,CUMUL

	MOVEQ	#0,PAT
	MOVE	(FRE3),FRE1
	MOVE	#$4ED0+RETOUR1,(FRE3)		;JMP (An)
	JMP	-4(FRE4)
DRAW22
;X0=DROIT,Y0=BAS
	ADD	D3,D3		;YHAUT
	ADD	(A1,D3.W),ECRAN
	MOVEQ	#-16,FRE2
	AND	D0,FRE2
	ADD	D2,D2
	ADD	D0,D0
	LEA	OFFSETS1+(LARGE/2)*2(PC),FRE3
	MOVE	(FRE3,D2.W),FRE4
	MOVE	(FRE3,D0.W),FRE3

	MOVE	DX,CUMUL
	LSR	#1,CUMUL

	MOVEQ	#0,PAT
	MOVE	(FRE3),FRE1
	MOVE	#$4ED0+RETOUR1,(FRE3)		;JMP (An)
	JMP	-4(FRE4)

BRANCHE	MACRO
	dc.w	lab\<number>+4
number	set	number+1
	ENDM

OFFSETS1
number	set	OFFSET_GAUCHE
	rept	LARGE
	BRANCHE
	endr
;
; MONTE
;
; ECRAN=ECRAN+YBAS*160
;
DRAW11
;X0=GAUCHE,Y0=BAS

	ADD	D1,D1
	ADD	(A1,D1.W),ECRAN

	MOVEQ	#-16,FRE2
	AND	D2,FRE2
	ADD	D0,D0
	ADD	D2,D2
	LEA	OFFSETS2+(LARGE/2)*2(PC),FRE3
	MOVE	(FRE3,D0.W),FRE4
	MOVE	(FRE3,D2.W),FRE3

	MOVEQ	#0,PAT
	MOVE	DX,CUMUL
	LSR	#1,CUMUL
	MOVE	(FRE3),FRE1
	MOVE	#$4ED0+RETOUR1,(FRE3)		;JMP (An)
	JMP	-4(FRE4)
DRAW12
;X0=DROITE,Y0=HAUT

	ADD	D3,D3
	ADD	(A1,D3.W),ECRAN

	MOVEQ	#-16,FRE2
	AND	D0,FRE2
	ADD	D2,D2
	ADD	D0,D0
	LEA	OFFSETS2+(LARGE/2)*2(PC),FRE3
	MOVE	(FRE3,D2.W),FRE4
	MOVE	(FRE3,D0.W),FRE3

	MOVEQ	#0,PAT
	MOVE	DX,CUMUL
	LSR	#1,CUMUL
	MOVE	(FRE3),FRE1
	MOVE	#$4ED0+RETOUR1,(FRE3)		;JMP (An)
	JMP	-4(FRE4)
OFFSETS2
number	set	OFFSET_DROIT
	rept	LARGE
	BRANCHE
	endr

number	set	OFFSET_GAUCHE
y	set	160
x	set	OFFSET_GAUCHE
	rept	LARGE-1
	DXSUPDY	x
x	set	x+1
	endr
	GENERE
	OR	#1,PAT
	NOP			;ici est pok‚ le dernier JMP !!!
;
number	set	OFFSET_DROIT
y	set	-160
x	set	OFFSET_GAUCHE
	rept	LARGE-1
	DXSUPDY	x
x	set	x+1
	endr
	GENERE
	OR	#1,PAT
	NOP			;ici est pok‚ le dernier JMP !!!


	DS.L	50		;PLACE POUR LA PILE (CA PUE !!!)
RETURN
	ASR	#1,FRE2
	OR	PAT,(ECRAN,FRE2.W)
	MOVE	FRE1,(FRE3)
	RETOUR
