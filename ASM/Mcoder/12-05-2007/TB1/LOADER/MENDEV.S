;
; PROGRAMME DE SAUVEGARDE DE LA PRESENTATION
;
CODEFINAL = 0		;0=EFFACE LA FIN DE LA DISQUETTE !!!
CODAGE = 0		;0=ON NOT.L LES 512 PREMIERS OCTETS
DISK = 0			;DRIVE A
FACE = 0
FIRSTTRK = 74
FIRSTSEC = 2
LASTTRACK = 80		;NB TRACKS
	BRA.S	O
FILE1:	DC.B	'NEWDOS.PRG',0
	EVEN
O:
	MOVE	SR,D0
	AND	#$2000,D0
	BNE.S	SUPER
	CLR.L	-(SP)
	MOVE	#$20,-(SP)
	TRAP	#1
	ADDQ	#6,SP
SUPER:

GETKEY:	MACRO
	MOVE	#7,-(SP)
	TRAP	#1
	ADDQ	#2,SP
	ENDM
PRINT:	MACRO
	PEA	\1
	MOVE	#9,-(SP)
	TRAP	#1
	ADDQ	#6,SP
	ENDM
OPEN:	MACRO
	CLR	-(SP)		;OPEN LECTURE
	PEA	\1		;FILENAME
	MOVE	#$3D,-(SP)
	TRAP	#1
	ADDQ	#8,SP
	ENDM
EXIT:	MACRO
;	ILLEGAL
	CLR	-(SP)	;EXIT
	TRAP	#1
	ENDM
READ:	MACRO
	PEA	\1		;ADRESSE
	PEA	\2		;LONGUEUR
	MOVE	\3,-(SP)	;HANDLE
	MOVE	#$3F,-(SP)
	TRAP	#1
	LEA	12(SP),SP
	ENDM
CLOSE:	MACRO
	MOVE	\1,-(SP)	;HANDLE
	MOVE	#$3E,-(SP)
	TRAP	#1
	ADDQ	#4,SP
	ENDM
WRITE:	MACRO	;COUNT,SIDE,TRACK,SECTOR,DEVICE,BUFFER
	MOVE	\1,-(SP)	;COUNT
	MOVE	\2,-(SP)	;SIDE
	MOVE	\3,-(SP)	;TRACK
	MOVE	\4,-(SP)	;SECTOR
	MOVE	\5,-(SP)	;DEVICE
	CLR.L	-(SP)
	MOVE.L	\6,-(SP)	;TAMPON
	MOVE	#9,-(SP)
	TRAP	#14
	LEA	20(SP),SP
	ENDM
READBOOT:MACRO	;COUNT,SIDE,TRACK,SECTOR,DEVICE,BUFFER
	MOVE	#1,-(SP)	;COUNT
	MOVE	#0,-(SP)	;SIDE
	MOVE	#0,-(SP)	;TRACK
	MOVE	#1,-(SP)	;SECTOR
	MOVE	#DISK,-(SP)	;DEVICE
	CLR.L	-(SP)
	MOVE.L	$4C6.W,-(SP)	;TAMPON
	MOVE	#8,-(SP)
	TRAP	#14
	LEA	20(SP),SP
	ENDM

	LEA	FILE1(PC),A6
	BSR	READFILE

	IFEQ	CODAGE
	LEA	TAMPON,A0
	MOVE.L	FINBUF,A1
	MOVEQ	#0,D0
CODE:
	ADD	#$C0DE,D0
	SUB	D0,(A0)+
	CMP.L	A1,A0
	BLO.S	CODE
	ENDC
REGET:
	PRINT	MESS1(PC)
	GETKEY
	PRINT	CR(PC)

	READBOOT
	MOVE.L	$4C6.W,A0
	MOVEQ	#0,D0
	MOVE	#512/2-1,D1
CHKSUM:	ADD	(A0)+,D0
	DBRA	D1,CHKSUM
	CMP	#$1234,D0
	BNE.S	REGET

	MOVE	#FIRSTTRK,TRACK
	MOVE	#FIRSTSEC,SECTOR
	BSR	WRITEFILE

	EXIT

READFILE:
	LEA	TAMPON,A0
	MOVE.L	#'MCOD',D0
	MOVE.L	#'ERMC',D1
	MOVE.L	#'ODER',D2
	MOVE	#60000/12-1,D3
.FILL	MOVE.L	D0,(A0)+
	MOVE.L	D1,(A0)+
	MOVE.L	D2,(A0)+
	DBRA	D3,.FILL

	PRINT	MESS3(PC)		;LOADING FILE
	PRINT	(A6)
	PRINT	CR(PC)
	OPEN	(A6)
	MOVE.L	D0,D7			;D7=HANDLE
	BMI	ERREUR
	READ	TAMPON,200000,D7
	MOVE.L	D0,D6			;D6=NB BYTES
	BMI	ERREUR
	ADD.L	#TAMPON,D6
	MOVE.L	D6,FINBUF
	CLOSE	D7
	RTS
WRITEFILE:
	PRINT	MESS2(PC)
	PRINT	(A6)
	PRINT	CR(PC)

	MOVE.L	#TAMPON,BUFFER
	MOVEQ	#0,D7		;NB SECTEURS
	MOVE	SECTOR,D6	;1ER SECTEUR
	MOVE.L	BUFFER,A6	;ADRESSE DEBUT A SAUVER
	MOVEQ	#0,D5		;NB SECTEURS
BCLWRT:
	ADDQ	#1,D5
	ADDQ	#1,D7
	ADD.L	#512,BUFFER
	ADDQ	#1,SECTOR
	CMP	#10,SECTOR
	BLS.S	NXTSEC
	BSR	FASTWRT
	MOVE.L	BUFFER,A6
	MOVE	#1,SECTOR
	MOVEQ	#0,D7
	MOVEQ	#1,D6
	ADDQ	#1,TRACK
	CMP	#LASTTRACK,TRACK
	BHS	ERREUR3
NXTSEC:
	MOVE.L	BUFFER,D0
	CMP.L	FINBUF,D0
	BLO.S	BCLWRT

	IFEQ	CODEFINAL
	CMP	#LASTTRACK,TRACK
	BLO.S	BCLWRT
	ENDC

	BSR	FASTWRT

	MOVEQ	#' ',D0
	LEA	NBSEC(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	LEA	PTRACK(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	LEA	PSECTOR(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+

	MOVEQ	#0,D7
	MOVE	D5,D7
	LEA	NBSEC(PC),A6
	BSR	DECIMAL

	MOVEQ	#0,D7
	MOVE	TRACK,D7
	LEA	PTRACK(PC),A6
	BSR	DECIMAL

	MOVEQ	#0,D7
	MOVE	SECTOR,D7
	LEA	PSECTOR(PC),A6
	BSR	DECIMAL

	PRINT	FINAL(PC)

	RTS
;
; D6=NUMERO DU PREMIER SECTEUR
; D7=NB SECTEURS A SAUVER
; A6=DEBUT RAM A SAUVER
;
FASTWRT:
	TST	D7
	BEQ.S	FSTWR1
	WRITE	D7,#FACE,TRACK,D6,#DISK,A6
	TST.L	D0
	BMI	ERREUR2
FSTWR1:	RTS

DECIMAL:
	CLR	-(SP)
DECIM1:
	DIVU	#10,D7
	SWAP	D7
	ADD	#'0',D7
	MOVE	D7,-(SP)
	CLR	D7
	SWAP	D7
	TST.L	D7
	BNE.S	DECIM1
	MOVE	(SP)+,D7
DECIM2:	MOVE.B	D7,(A6)+
	MOVE	(SP)+,D7
	BNE.S	DECIM2
	RTS

TRACK:	DC.W	0
SECTOR:	DC.W	0
BUFFER:	DC.L	0
FINBUF:	DC.L	0


ERREUR:
	PRINT	ERROR1(PC)
	GETKEY
	EXIT
ERREUR2:
	PRINT	ERROR2(PC)
	GETKEY
	EXIT
ERREUR3:
	PRINT	ERROR3(PC)
	GETKEY
	EXIT

ERROR1:	DC.B	'FILE NOT FOUND...',13,10,0
ERROR2:	DC.B	'ERROR DURING WRITING',13,10,0
ERROR3:	DC.B	'FILE TOO BIG',13,10,0
FINAL:
	DC.B	'TOTAL SECTORS= '
NBSEC:	DC.B	'    ',13,10
	DC.B	'LAST TRACK= '
PTRACK:	DC.B	'  ',13,10
	DC.B	'LAST SECTOR= '
PSECTOR:DC.B	'  ',13,10,13,10,0
MESS1:	DC.B	'INSERT DISK IN DRIVE '
	DC.B	'A'+DISK,0
MESS2:	DC.B	'SAVING FILE ',0
MESS3:	DC.B	'LOADING FILE ',0
CR:	DC.B	13,10,0
	EVEN
TAMPON:
