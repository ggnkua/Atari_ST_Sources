LOADER=0	;0=LOADER,1=SIDE 0,2=SIDE 1
;
; disk 2
;
; GENERE LE FICHIER SUIVANT :
;	DC.L	NUMERO PREMIER OCTET,NB OCTETS A CHARGER
;
DISK=0		;DRIVE A

	IF	LOADER=0
FACE=0
FIRSTTRK=1
FIRSTSEC=1
	ENDIF
	IF	LOADER=1
FACE=0
FIRSTTRK=5
FIRSTSEC=1
	ENDIF
	IF	LOADER=2
FACE=1
FIRSTTRK=0
FIRSTSEC=1
	ENDIF

	IF	LOADER=3
FACE=0
FIRSTTRK=0
FIRSTSEC=3
	ENDIF

NBSECT=10
NBTRK=82
;
TOP=$80000
;
; D0=TYPE D'ERREUR
;	0=PAS D'ERREUR
;	-1=ERREUR EN ECRITURE
;	-2=DISQUE PLEIN
;	-3=FICHIER NON TROUVE
;
; A0=PTR DEBUT DIRECTORY
; A1=PTR FIN DIRECTORY
;
; ASTUCE GENIALE :
;	PERMET D'ENVOYER DES PREVERSIONS NON PIRATABLES
;
PRINT:	MACRO
	PEA	?1
	MOVE	#9,-(SP)
	TRAP	#1
	ADDQ	#6,SP
	ENDM
WRITE:	MACRO			;COUNT,SIDE,TRACK,SECTOR,DEVICE,BUFFER
	MOVE	?1,-(SP)	;COUNT
	MOVE	?2,-(SP)	;SIDE
	MOVE	?3,-(SP)	;TRACK
	MOVE	?4,-(SP)	;SECTOR
	MOVE	?5,-(SP)	;DEVICE
	CLR.L	-(SP)
	MOVE.L	?6,-(SP)	;TAMPON
	MOVE	#9,-(SP)
	TRAP	#14
	LEA	20(SP),SP
	ENDM
;
; PTR GENERATION DIRECTORY
;
	LEA	DIRECTORY,A3	;GENERATION DIRECTORY
	LEA	FILES(PC),A6
	MOVE.L	#TOP,TAMPON
TAKEFILE:
	MOVEQ	#0,D0
	MOVE.B	(A6),D0
	BMI	FINI
	BSR	LOADFILE
SKIPFILE:
	TST.B	(A6)+
	BNE.S	SKIPFILE
	BRA.S	TAKEFILE
FINI:
;
; ON REMPLIT LES 512 DERNIERS OCTETS AVEC UN MESSAGE DEBILE
;
	MOVEM.L	D0-D7/A0-A6,-(SP)
	MOVE.L	TAMPON,A0
	LEA	STRING(PC),A3
	LEA	512(A0),A1
NEWSTR:
	MOVE.L	A3,A2
	MOVE.B	(A2)+,D0
FILL:
	MOVE.B	D0,(A0)+
	MOVE.B	(A2)+,D0
	BEQ.S	NEWSTR
	CMP.L	A1,A0
	BLO.S	FILL
	BRA.S	NOCHAIN
STRING:
	DC.B	"MCODER STRIKES BACK.",0
	EVEN
NOCHAIN:
	MOVEM.L	(SP)+,D0-D7/A0-A6

	MOVE.L	TAMPON,D0
	SUB.L	#TOP,D0
	ADD.L	#511,D0
	LSR.L	#8,D0
	LSR.L	#1,D0
	MOVE	D0,D5

	DIVU	#NBSECT,D0
	ADD	#FIRSTTRK,D0
	MOVE	D0,TRACK
	SWAP	D0
	ADD	#FIRSTSEC,D0
	CMP	#NBSECT,D0
	BLS.S	LOW11
	ADDQ	#1,TRACK
	SUB	#NBSECT,D0
LOW11:
	MOVE	D0,SECTOR

	BSR	DISPLAY

	IF	LOADER=0
	MOVE.L	#'CODE',D0
	MOVE	#$800/4-1,D1
	LEA	TOP,A0
CRYPTE:
	EOR.L	#$31415926,D0
	ADD.L	#$27182818,D0
	EOR.L	D0,(A0)+
	DBRA	D1,CRYPTE
	ENDIF

	IF	LOADER=3
	MOVE.L	#'FUCK',D0
	MOVE	#$C00/4-1,D1
	LEA	TOP,A0
CRYPTE:
	EOR.L	#$01234567,D0
	ADD.L	#$89ABCDEF,D0
	EOR.L	D0,(A0)+
	DBRA	D1,CRYPTE
	ENDIF

	PRINT	MESS1(PC)
	MOVE	#7,-(SP)
	TRAP	#1
	ADDQ	#2,SP

	PRINT	CR(PC)
;
; RAJOUT DU TEST DE DISQUE
;
	MOVE	#DISK,-(SP)
	MOVE	#9,-(SP)
	TRAP	#13
	ADDQ	#4,SP
	TST	D0
	BEQ	ERRDSK

	MOVE	#1,-(SP)
	CLR	-(SP)
	CLR	-(SP)
	MOVE	#1,-(SP)
	MOVE	#DISK,-(SP)
	CLR.L	-(SP)
	PEA	BOOTSECTOR
	MOVE	#8,-(SP)
	TRAP	#14
	LEA	20(SP),SP
	TST	D0
	BMI	ERRDSK

	LEA	BOOTSECTOR,A0
	MOVE	#512/2-1,D0
	MOVEQ	#0,D1
CHKSUM:	ADD	(A0)+,D1
	DBRA	D0,CHKSUM
	CMP	#$1234,D1
	BNE	ERRDSK

	MOVE	#FIRSTTRK,TRACK
	MOVE	#FIRSTSEC,SECTOR
	BSR	WRITEFILE
	MOVEQ	#0,D0
EXIT:
BUG:
	LEA	DIRECTORY,A0
	MOVE.L	A3,A1

	LEA	TOP,A2
	MOVE.L	TAMPON(PC),A3
	ILLEGAL
LOADFILE:
	MOVE.B	#9,(A3)+
	MOVE.B	#'G',(A3)+
	MOVE.B	#'E',(A3)+
	MOVE.B	#'N',(A3)+
	MOVE.B	#'D',(A3)+
	MOVE.B	#'I',(A3)+
	MOVE.B	#'R',(A3)+
	MOVE.B	#9,(A3)+

	LEA	SOUSDIR(PC),A5
NXTDIR:
	LEA	BUFFER,A4

COPYFIL:MOVE.B	(A5)+,(A4)+
	BNE.S	COPYFIL
	SUBQ	#1,A4

	MOVE.L	A6,A0
COPY2:	MOVE.B	(A0)+,(A4)+
	BNE.S	COPY2

	MOVE.B	#'.',-1(A4)
	MOVE.B	#'C',(A4)+
	MOVE.B	#'M',(A4)+
	MOVE.B	#'P',(A4)+
	CLR.B	(A4)+
;
; ICI BUFFER CONTIENT LE NOM DU FICHIER A ESSAYER
;
	PRINT	BUFFER(PC)
	PRINT	CR1(PC)

	CLR	-(SP)
	PEA	BUFFER(PC)
	MOVE	#$3D,-(SP)
	TRAP	#1
	ADDQ	#8,SP
	MOVE.L	D0,D7
	BPL.S	NOERR

	TST.B	(A5)
	BPL.S	NXTDIR
	MOVEQ	#-3,D0
	BRA	EXIT		;FICHIER NON TROUVE
NOERR:
	PRINT	CR2(PC)

	MOVE.L	TAMPON(PC),-(SP)
	PEA	1000000
	MOVE	D7,-(SP)
	MOVE	#$3F,-(SP)
	TRAP	#1
	LEA	12(SP),SP
	MOVE.L	D0,D6
	BMI	BUG

	MOVE	D7,-(SP)
	MOVE	#$3E,-(SP)
	TRAP	#1
	ADDQ	#4,SP

	ADDQ.L	#1,D6
	AND.B	#-2,D6		;TOUJOURS PAIR !!!!

	ADD.L	D6,TAMPON
	MOVE.L	D6,D0			;NB OCTETS

;	MOVE.B	#',',(A3)+
	BSR	HEXA

	MOVE.B	#9,(A3)+
	MOVE.B	#';',(A3)+
	LEA	BUFFER(PC),A0
COPNAM:	MOVE.B	(A0)+,(A3)+
	BNE.S	COPNAM
	SUBQ	#1,A3
	MOVE.B	#13,(A3)+
	MOVE.B	#10,(A3)+
	RTS

TAMPON:	DC.L	0

WRITEFILE:
	PRINT	MESS2(PC)
	PRINT	CR(PC)

	MOVE.L	#TOP,BUFFER
	MOVEQ	#0,D7		;NB SECTEURS
	MOVE	SECTOR,D6	;1ER SECTEUR
	MOVE.L	BUFFER,A6	;ADRESSE DEBUT A SAUVER
	MOVEQ	#0,D5		;NB SECTEURS
BCLWRT:
	ADDQ	#1,D5
	ADDQ	#1,D7
	ADD.L	#512,BUFFER
	ADDQ	#1,SECTOR
	CMP	#NBSECT,SECTOR
	BLS.S	NXTSEC
	BSR	FASTWRT
	MOVE.L	BUFFER,A6
	MOVE	#1,SECTOR
	MOVEQ	#0,D7
	MOVEQ	#1,D6
	ADDQ	#1,TRACK
NXTSEC:
	MOVE.L	BUFFER,D0
	CMP.L	TAMPON,D0
	BLO.S	BCLWRT
	BSR	FASTWRT
	BSR	DISPLAY
	RTS

DISPLAY:
	MOVEQ	#' ',D0
	LEA	NBSEC(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	LEA	PTRACK(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+
	LEA	PSECTOR(PC),A0
	MOVE.B	D0,(A0)+
	MOVE.B	D0,(A0)+

	MOVEQ	#0,D7
	MOVE	D5,D7
	LEA	NBSEC(PC),A6
	BSR	DECIMAL

	MOVEQ	#0,D7
	MOVE	TRACK,D7
	LEA	PTRACK(PC),A6
	BSR	DECIMAL

	MOVEQ	#0,D7
	MOVE	SECTOR,D7
	LEA	PSECTOR(PC),A6
	BSR	DECIMAL

	PRINT	FINAL(PC)
	RTS
;
; D6=NUMERO DU PREMIER SECTEUR
; D7=NB SECTEURS A SAUVER
; A6=DEBUT RAM A SAUVER
;
FASTWRT:
	TST	D7
	BEQ.L	FSTWRT1
	CMP	#NBTRK,TRACK
	BHS	ERREUR3
	WRITE	D7,#FACE,TRACK,D6,#DISK,A6
	TST.L	D0
	BMI	ERREUR2
FSTWRT1:RTS

DECIMAL:
	CLR	-(SP)
DECIM1:	DIVU	#10,D7
	SWAP	D7
	ADD	#'0',D7
	MOVE	D7,-(SP)
	CLR	D7
	SWAP	D7
	TST.L	D7
	BNE.S	DECIM1
	MOVE	(SP)+,D7
DECIM2:	MOVE.B	D7,(A6)+
	MOVE	(SP)+,D7
	BNE.S	DECIM2
	RTS

HEXA:
	clr	-(sp)
deci1:
	moveq	#0,d1
	moveq	#32-1,d2
deci2:
	add.l	d0,d0
	addx	d1,d1
	cmp	#10,d1
	blo.s	deci3
	addq	#1,d0
	sub	#10,d1
deci3:
	dbra	d2,deci2
	add	#'0',d1
	move	d1,-(sp)
	tst.l	d0
	bne.s	deci1

deci4:
	move	(sp)+,d0
	beq.s	deci5
	move.b	d0,(a3)+
	bra.s	deci4
deci5:	rts

TRACK:	DC.W	0
SECTOR:	DC.W	0

ERREUR2:
	MOVE.L	D0,-(SP)
	PRINT	ERROR2(PC)
	MOVE.L	(SP)+,D0
	BRA	EXIT
ERREUR3:
	PRINT	ERROR3(PC)
	MOVEQ	#-2,D0
	BRA	EXIT
ERRDSK:
	PRINT	WRONG(PC)
	MOVEQ	#-3,D0
	BRA	EXIT

CR1:	DC.B	27,'K',13,0
CR2:	DC.B	10,0
ERROR2:	DC.B	'ERROR DURING WRITING',13,10,0
ERROR3:	DC.B	'FILES TOO BIG',13,10,0
WRONG:	DC.B	'WRONG DISK',13,10,0

FINAL:
	DC.B	'TOTAL SECTORS= '
NBSEC:	DC.B	'    ',13,10
	DC.B	'LAST TRACK= '
PTRACK:	DC.B	'  ',13,10
	DC.B	'LAST SECTOR= '
PSECTOR:DC.B	'  ',13,10,13,10,0
MESS1:	DC.B	'INSERT DISK IN DRIVE '
	DC.B	'A'+DISK,0
MESS2:	DC.B	'SAVING FILES ',0
CR:	DC.B	13,10,0
	EVEN

BOOTSECTOR:BLK.B 512
BUFFER:	BLK.B	200
;
; LISTE DES DIFFERENTS SOUS-DIRECTORIES
;
SOUSDIR:
	DC.B	"D:\PEN2\",0
	DC.B	"D:\CMP\",0
	DC.B	"D:\MAIN\",0
	DC.B	"D:\MAKEDISK\",0
	DC.B	"D:\FILLER\",0
	DC.B	"D:\TB2\",0
;	DC.B	'A:\',0
;	DC.B	'E:\MCODER\TBD\DISK2\',0
	DC.B	-1
;
FILES:
;
	IF	LOADER=0
	dc.b	'NEWDOS.BIN',0
	ENDIF

	IF	LOADER=1
	DC.B	'PEN2',0
	DC.B	'MAIN',0

	DC.B	'FUTUR_M',0
	DC.B	'LEGACY',0
	DC.B	'MADVIS',0
	DC.B	'OXYGENE',0
	DC.B	'UNDEAD',0

	DC.B	'HIDDEN2',0
	ENDIF

	IF	LOADER=2
	DC.B	'DNT',0
	DC.B	'GENESIS',0
	DC.B	'HYSTERIA',0
	DC.B	'NAOS',0
	DC.B	'POLTER',0
	DC.B	'VGT',0
	DC.B	'ZIGGY',0
	ENDIF

	IF	LOADER=3
	DC.B	'PROTO.PRG',0
	ENDIF

	DC.B	-1
	EVEN
DIRECTORY:

