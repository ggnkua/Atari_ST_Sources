;
; PROGRAMME DE REGROUPEMENT DES DIGITS
;  (AVEC RECALCUL DES DIGITS REELLES SI MAL RIPPE)
;
; 1) SCANNE LE DIRECTORY
; 2) POUR CHAQUE FICHIER, ON CHERCHE LES DIGITS
; 3) ON MEMORISE LES DIGITS
;
DIGITS=$40000	;ADRESSE CHARGEMENT DU FICHIER DE DIGITS
LONGDIG=24808

LOAD=$80000
SAVE=$90000
LONG=32000


	BSR	GENCONV
	MOVE.L	#DIGITS+LONGDIG,PTRFIN

	BRA	SKIPERR

ERREUR:
	MOVEQ	#-1,D0
	ILLEGAL

SKIPERR:

PRINT:	MACRO
	PEA	?1
	MOVE	#9,-(SP)
	TRAP	#1
	ADDQ	#6,SP
	ENDM

	MOVE	#$2F,-(SP)
	TRAP	#1
	ADDQ	#2,SP
	MOVE.L	D0,DTA

	LEA	DIRECTORY,A6

	CLR	-(SP)
	PEA	FILE(PC)
	MOVE	#$4E,-(SP)
	TRAP	#1
	ADDQ	#8,SP
	TST	D0
	BNE	ERREUR
PUSHDIR:
	MOVE.L	DTA,A0
	LEA	30(A0),A0
COPYDIR:MOVE.B	(A0)+,(A6)+
	BNE.S	COPYDIR

	MOVE	#$4F,-(SP)
	TRAP	#1
	ADDQ	#2,SP
	TST	D0
	BEQ.S	PUSHDIR
	ST	(A6)

	LEA	DIR,A6
LOADER:
	MOVEQ	#0,D0
	TST.B	(A6)
	BMI	FINI

	PRINT	(A6)
	PRINT	CR(PC)

	LEA	LOAD,A0
	MOVE	#LONG/4-1,D0
	MOVEQ	#0,D1
CLEARE:	MOVE.L	D1,(A0)+
	DBRA	D0,CLEARE

	CLR	-(SP)
	PEA	(A6)
	MOVE	#$3D,-(SP)
	TRAP	#1
	ADDQ	#8,SP
	MOVE.L	D0,D7
	BMI	ERREUR

	PEA	LOAD
	PEA	LONG
	MOVE	D7,-(SP)
	MOVE	#$3F,-(SP)
	TRAP	#1
	LEA	12(SP),SP
	TST.L	D0
	BMI.L	ERREUR
	MOVE.L	D0,NBBYTES

	MOVE	D7,-(SP)
	MOVE	#$3E,-(SP)
	TRAP	#1
	ADDQ	#4,SP

	PEA	(A6)
	BSR	VERIFDIGIT
	MOVE.L	(SP)+,A6

LOOP:	TST.B	(A6)+
	BNE.S	LOOP
	BRA	LOADER
FINI:
	LEA	DIGITS,A0
	MOVE.L	PTRFIN,A1
	MOVEQ	#0,D0
	ILLEGAL
;
; A0=DEBUT
; A1=FIN
;
SAVEFILE:
	MOVE.L	A1,A4

	MOVE.L	A6,A0
FND:	CMP.B	#'.',(A0)+
	BNE.S	FND
	MOVE.B	#'O',(A0)+
	MOVE.B	#'P',(A0)+
	MOVE.B	#'T',(A0)+

	CLR	-(SP)
	PEA	(A6)
	MOVE	#$3C,-(SP)
	TRAP	#1
	ADDQ	#8,SP
	MOVE.L	D0,D7
	BMI	ERREUR

	PEA	SAVE
	MOVE.L	A4,D6
	SUB.L	#SAVE,D6
	MOVE.L	D6,-(SP)
	MOVE	D7,-(SP)
	MOVE	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP
	CMP.L	D6,D0
	BNE	ERREUR

	MOVE	D7,-(SP)
	MOVE	#$3E,-(SP)
	TRAP	#1
	ADDQ	#4,SP
	RTS

VERIFDIGIT:
	CMP.L	#'JOCH',LOAD+32
	BNE.S	OKDIG
	PRINT	JOCH(PC)

	BRA	SPECIAL

OKDIG:

	LEA	LOAD,A6
	ADD.L	$1C(A6),A6

	LEA	LOAD,A5
	ADD	(A6),A5

	MOVE.L	A5,D7
	SUB.L	A6,D7
	LSR	#1,D7
	SUBQ	#1,D7		;D7=NB DIGITS STOCKEES-1
LOOPDIG:
	LEA	LOAD,A5
	ADD	(A6)+,A5
;
; A5=PTR DEBUT DIGIT
;
	LEA	PRESENCE,A4
	LEA	DIGITS,A0
SEARCHDIG:
	MOVE.L	A5,A1
COMPDIG:
	MOVE.B	(A0)+,D0
	CMP.B	(A1)+,D0
	BNE.S	NOTSAME
	CMP.B	#$FF,D0
	BNE.S	COMPDIG
;
; SAME DIGIT
;
	ADDQ.B	#1,(A4)
	BNE.S	SAMEDIGIT
	ST	(A4)
	BRA	SAMEDIGIT
GOEND:
	MOVE.B	(A0)+,D0
NOTSAME:
	CMP.B	#$FF,D0
	BNE.S	GOEND
SKIPFF:
	CMP.B	#$FF,(A0)
	BNE.S	TSTFIN
	ADDQ	#1,A0
	BRA.S	SKIPFF
TSTFIN:
	ADDQ	#1,A4
	CMP.L	PTRFIN,A0
	BLO.S	SEARCHDIG

	ILLEGAL
;
; DIGIT DIFFERENTES
;
;
; ON RECOPIE LA DIGIT A LA FIN DU FICHIER
;
	MOVE.L	PTRFIN,A0
COPYDIG:
	MOVE.B	(A5)+,D0
	MOVE.B	D0,(A0)+
	CMP.B	#$FF,D0
	BNE.S	COPYDIG

	MOVE	A0,D0
	LSR	#1,D0
	BCC.S	PAIR
	ST	(A0)+
PAIR:
	MOVE.L	A0,PTRFIN

SAMEDIGIT:
	DBRA	D7,LOOPDIG
	RTS
*********************************

SPECIAL:
	LEA	CONVERT(PC),A3

	LEA	LOAD,A6
	ADD.L	$1C(A6),A6

	LEA	LOAD,A5
	ADD	(A6),A5

	MOVE.L	A5,D7
	SUB.L	A6,D7
	LSR	#1,D7
	SUBQ	#1,D7		;D7=NB DIGITS STOCKEES-1
LOOPDIG2:
	MOVEQ	#0,D0
	LEA	LOAD,A5
	ADD	(A6)+,A5
;
; A5=PTR DEBUT DIGIT
;
	LEA	PRESENCE,A4
	LEA	DIGITS,A0
SEARCHDIG2:
	MOVE.L	A5,A1
COMPDIG2:
	MOVE.B	(A0)+,D0
	MOVE.B	(A3,D0.W),D0

	CMP.B	(A1)+,D0
	BNE.S	NOTSAME2
	CMP.B	#$88,D0
	BNE.S	COMPDIG2
;
; SAME DIGIT
;
	ADDQ.B	#1,(A4)
	BNE.S	SAMEDIGIT2
	ST	(A4)
	BRA	SAMEDIGIT2
GOEND2:
	MOVE.B	(A0)+,D0
	MOVE.B	(A3,D0.W),D0
NOTSAME2:
	CMP.B	#$88,D0
	BNE.S	GOEND2
SKIPFF2:
	CMP.B	#$FF,(A0)
	BNE.S	TSTFIN2
	ADDQ	#1,A0
	BRA.S	SKIPFF2
TSTFIN2:
	ADDQ	#1,A4
	CMP.L	PTRFIN,A0
	BLO.S	SEARCHDIG2

	PRINT	UNUSED(PC)
;	ILLEGAL


SAMEDIGIT2:
	DBRA	D7,LOOPDIG2
	RTS

GENCONV:
	LEA	CONVERT,A0
	MOVEQ	#0,D0
	LEA	L4E(PC),A3
CONV:
	MOVE	D0,D2
	EOR.B	#$80,D2
	LSR.B	#4,D2
	MOVE.B	(A3,D2.W),(A0)+
	ADDQ.B	#1,D0
	BNE.S	CONV
	MOVE.B	#$88,-(A0)
	RTS

L4E:	DC.B	$00,$07,$09,$0A,$0B,$0C,$0C,$0D
	DC.B	$0D,$0D,$0E,$0E,$0E,$0F,$0F,$0F

PTRFIN:	DC.L	0
NBBYTES:DC.L	0
DTA:	DC.L	0
CHANGE:	DC.B	0
CR:	DC.B	13,10,0
FILE:	DC.B	'*.PAK',0
JOCH:	DC.B	'DIGIT 4 BITS',13,10,0
UNUSED:	DC.B	'BUG !!!',13,10,0
	EVEN
CONVERT:BLK.B	256
PRESENCE:
	BLK.B	1000,0

DIRECTORY:
DIR:
	BLK.B	1000
