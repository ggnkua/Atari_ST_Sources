;:ts=8
	far	data
	global	_crc,4
	global	_bitbuf,2
	global	_compsize,4
	global	_origsize,4
	global	_subbitbuf,1
	global	_header,2152
	global	_bitcount,2
	bss	_get_ptr,4
	bss	_headersize,2
	bss	_first_hdr_size,1
	bss	_arj_x_nbr,1
	bss	_arj_flags,1
	bss	_method,2
	bss	_file_type,2
	bss	_file_crc,4
	bss	_header_crc,4
	bss	_crctable,1024
	global	_source,10000
	global	_dest,10000
	global	_ptr_read,4
	global	_ptr_write,4
_make_crctable:
	link	a6,#.2
	movem.l	.3,-(sp)
	move.l	#0,d4
.6
	move.l	#0,d0
	move.w	d4,d0
	move.l	d0,d6
	move.l	#8,d5
.9
	btst.l	#0,d6
	beq	.10
	move.l	d6,d0
	lsr.l	#1,d0
	move.l	d0,d6
	eor.l	#-306674912,d6
	bra	.11
.10
	lsr.l	#1,d6
.11
.7
	sub.w	#1,d5
	tst.w	d5
	bne	.9
.8
	move.l	#0,d0
	move.w	d4,d0
	asl.l	#2,d0
	lea	_crctable,a0
	move.l	d6,(a0,d0.l)
.4
	add.w	#1,d4
	cmp.w	#255,d4
	bls	.6
.5
.12
	movem.l	(sp)+,.3
	unlk	a6
	rts
.2	equ	0
.3	reg	d4/d5/d6
_crc_buf:
	link	a6,#.13
	movem.l	.14,-(sp)
.15
	move.w	12(a6),d0
	sub.w	#1,12(a6)
	tst.w	d0
	beq	.16
	move.l	8(a6),a0
	add.l	#1,8(a6)
	move.l	#0,d0
	move.b	(a0),d0
	move.l	_crc,d1
	eor.l	d1,d0
	and.l	#255,d0
	asl.l	#2,d0
	lea	_crctable,a0
	move.l	_crc,d1
	lsr.l	#8,d1
	move.l	(a0,d0.l),d2
	eor.l	d1,d2
	move.l	d2,_crc
	bra	.15
.16
.17
	movem.l	(sp)+,.14
	unlk	a6
	rts
.13	equ	0
.14	reg	
_fget_word:
	link	a6,#.18
	movem.l	.19,-(sp)
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d4
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d5
	move.w	d5,d0
	asl.w	#8,d0
	add.w	d4,d0
.20
	movem.l	(sp)+,.19
	unlk	a6
	rts
.18	equ	0
.19	reg	d4/d5
_fget_longword:
	link	a6,#.21
	movem.l	.22,-(sp)
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d4
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d5
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d6
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d7
	move.l	d7,d0
	move.l	#24,d1
	asl.l	d1,d0
	move.l	d6,d1
	move.l	#16,d2
	asl.l	d2,d1
	add.l	d1,d0
	move.l	d5,d1
	asl.l	#8,d1
	add.l	d1,d0
	add.l	d4,d0
.23
	movem.l	(sp)+,.22
	unlk	a6
	rts
.21	equ	0
.22	reg	d4/d5/d6/d7
_fread_crc:
	link	a6,#.24
	movem.l	.25,-(sp)
	move.l	#1,d4
	bra	.29
.28
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.w	d4,d0
	sub.w	#1,d0
	move.l	#0,d1
	move.w	d0,d1
	lea	_header,a1
	move.b	(a0),(a1,d1.l)
.26
	add.w	#1,d4
.29
	cmp.w	_headersize,d4
	bcs	.28
.27
	move.l	#0,d0
	move.w	_headersize,d0
	add.l	d0,_origsize
	move.w	_headersize,-(sp)
	pea	_header
	jsr	_crc_buf
	add.w	#6,sp
.30
	movem.l	(sp)+,.25
	unlk	a6
	rts
.24	equ	0
.25	reg	d4
	public	_fwrite_txt_crc
_fwrite_txt_crc:
	link	a6,#.31
	movem.l	.32,-(sp)
	move.w	12(a6),-(sp)
	move.l	8(a6),-(sp)
	jsr	_crc_buf
	move.w	#1,-2(a6)
	add.w	#6,sp
	bra	.36
.35
	move.l	8(a6),a0
	add.l	#1,8(a6)
	move.l	_ptr_write,a1
	add.l	#1,_ptr_write
	move.b	(a0),(a1)
.33
	add.w	#1,-2(a6)
.36
	move.w	-2(a6),d0
	cmp.w	12(a6),d0
	blt	.35
.34
.37
	movem.l	(sp)+,.32
	unlk	a6
	rts
.31	equ	-2
.32	reg	
_get_word:
	link	a6,#.38
	movem.l	.39,-(sp)
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d4
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d5
	move.w	d5,d0
	asl.w	#8,d0
	add.w	d4,d0
.40
	movem.l	(sp)+,.39
	unlk	a6
	rts
.38	equ	0
.39	reg	d4/d5
_get_longword:
	link	a6,#.41
	movem.l	.42,-(sp)
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d4
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d5
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d6
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.l	d0,d7
	move.l	d7,d0
	move.l	#24,d1
	asl.l	d1,d0
	move.l	d6,d1
	move.l	#16,d2
	asl.l	d2,d1
	add.l	d1,d0
	move.l	d5,d1
	asl.l	#8,d1
	add.l	d1,d0
	add.l	d4,d0
.43
	movem.l	(sp)+,.42
	unlk	a6
	rts
.41	equ	0
.42	reg	d4/d5/d6/d7
_find_header:
	link	a6,#.44
	movem.l	.45,-(sp)
	move.l	#0,d4
.48
	lea	_source,a0
	move.l	d4,d0
	add.l	a0,d0
	move.l	d0,_ptr_read
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d5
.49
	cmp.l	#5000,d4
	bge	.50
	cmp.w	#96,d5
	beq	.51
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d5
	bra	.52
.51
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,d5
	cmp.w	#234,d0
	beq	.50
.52
	add.l	#1,d4
	bra	.49
.50
	cmp.l	#5000,d4
	bge	.47
	jsr	_fget_word
	move.w	d0,_headersize
	cmp.w	#2152,d0
	bhi	.53
	move.l	#-1,_crc
	jsr	_fread_crc
	jsr	_fget_longword
	move.l	_crc,d1
	eor.l	#-1,d1
	cmp.l	d1,d0
	bne	.54
	lea	_source,a0
	move.l	d4,d0
	add.l	a0,d0
	move.l	d0,_ptr_read
	move.l	d4,d0
.55
	movem.l	(sp)+,.45
	unlk	a6
	rts
.54
.53
.46
	add.l	#1,d4
	cmp.l	#5000,d4
	blt	.48
.47
	move.w	#9,-(sp)
	jsr	_exit
	add.w	#2,sp
	bra	.55
.44	equ	0
.45	reg	d4/d5
_read_header:
	link	a6,#.56
	movem.l	.57,-(sp)
	jsr	_fget_word
	move.w	d0,d5
	cmp.w	#-5536,d5
	beq	.58
	tst.w	8(a6)
	beq	.59
	move.w	#9,-(sp)
	jsr	_exit
	add.w	#2,sp
	bra	.60
.59
	move.w	#2,-(sp)
	jsr	_exit
	add.w	#2,sp
.60
.58
	jsr	_fget_word
	move.w	d0,_headersize
	tst.w	_headersize
	bne	.61
	move.l	#0,d0
.62
	movem.l	(sp)+,.57
	unlk	a6
	rts
.61
	cmp.w	#2152,_headersize
	bls	.63
	move.w	#2,-(sp)
	jsr	_exit
	add.w	#2,sp
.63
	move.l	#-1,_crc
	jsr	_fread_crc
	jsr	_fget_longword
	move.l	d0,_header_crc
	move.l	_crc,d0
	eor.l	#-1,d0
	cmp.l	_header_crc,d0
	beq	.64
	move.w	#8,-(sp)
	jsr	_exit
	add.w	#2,sp
.64
	lea	_header,a0
	move.l	a0,_get_ptr
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.b	(a0),_first_hdr_size
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.b	(a0),_arj_x_nbr
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.b	(a0),_arj_flags
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,_method
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	move.l	#0,d0
	move.b	(a0),d0
	move.w	d0,_file_type
	move.l	_get_ptr,a0
	add.l	#1,_get_ptr
	jsr	_get_longword
	jsr	_get_longword
	move.l	d0,_compsize
	jsr	_get_longword
	move.l	d0,_origsize
	jsr	_get_longword
	move.l	d0,_file_crc
	jsr	_get_word
	jsr	_get_word
	jsr	_get_word
.65
	jsr	_fget_word
	move.w	d0,d4
	beq	.66
	move.l	#1,d6
	bra	.70
.69
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
.67
	add.w	#1,d6
.70
	move.w	d4,d0
	add.w	#4,d0
	cmp.w	d0,d6
	bcs	.69
.68
	bra	.65
.66
	move.l	#1,d0
	bra	.62
.56	equ	0
.57	reg	d4/d5/d6
	public	_main
_main:
	link	a6,#.71
	movem.l	.72,-(sp)
	public	.begin
	entry	.begin
.begin
	jsr	_make_crctable
	move.b	#30,_first_hdr_size
	lea	_source,a0
	move.l	a0,_ptr_read
	jsr	_find_header
	lea	_source,a0
	add.l	a0,d0
	move.l	d0,_ptr_read
	move.w	#1,-(sp)
	jsr	_read_header
	tst.w	d0
	add.w	#2,sp
	bne	.73
	move.w	#1,-(sp)
	jsr	_exit
	add.w	#2,sp
.73
	clr.w	-(sp)
	jsr	_read_header
	tst.w	d0
	add.w	#2,sp
	beq	.74
	cmp.b	#3,_arj_x_nbr
	bls	.75
	move.w	#12,-(sp)
	jsr	_exit
	add.w	#2,sp
.75
	btst.b	#0,_arj_flags
	beq	.76
	move.w	#7,-(sp)
	jsr	_exit
	add.w	#2,sp
.76
	cmp.w	#1,_method
	blt	.78
	cmp.w	#3,_method
	ble	.77
.78
	move.w	#10,-(sp)
	jsr	_exit
	add.w	#2,sp
.77
	tst.w	_file_type
	beq	.79
	move.w	#11,-(sp)
	jsr	_exit
	add.w	#2,sp
.79
	lea	_dest,a0
	move.l	a0,_ptr_write
	move.l	#-1,_crc
	jsr	_decode
	move.l	_crc,d0
	eor.l	#-1,d0
	cmp.l	_file_crc,d0
	beq	.80
	move.w	#6,-(sp)
	jsr	_exit
	add.w	#2,sp
.80
.74
	move.l	#0,d0
.81
	movem.l	(sp)+,.72
	unlk	a6
	rts
	public	_exit
_exit:	illegal
.71	equ	0
.72	reg	
	bss	_left,2038
	bss	_right,2038
	bss	_c_len,510
	bss	_pt_len,19
	bss	_c_table,8192
	bss	_pt_table,512
	bss	_blocksize,2
	public	_fillbuf
_fillbuf:
	link	a6,#.82
	movem.l	.83,-(sp)
	move.w	_bitbuf,d0
	move.w	8(a6),d1
	asl.w	d1,d0
	move.w	d0,_bitbuf
.84
	move.w	8(a6),d0
	cmp.w	_bitcount,d0
	ble	.85
	move.l	#0,d0
	move.b	_subbitbuf,d0
	move.w	_bitcount,d1
	sub.w	d1,8(a6)
	move.w	8(a6),d1
	asl.w	d1,d0
	or.w	d0,_bitbuf
	tst.l	_compsize
	beq	.86
	sub.l	#1,_compsize
	move.l	_ptr_read,a0
	add.l	#1,_ptr_read
	move.b	(a0),_subbitbuf
	bra	.87
.86
	clr.b	_subbitbuf
.87
	move.w	#8,_bitcount
	bra	.84
.85
	move.l	#0,d0
	move.b	_subbitbuf,d0
	move.w	8(a6),d1
	sub.w	d1,_bitcount
	move.w	_bitcount,d1
	lsr.w	d1,d0
	or.w	d0,_bitbuf
.88
	movem.l	(sp)+,.83
	unlk	a6
	rts
.82	equ	0
.83	reg	
	public	_getbits
_getbits:
	link	a6,#.89
	movem.l	.90,-(sp)
	move.l	#16,d0
	sub.w	8(a6),d0
	move.w	_bitbuf,d4
	lsr.w	d0,d4
	move.w	8(a6),-(sp)
	jsr	_fillbuf
	move.w	d4,d0
	add.w	#2,sp
.91
	movem.l	(sp)+,.90
	unlk	a6
	rts
.89	equ	0
.90	reg	d4
	global	_count,34
	global	_weight,34
	global	_start,36
	global	_p,4
	global	_i,2
	global	_k,2
	global	_len,2
	global	_ch,2
	global	_jutbits,2
	global	_avail,2
	global	_nextcode,2
	global	_mask,2
_make_table:
	link	a6,#.92
	movem.l	.93,-(sp)
	move.w	#1,_i
.96
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_count,a0
	clr.w	(a0,d0.l)
.94
	add.w	#1,_i
	cmp.w	#16,_i
	bls	.96
.95
	clr.w	_i
	bra	.100
.99
	move.l	#0,d0
	move.w	_i,d0
	move.l	10(a6),a0
	move.l	#0,d1
	move.b	(a0,d0.l),d1
	asl.l	#1,d1
	lea	_count,a0
	add.w	#1,(a0,d1.l)
.97
	add.w	#1,_i
.100
	move.w	_i,d0
	cmp.w	8(a6),d0
	blt	.99
.98
	clr.w	_start+2
	move.w	#1,_i
.103
	move.w	_i,d0
	add.w	#1,d0
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	lea	_start,a0
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_count,a1
	move.l	#16,d2
	sub.w	_i,d2
	move.w	(a1,d0.l),d3
	asl.w	d2,d3
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_start,a1
	add.w	(a1,d0.l),d3
	move.w	d3,(a0,d1.l)
.101
	add.w	#1,_i
	cmp.w	#16,_i
	bls	.103
.102
	tst.w	_start+34
	beq	.104
	move.w	#3,-(sp)
	jsr	_exit
	add.w	#2,sp
.104
	move.l	#16,d0
	sub.w	14(a6),d0
	move.w	d0,_jutbits
	move.w	#1,_i
	bra	.108
.107
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_start,a0
	add.l	d0,a0
	move.w	(a0),d0
	move.w	_jutbits,d1
	lsr.w	d1,d0
	move.w	d0,(a0)
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_weight,a0
	move.w	14(a6),d1
	sub.w	_i,d1
	move.l	#1,d2
	asl.w	d1,d2
	move.w	d2,(a0,d0.l)
.105
	add.w	#1,_i
.108
	move.w	_i,d0
	cmp.w	14(a6),d0
	ble	.107
.106
.109
	cmp.w	#16,_i
	bhi	.110
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	lea	_weight,a0
	move.l	#16,d1
	sub.w	_i,d1
	move.l	#1,d2
	asl.w	d1,d2
	move.w	d2,(a0,d0.l)
	add.w	#1,_i
	bra	.109
.110
	move.w	14(a6),d0
	add.w	#1,d0
	ext.l	d0
	asl.l	#1,d0
	lea	_start,a0
	move.w	(a0,d0.l),d1
	move.w	_jutbits,d0
	lsr.w	d0,d1
	move.w	d1,_i
	tst.w	_i
	beq	.111
	move.l	#1,d0
	move.w	14(a6),d1
	asl.w	d1,d0
	move.w	d0,_k
.112
	move.w	_i,d0
	cmp.w	_k,d0
	beq	.113
	move.w	_i,d0
	add.w	#1,_i
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	move.l	16(a6),a0
	clr.w	(a0,d1.l)
	bra	.112
.113
.111
	move.w	8(a6),_avail
	move.l	#15,d0
	sub.w	14(a6),d0
	move.l	#1,d1
	asl.w	d0,d1
	move.w	d1,_mask
	clr.w	_ch
	bra	.117
.116
	move.l	#0,d0
	move.w	_ch,d0
	move.l	10(a6),a0
	move.l	#0,d1
	move.b	(a0,d0.l),d1
	move.w	d1,_len
	beq	.114
	move.l	#0,d0
	move.w	_len,d0
	asl.l	#1,d0
	lea	_start,a0
	move.w	(a0,d0.l),_k
	move.l	#0,d0
	move.w	_len,d0
	asl.l	#1,d0
	lea	_weight,a0
	move.w	(a0,d0.l),d1
	add.w	_k,d1
	move.w	d1,_nextcode
	move.w	_len,d0
	cmp.w	14(a6),d0
	bgt	.118
	move.l	#0,d0
	move.w	_len,d0
	asl.l	#1,d0
	lea	_start,a0
	move.w	(a0,d0.l),_i
	bra	.122
.121
	move.l	#0,d0
	move.w	_i,d0
	asl.l	#1,d0
	move.l	16(a6),a0
	move.w	_ch,(a0,d0.l)
.119
	add.w	#1,_i
.122
	move.w	_i,d0
	cmp.w	_nextcode,d0
	bcs	.121
.120
	bra	.123
.118
	move.w	_k,d0
	move.w	_jutbits,d1
	lsr.w	d1,d0
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	add.l	16(a6),d1
	move.l	d1,_p
	move.w	_len,d0
	sub.w	14(a6),d0
	move.w	d0,_i
.124
	tst.w	_i
	beq	.125
	move.l	_p,a0
	tst.w	(a0)
	bne	.126
	move.l	#0,d0
	move.w	_avail,d0
	asl.l	#1,d0
	lea	_left,a0
	clr.w	(a0,d0.l)
	move.l	#0,d0
	move.w	_avail,d0
	asl.l	#1,d0
	lea	_right,a0
	clr.w	(a0,d0.l)
	move.w	_avail,d0
	add.w	#1,_avail
	move.l	_p,a0
	move.w	d0,(a0)
.126
	move.w	_k,d0
	and.w	_mask,d0
	beq	.127
	move.l	_p,a0
	move.l	#0,d0
	move.w	(a0),d0
	asl.l	#1,d0
	lea	_right,a0
	add.l	a0,d0
	move.l	d0,_p
	bra	.128
.127
	move.l	_p,a0
	move.l	#0,d0
	move.w	(a0),d0
	asl.l	#1,d0
	lea	_left,a0
	add.l	a0,d0
	move.l	d0,_p
.128
	asl	_k
	sub.w	#1,_i
	bra	.124
.125
	move.l	_p,a0
	move.w	_ch,(a0)
.123
	move.l	#0,d0
	move.w	_len,d0
	asl.l	#1,d0
	lea	_start,a0
	move.w	_nextcode,(a0,d0.l)
.114
	add.w	#1,_ch
.117
	move.w	_ch,d0
	cmp.w	8(a6),d0
	blt	.116
.115
.129
	movem.l	(sp)+,.93
	unlk	a6
	rts
.92	equ	0
.93	reg	
_read_pt_len:
	link	a6,#.130
	movem.l	.131,-(sp)
	move.w	10(a6),-(sp)
	jsr	_getbits
	move.w	d0,d5
	tst.w	d5
	add.w	#2,sp
	bne	.132
	move.w	10(a6),-(sp)
	jsr	_getbits
	move.w	d0,d6
	move.l	#0,d4
	add.w	#2,sp
	bra	.136
.135
	lea	_pt_len,a0
	clr.b	(a0,d4.w)
.133
	add.w	#1,d4
.136
	cmp.w	8(a6),d4
	blt	.135
.134
	move.l	#0,d4
.139
	move.w	d4,d0
	ext.l	d0
	asl.l	#1,d0
	lea	_pt_table,a0
	move.w	d6,(a0,d0.l)
.137
	add.w	#1,d4
	cmp.w	#256,d4
	blt	.139
.138
	bra	.140
.132
	move.l	#0,d4
.141
	cmp.w	d5,d4
	bge	.142
	move.w	_bitbuf,d6
	move.l	#13,d0
	lsr.w	d0,d6
	cmp.w	#7,d6
	bne	.143
	move.w	#4096,d7
.144
	move.w	d7,d0
	and.w	_bitbuf,d0
	beq	.145
	lsr.w	#1,d7
	add.w	#1,d6
	bra	.144
.145
.143
	cmp.w	#7,d6
	bge	.146
	move.l	#3,d0
	bra	.147
.146
	move.w	d6,d0
	sub.w	#3,d0
.147
	move.w	d0,-(sp)
	jsr	_fillbuf
	move.w	d4,d0
	add.w	#1,d4
	lea	_pt_len,a0
	move.b	d6,(a0,d0.w)
	cmp.w	12(a6),d4
	add.w	#2,sp
	bne	.148
	move.w	#2,-(sp)
	jsr	_getbits
	move.w	d0,d6
	add.w	#2,sp
.149
	sub.w	#1,d6
	tst.w	d6
	blt	.150
	move.w	d4,d0
	add.w	#1,d4
	lea	_pt_len,a0
	clr.b	(a0,d0.w)
	bra	.149
.150
.148
	bra	.141
.142
.151
	cmp.w	8(a6),d4
	bge	.152
	move.w	d4,d0
	add.w	#1,d4
	lea	_pt_len,a0
	clr.b	(a0,d0.w)
	bra	.151
.152
	pea	_pt_table
	move.w	#8,-(sp)
	pea	_pt_len
	move.w	8(a6),-(sp)
	jsr	_make_table
	lea	12(sp),sp
.140
.153
	movem.l	(sp)+,.131
	unlk	a6
	rts
.130	equ	0
.131	reg	d4/d5/d6/d7
_read_c_len:
	link	a6,#.154
	movem.l	.155,-(sp)
	move.w	#9,-(sp)
	jsr	_getbits
	move.w	d0,d6
	tst.w	d6
	add.w	#2,sp
	bne	.156
	move.w	#9,-(sp)
	jsr	_getbits
	move.w	d0,d5
	move.l	#0,d4
	add.w	#2,sp
.159
	lea	_c_len,a0
	clr.b	(a0,d4.w)
.157
	add.w	#1,d4
	cmp.w	#510,d4
	blt	.159
.158
	move.l	#0,d4
.162
	move.w	d4,d0
	ext.l	d0
	asl.l	#1,d0
	lea	_c_table,a0
	move.w	d5,(a0,d0.l)
.160
	add.w	#1,d4
	cmp.w	#4096,d4
	blt	.162
.161
	bra	.163
.156
	move.l	#0,d4
.164
	cmp.w	d6,d4
	bge	.165
	move.w	_bitbuf,d0
	lsr.w	#8,d0
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	lea	_pt_table,a0
	move.w	(a0,d1.l),d5
	cmp.w	#19,d5
	blt	.166
	move.w	#128,d7
.169
	move.w	_bitbuf,d0
	and.w	d7,d0
	beq	.170
	move.w	d5,d0
	ext.l	d0
	asl.l	#1,d0
	lea	_right,a0
	move.w	(a0,d0.l),d5
	bra	.171
.170
	move.w	d5,d0
	ext.l	d0
	asl.l	#1,d0
	lea	_left,a0
	move.w	(a0,d0.l),d5
.171
	lsr.w	#1,d7
.167
	cmp.w	#19,d5
	bge	.169
.168
.166
	lea	_pt_len,a0
	move.l	#0,d0
	move.b	(a0,d5.w),d0
	move.w	d0,-(sp)
	jsr	_fillbuf
	cmp.w	#2,d5
	add.w	#2,sp
	bgt	.172
	tst.w	d5
	bne	.173
	move.l	#1,d5
	bra	.174
.173
	cmp.w	#1,d5
	bne	.175
	move.w	#4,-(sp)
	jsr	_getbits
	move.w	d0,d5
	add.w	#3,d5
	add.w	#2,sp
	bra	.176
.175
	move.w	#9,-(sp)
	jsr	_getbits
	move.w	d0,d5
	add.w	#20,d5
	add.w	#2,sp
.176
.174
.177
	sub.w	#1,d5
	tst.w	d5
	blt	.178
	move.w	d4,d0
	add.w	#1,d4
	lea	_c_len,a0
	clr.b	(a0,d0.w)
	bra	.177
.178
	bra	.179
.172
	move.w	d5,d0
	sub.w	#2,d0
	move.w	d4,d1
	add.w	#1,d4
	lea	_c_len,a0
	move.b	d0,(a0,d1.w)
.179
	bra	.164
.165
.180
	cmp.w	#510,d4
	bge	.181
	move.w	d4,d0
	add.w	#1,d4
	lea	_c_len,a0
	clr.b	(a0,d0.w)
	bra	.180
.181
	pea	_c_table
	move.w	#12,-(sp)
	pea	_c_len
	move.w	#510,-(sp)
	jsr	_make_table
	lea	12(sp),sp
.163
.182
	movem.l	(sp)+,.155
	unlk	a6
	rts
.154	equ	0
.155	reg	d4/d5/d6/d7
_decode_c:
	link	a6,#.183
	movem.l	.184,-(sp)
	tst.w	_blocksize
	bne	.185
	move.w	#16,-(sp)
	jsr	_getbits
	move.w	d0,_blocksize
	move.w	#3,-(sp)
	move.w	#5,-(sp)
	move.w	#19,-(sp)
	jsr	_read_pt_len
	jsr	_read_c_len
	move.w	#-1,-(sp)
	move.w	#5,-(sp)
	move.w	#17,-(sp)
	jsr	_read_pt_len
	lea	14(sp),sp
.185
	sub.w	#1,_blocksize
	move.w	_bitbuf,d0
	lsr.w	#4,d0
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	lea	_c_table,a0
	move.w	(a0,d1.l),d4
	cmp.w	#510,d4
	bcs	.186
	move.l	#8,d5
.189
	move.w	_bitbuf,d0
	and.w	d5,d0
	beq	.190
	move.l	#0,d0
	move.w	d4,d0
	asl.l	#1,d0
	lea	_right,a0
	move.w	(a0,d0.l),d4
	bra	.191
.190
	move.l	#0,d0
	move.w	d4,d0
	asl.l	#1,d0
	lea	_left,a0
	move.w	(a0,d0.l),d4
.191
	lsr.w	#1,d5
.187
	cmp.w	#510,d4
	bcc	.189
.188
.186
	move.l	#0,d0
	move.w	d4,d0
	lea	_c_len,a0
	move.l	#0,d1
	move.b	(a0,d0.l),d1
	move.w	d1,-(sp)
	jsr	_fillbuf
	move.w	d4,d0
	add.w	#2,sp
.192
	movem.l	(sp)+,.184
	unlk	a6
	rts
.183	equ	0
.184	reg	d4/d5
_decode_p:
	link	a6,#.193
	movem.l	.194,-(sp)
	move.w	_bitbuf,d0
	lsr.w	#8,d0
	move.l	#0,d1
	move.w	d0,d1
	asl.l	#1,d1
	lea	_pt_table,a0
	move.w	(a0,d1.l),d4
	cmp.w	#17,d4
	bcs	.195
	move.w	#128,d5
.198
	move.w	_bitbuf,d0
	and.w	d5,d0
	beq	.199
	move.l	#0,d0
	move.w	d4,d0
	asl.l	#1,d0
	lea	_right,a0
	move.w	(a0,d0.l),d4
	bra	.200
.199
	move.l	#0,d0
	move.w	d4,d0
	asl.l	#1,d0
	lea	_left,a0
	move.w	(a0,d0.l),d4
.200
	lsr.w	#1,d5
.196
	cmp.w	#17,d4
	bcc	.198
.197
.195
	move.l	#0,d0
	move.w	d4,d0
	lea	_pt_len,a0
	move.l	#0,d1
	move.b	(a0,d0.l),d1
	move.w	d1,-(sp)
	jsr	_fillbuf
	tst.w	d4
	add.w	#2,sp
	beq	.201
	sub.w	#1,d4
	move.w	d4,-(sp)
	jsr	_getbits
	move.l	#1,d1
	asl.w	d4,d1
	move.w	d0,d4
	add.w	d1,d4
	add.w	#2,sp
.201
	move.w	d4,d0
.202
	movem.l	(sp)+,.194
	unlk	a6
	rts
.193	equ	0
.194	reg	d4/d5
	public	_init_getbits
_init_getbits:
	link	a6,#.203
	movem.l	.204,-(sp)
	clr.w	_bitbuf
	clr.b	_subbitbuf
	clr.w	_bitcount
	move.w	#16,-(sp)
	jsr	_fillbuf
	add.w	#2,sp
.205
	movem.l	(sp)+,.204
	unlk	a6
	rts
.203	equ	0
.204	reg	
_decode_start:
	link	a6,#.206
	movem.l	.207,-(sp)
	clr.w	_blocksize
	jsr	_init_getbits
.208
	movem.l	(sp)+,.207
	unlk	a6
	rts
.206	equ	0
.207	reg	
	public	_decode
_decode:
	link	a6,#.209
	movem.l	.210,-(sp)
	bss	.211,26624
	lea	.211,a0
	move.l	a0,a3
	jsr	_decode_start
	sub.l	a4,a4
	move.l	#0,d7
.212
	cmp.l	_origsize,a4
	bge	.213
	jsr	_decode_c
	move.w	d0,d6
	cmp.w	#255,d0
	bgt	.214
	move.b	d6,(a3,d7.w)
	add.l	#1,a4
	add.w	#1,d7
	cmp.w	#26624,d7
	blt	.215
	move.l	#0,d7
	move.w	#26624,-(sp)
	move.l	a3,-(sp)
	jsr	_fwrite_txt_crc
	add.w	#6,sp
.215
	bra	.216
.214
	move.w	d6,d5
	sub.w	#253,d5
	move.w	d5,d0
	ext.l	d0
	add.l	d0,a4
	jsr	_decode_p
	move.w	d0,d4
	move.w	d7,d0
	sub.w	d4,d0
	move.w	d0,d4
	sub.w	#1,d4
	tst.w	d4
	bge	.217
	add.w	#26624,d4
.217
	cmp.w	d4,d7
	ble	.218
	cmp.w	#26367,d7
	bge	.218
.219
	sub.w	#1,d5
	tst.w	d5
	blt	.220
	move.w	d4,d0
	add.w	#1,d4
	move.w	d7,d1
	add.w	#1,d7
	move.b	(a3,d0.w),(a3,d1.w)
	bra	.219
.220
	bra	.221
.218
.222
	sub.w	#1,d5
	tst.w	d5
	blt	.223
	move.b	(a3,d4.w),(a3,d7.w)
	add.w	#1,d7
	cmp.w	#26624,d7
	blt	.224
	move.l	#0,d7
	move.w	#26624,-(sp)
	move.l	a3,-(sp)
	jsr	_fwrite_txt_crc
	add.w	#6,sp
.224
	add.w	#1,d4
	cmp.w	#26624,d4
	blt	.225
	move.l	#0,d4
.225
	bra	.222
.223
.221
.216
	bra	.212
.213
	tst.w	d7
	beq	.226
	move.w	d7,-(sp)
	move.l	a3,-(sp)
	jsr	_fwrite_txt_crc
	add.w	#6,sp
.226
.227
	movem.l	(sp)+,.210
	unlk	a6
	rts
.209	equ	0
.210	reg	d4/d5/d6/d7/a3/a4
	public	_exit
	public	.begin
	dseg
	end
