
                       This program is Public Domain
                     ---------------------------------


   Tryit Cruncher v1.01                            date: 3rd December '88

   1) How to use:

   After starting the cruncher you have to enter the name of the program
   you want to crunch. NOTE: this version is only for absolute located
   programs. Maybe the next version will include a re-hunk feature but as
   it is you have to use the ReloKit (also on this disk) to relocate your
   programs. 
   When you've entered the name, the cruncher will load the program and
   then ask you for the crunch-offset. The bigger the offset is, the better
   the crunching result will be BUT if you use very big offsets, the
   time needed to crunch the program will increase dramatically.
   Then the cruncher will display a message not to hit return until all
   disk drives have stopped. This is because sometimes crunching very
   long files (with big offsets) can take some hours and I think it's not
   good for the drive hardware if it is running all the time.
   After that the cruncher will start working. When it's finished, it'll
   show you the original length and the crunched length of the program and
   will ask if you want to save the crunched file. If you decide to save
   the program, you have to enter the location and the address where the
   program actually starts. Then the cruncher will ask you for the
   address of the (user) stackpointer. Sometimes it is necessary to give
   the stackpointer another location than the program to assure that the
   stackpointer does not point inside the decrunched program. If you
   don't care about the stackpointer, just enter a zero here. After that
   you have to enter the address where the decruncher should be located.
   Please note that the decruncher is quite long (over 1k) because of some
   technical reasons. I recommend to locate the decruncher at the end
   of the memory ($7e000-$7f800).
   Finally you have to enter the name under which the crunched program
   should be saved. That's all.

   2) Technical information and credits

   This is my very first cruncher ever and I know that it is anything
   but perfect. Anyway it is better than Lord Blitter's ByteKiller v1.2
   and all its clones (Blizzard Cruncher, RSI Cruncher, TetraCrunch2.0).
   My cruncher is based on three different algorythms:

   I)   byte crunching
   II)  sequence crunching
   III) bit crunching

   the last step is called bit-crunching because each byte of the data
   will be transformed from 8 bits to 2-9 bits. I don't like to explain
   the whole thing here because it would take much too long. This way of
   bit-crunching is also known as the 'Huffman' algorythm which is based
   on a tree-data-structure. To decrunch bit-crunched programs the
   tree-structure must also be included in the crunched program.
   Unfortunately this makes the program a bit longer (in my cruncher
   the structure eats up exactly 1020 bytes). Therefore I recommend to
   use the cruncher only to crunch long files ( >= 10000 bytes). If you
   want to crunch small files it is often better to use the ByteKiller or
   RSI or TetraCrunch.

   Update:                                              21st of march 1989
   -------
   Now about four months passed by since my cruncher was finished and
   so I think I should add some facts about the recent developments in
   'cruncher technology'.
   At first I have to admit that the cruncher is not as good as I thought
   in the beginning. In fact the best Amiga cruncher in the moment is the
   one which this EuroSoft guy (I guess he was in Lightforce) is using.
   In most cases it makes programs about 4-7KB shorter than mine (sniff!).
   Another good cruncher is TetraCrunch2.2 but after some testing I found
   out that Tryit makes programs nearly always a few KB shorter.
   I had no opportunity to try out the new MasterCruncher V3.0 so I can't
   tell you anything about its performance.
   So, as you can see from all crunchers tested Tryit is still one of the
   most powerfull.

   Some special thanx must go to Michael here in Hannover for being
   a good friend, a good coder and for his moral support. Also thanx to
   Dirk for all the nice phone calls, to Garry for being freaky, to
   Øivind for the disks, to the ORAPs for creating that game and to JORA
   for being a motherfucking asshole (pig, wanker, shithead, faggot).

   Ok, that's all.If you have experience with crunchers or if you find
   any bugs or have ideas for improvement, please contact me:

   Bernd Knochenhauer
   Lichtenbergweg 13
   D-3012 Langenhagen
   West-Germany

   or call: 49-511-738470

   please do not call if you want to swap or if you're an absolute
   beginner. Thanx.



