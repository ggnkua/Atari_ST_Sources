* Object skeleton used by DEMOS1.S or DASTD.S (v2.0)
* v1.0: * Monitormode selection.
*       * SET_RES routine vbl-synced.
*       * Screenaddress-setting optimised.
*
* v1.1: * Automaticly initializes screenbuffers and resolution.
*       * Returns resultcode in INIT routine.
*       * Minor optimisations.

******** OBJECT EQUATES ********

Greets.ROOTRAND:	=	20		; variation of the flameroot
Greets.DECAY:		=	10		; reach to which a flame extends
Greets.MIN_Y:		=	100		; startingline of the flame routine.
Greets.SMOOTH:		=	1		; smoothness of flames
Greets.MIN_FIRE:	=	50		; variation between "ignition" and "burning"
Greets.XSTART:		=	90
Greets.XEND:		=	210
Greets.WIDTH:		=	Greets.XEND-Greets.XSTART
Greets.FIRE_INC:	=   	3		; 3 = wood, 90 = gas

******** OBJECT TABLE ********

* Must be first in object!!
Greets.table:
	DC.L	Greets.mainLoop
	DC.L	Greets.init
	DC.L	Greets.setRes
* Add more addresses here..
	DC.L	0

******** RESOLUTION SETTING ROUTINE ********

Greets.setRes:
	IFEQ	testmode
	move.l	#rts,vbl_gfx

	move.w	$0468.w,d0
.ck468:	cmp.w	$0468.w,d0
	beq.s	.ck468
	move.w	monitormode,d0
	cmpi.w	#vga60,d0
	beq.s	.vga60
	cmpi.w	#vga100,d0
	beq.s	.vga100
	cmpi.w	#rgb50,d0
	beq.s	.rgb50
* Unknown monitormode..
	rts
.vga60:
	rts
.vga100:
	rts
.rgb50:
	ENDC
	rts

******** INIT SUBROUTINE ********

* OUTPUT: d0.l: 0   = All clear.
*               neg = Error! Not initialized!
Greets.init:
* Insert pre-running initialising stuff here! Loading, precalculating, etc.
.success:
	moveq	#0,d0
	rts
.error:	moveq	#-1,d0
	rts

******** REALTIME INIT SUBROUTINE ********

Greets.realtimeInit:
* Insert all realtime initialization here (i.e. usage of shared mem, etc.).
	rts

******** SCREENINIT SUBROUTINE ********

Greets.initScreen:
* Insert screenarea initialising, etc. in here!
	rts

******** MAINLOOP SUBROUTINE ********

Greets.mainLoop:
	move.l	frmcnt,d0
	sub.l	lastframecount,d0
	bne.s	.end_realtime_init
	move.l	d0,-(sp)
	bsr	Greets.realtimeInit
	move.l	(sp)+,d0
.end_realtime_init:
	cmpi.l	#3,d0
	bhs.s	.end_screeninit
	bsr	Greets.initScreen
.end_screeninit:

	bsr	Greets.paintFlames
;	bsr	Greets.flush

	IFEQ	testmode
	lea	scr,a0
	move.l	(a0)+,d0
	move.l	(a0)+,d1
	move.l	(a0),-4(a0)
	move.l	d0,(a0)
	move.l	d1,-8(a0)
	move.l	d0,d1
	lsr.w	#8,d0
	move.l	d0,$ffff8200.w
	move.b	d1,$ffff820d.w
	ENDC

	move.l	frmcnt,d0
	sub.l	lastframecount,d0
	bne.s	.res_done
	bsr	Greets.setRes
.res_done:

	rts

******** OBJECT SUBROUTINES ********

; Return random value in range (-r,+r)
; INPUT:
; d0.w=r [0,32767]
; OUTPUT:
; d2.w=random value
Greets.getSignedRandom:
	move.l	Greets.random,d1
	move.l	d1,d2
	mulu.w	d1,d1
	eor.l	d2,d1
	addq.l	#7,d1
	move.l	d1,Greets.random
	move.w	d0,d3
	add.w	d0,d0
	addq.w	#1,d0
	clr.l	d2
	move.w	d1,d2
	divu.w	d0,d2
	swap	d2
	sub.w	d3,d2
	rts

; Return random value in range (0,+r)
; INPUT:
; d0.w=r [0,65535]
; OUTPUT:
; d2.w=random value
Greets.getRandom:
	move.l	Greets.random,d1
	move.l	d1,d2
	mulu.w	d1,d1
	eor.l	d2,d1
	addq.l	#7,d1
	move.l	d1,Greets.random
	clr.l	d2
	move.w	d1,d2
	divu.w	d0,d2
	swap	d2
	rts

; Return random value [0,65535].
; OUTPUT:
; d1.w=random value
Greets.getRawRandom:
	move.l	Greets.random,d1
	move.l	d1,d2
	mulu.w	d1,d1
	eor.l	d2,d1
	addq.l	#7,d1
	move.l	d1,Greets.random
	rts

Greets.paintFlames:
	bsr	Greets.makeFlames
	bsr	Greets.makeFlameRoots
	bsr	Greets.dimFlameSides
	bsr	Greets.smoothenFlameRoots
	rts

; Make flames by using the flameroots.
Greets.makeFlames:
	lea	Greets.screen,a0
	move.w	Greets.XSTART,d7		; d7.w=x
	adda.w	d7,a0
	move.w	Greets.MIN_Y,d0
	mulu.w	#320,d0
	adda.l	d0,a0
	movea.w	#320,a6				; a6=screenwidth

.xloop:	move.w	Greets.MIN_Y,d6			; d6.w=y

.yloop:	move.b	(a0),d5				; d5.b=current pixel
	cmpi.w	#Greets.DECAY,d5
	blt.s	.clear_it
; Check for x-bounds too??

; Set upper pixel with a random horizontal spread.
; Calculate horizontal spread..
	moveq	#3,d0
	bsr	Greets.getRandom
	addq.w	#1,d2				; -(random(3)-1)=-random(3)+1
	subi.w	#320,d2				; -random(3)+1-320
	move.w	d2,d4				; d4.w=offset of new pixel
	moveq	#Greets.DECAY,d0
	bsr	Greets.getRandom
	sub.b	d2,d5
	move.b	d5,(a0,d4.w)			; Set the pixel.
	bra.s	.next

; Clear upper pixel.
.clear_it:
	clr.b	-320(a0)

.next:	adda.l	a6,a0
	addq.w	#1,d6
	cmpi.w	#199,d6
	blt.s	.yloop

	addq.w	#1,d7
	cmpi.w	#Greets.XEND,d7
	blt.s	.xloop

	rts

Greets.lightMatch:
	move.w	#Greets.WIDTH-5,d0
	bsr	Greets.getRandom
	addi.w	#Greets.XSTART,d2
	lea	(Greets.screen+199*320,d2.w),a0
	move.l	#$FFFFFFFF,(a0)+
	move.b	#$FF,(a0)
	rts

Greets.clear:
	lea	Greets.screen+199*320,a0
	clr.l	d0
	moveq	#320/4-1,d7
.loop:	move.l	d0,(a0)+
	dbra	d7,.loop
	rts

Greets.addWater:
	lea	Greets.screen+199*320,a0
	moveq	#10-1,d7
.loop:	move.w	#Greets.WIDTH,d0
	bsr	Greets.getRandom
	addi.w	#Greets.XSTART,d2
	clr.b	(a0,d2.w)
	dbra	d7,.loop
	rts

Greets.makeFlameRoots:
	lea	Greets.screen+199*320+Greets.XSTART,a0
	move.w	#Greets.WIDTH-1,d7

.loop:	move.b	(a0),d6				; d6.b=current pixel
	cmpi.b	#10,d6
	blt.s	.inc_low_pixel
; Increase pixelvalue.
	move.w	Greets.fireInc,d0
	bsr	Greets.getRandom
	add.b	d2,d6
	bra.s	.next
.inc_low_pixel:
	move.w	#Greets.ROOTRAND,d0
	bsr	Greets.getSignedRandom
	add.w	Greets.moreFire,d2
	add.b	d2,d6
.next:	move.b	d6,(a0)+
	dbra	d7,.loop
	rts

Greets.dimFlameSides:
	lea	Greets.screen+199*320,a0
	move.w	#Greets.WIDTH/8-1,d7

.smooth_loop:
	bsr	Greets.getRawRandom
	mulu.w	d1,d1
	swap	d1
	mulu.w	#Greets.WIDTH/8,d1
	swap	d1
; Clear left side..
	move.w	#Greets.XSTART,d0
	add.w	d1,d0
	clr.b	(a0,d0.w)
; Clear right side..
	move.w	#Greets.XEND,d0
	sub.w	d1,d0
	clr.b	(a0,d0.w)
	dbra	d7,.smooth_loop
	rts

Greets.smoothenFlameRoots:
	lea	Greets.screen+199*320,a0
	move.w	#Greets.XSTART+Greets.SMOOTH,d7

.smoothen_loop:
	clr.w	d0
	move.w	#-Greets.SMOOTH,d6

.inc_loop:
	move.w	d6,d1
	add.w	d7,d1
	clr.w	d2
	move.b	(a0,d1.w),d2
	add.w	d2,d0
	addq.w	#1,d6
	cmpi.w	#+Greets.SMOOTH,d6
	blt.s	.inc_loop

	divu.w	#Greets.SMOOTH*2+1,d0
	move.b	d0,(a0,d7.w)
	addq.w	#1,d7
	cmpi.w	#Greets.XEND-Greets.SMOOTH,d7
	blt.s	.smoothen_loop
	rts

******** OBJECT DATA ********

	DATA

Greets.moreFire:
	DC.W	1
Greets.fireInc:
	DC.W	10

******** OBJECT RESERVES ********

	BSS

Greets.screen:
	DS.B	320*200

Greets.random:
	DS.L	1

******** END OF DEMO-EFFECT OBJECT ********