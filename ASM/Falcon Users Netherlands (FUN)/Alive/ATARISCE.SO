* Object skeleton used by DEMOS1.S or DASTD.S (v1.5)
* v1.0: * Monitormode selection.
*       * SET_RES routine vbl-synced.
*       * Screenaddress-setting optimised.

******** OBJECT EQUS ********

******** OBJECT TABLE ********

* Must be first in object!!
atariscne_tbl:
	DC.L	ATARISCNEMAINLOOP
	DC.L	INIT_ATARISCNE
	DC.L	SET_ATARISCNERES
* Add more addresses here..
	DC.L	0

******** RESOLUTION SETTING ROUTINE ********

SET_ATARISCNERES:
	IFEQ	testmode
	move.l	#rts,vbl_gfx

	moveq	#0,d0
	lea	temp_buf,a0
	moveq	#128-1,d7
.clearloop:
	move.l	d0,(a0)+
	move.l	d0,(a0)+
	dbra	d7,.clearloop

	move.l	#FADE_ATARISCNE,vbl_gfx

	movea.l	scr,a0
	bsr	CLEAR_3202008SCR
	movea.l	scr+4,a0
	bsr	CLEAR_3202008SCR

	move.w	$0468.w,d0
.ck466:	cmp.w	$0468.w,d0
	beq.s	.ck466
	move.w	monitormode,d0
	cmpi.w	#vga60,d0
	beq.s	.vga60
	cmpi.w	#vga100,d0
	beq.s	.vga100
	cmpi.w	#rgb50,d0
	beq.s	.rgb50
* Unknown monitormode..
	rts
.vga60:	jmp	vga60_8bit_320_200
.vga100:
	jmp	vga100_8bit_320_200
.rgb50:	jmp	rgb50_8bit_320_200
	ENDC
	rts

******** INIT SUBROUTINE ********

INIT_ATARISCNE:
	lea	atariscnelogoname_txt,a1
	jsr	LOAD_INCFILE
	move.l	a0,atariscnelogoadr

	lea	768(a0),a0
	lea	logomask_dat,a1
	move.w	#60*8-1,d7
.loop:	move.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	or.w	(a0)+,d0
	not.w	d0
	move.w	d0,(a1)+
	dbra	d7,.loop

	lea	pungfontname_txt,a1
	jsr	LOAD_INCFILE
	move.l	a0,pungfontadr
	rts

******** MAINLOOP SUBROUTINE ********

ATARISCNEMAINLOOP:
	IFND	demoos
	IFEQ	testmode
	addq.l	#1,frmcnt
	ENDC
	ENDC

	move.w	$468.w,.old468
	tst.w	faderstep
	bpl.s	.plot_logo

	bsr	PLOT_ENDTEXT
	addq.w	#1,endscreenline

.plot_logo:
	bsr	PLOT_ATARISCNELOGO

	IFEQ	testmode
	lea	scr,a0
	move.l	(a0)+,d0
	move.l	(a0),-4(a0)
	move.l	d0,(a0)
	move.l	d0,d1
	lsr.w	#8,d0
	move.l	d0,$ffff8200.w
	move.b	d1,$ffff820d.w

	cmpi.w	#vga100,monitormode
	bne.s	.wait1vbl

	move.w	.old468(pc),d0
.wait2ndvbl:
	move.w	$468.w,d1
	sub.w	d0,d1
	cmpi.w	#2,d1
	blt.s	.wait2ndvbl
	rts

.wait1vbl:
	move.w	$468.w,d0
.wait1stvbl:
	cmp.w	$468.w,d0
	beq.s	.wait1stvbl
	ENDC
.rts:	rts

.old468:
	DC.W	0

******** OBJECT DATA ********

	DATA

faderstep:
	DC.W	512-1
atariscnelogoname_txt:
	DC.B	"ATARISCN.RAW",0
pungfontname_txt:
	DC.B	"PUNGFONT.PI1",0
endtext_txt:
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"                    "
	DC.B	"YOU HAVE BEEN       "
	DC.B	"            WATCHING"
        DC.B	"                    "
        DC.B	"    %& ALIVE+ %&    "
        DC.B	"                    "
        DC.B	"                    "
        DC.B	"                    "
        DC.B	"CODE            EARX"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"      GRAPHICS      "
        DC.B	"                    "
        DC.B	"MAIN GRAPHICS  HAVOC"
        DC.B	"TEXTURES   THE MATCH"
        DC.B	"THIS FONT     TINKER"
        DC.B	"TEXTURES        EARX"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"MUSIC    NOXS-OXYRON"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"IDEAS           EARX"
        DC.B	"               HAVOC"
        DC.B	"           THE MATCH"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"    CODER MOTIVATORS"
        DC.B	"                    "
        DC.B	"THE MATCH           "
        DC.B	"HAVOC               "
        DC.B	"                    "
        DC.B	"AND OFCOURSE........"
        DC.B	"...ERROR IN LINE '99"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"  CURRENT FUN CREW  "
        DC.B	"                    "
        DC.B	"EARX             ASM"
        DC.B	"THE MATCH    GFX+MSX"
        DC.B	"HAVOC            GFX"
        DC.B	"BONUS        GFX+GFA"
        DC.B	"OTM              ASM"
        DC.B	"NUT              WHQ"
        DC.B	"DFORCE           MSX"
        DC.B	"LEXO             MSX"
        DC.B	"WINGLEADER          "
        DC.B	"         CREW BINDER"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"   SPECIAL THANX    "
        DC.B	"                    "
        DC.B	"MRPINK    CALCULATOR"
        DC.B	"BAGGIO     INNERLOOP"
        DC.B	"TINKER          FONT"
        DC.B	"GREY            BEER"
        DC.B	"HAVOC            CAR"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"   SPECIAL FUCKINGS "
        DC.B	"                    "
        DC.B	"BITCH               "
        DC.B	"BEHIND              "
        DC.B	"THE                 "
        DC.B	"REGISTER      DM 100"
        DC.B	"                    "
        DC.B	"         %&         "
        DC.B	"                    "
        DC.B	"    %& ALIVE+ %&    "
        DC.B	"                    "
        DC.B	"RELEASED  10-04-1999"
	DC.B	"                    "
endendtext:
wrappos:
	DC.W	endendtext-endtext_txt
endscreenline:
	DC.W	0

******** OBJECT RESERVES ********

	BSS

atariscnelogoadr:
	DS.L	1
pungfontadr:
	DS.L	1
logomask_dat:
	DS.W	8*60

******** OBJECT SUBROUTINES ********

	TEXT

SET_LOGOPAL:
	movea.l	atariscnelogoadr,a1
	lea	$ffff9800.w,a0
	moveq	#128-1,d7

.loop:	REPT	2
	move.w	(a1)+,d0
	swap	d0
	move.b	(a1)+,d0
	move.l	d0,(a0)+
	ENDR
	dbra	d7,.loop
	rts

PLOT_ATARISCNELOGO:
	movea.l	scr,a0
	lea	320-128(a0),a0
	movea.l	atariscnelogoadr,a1
	lea	768(a1),a1
	lea	logomask_dat,a2
	moveq	#60-1,d7

.yloop:	moveq	#8-1,d6

.chunkloop:
	move.w	(a2)+,d0
	REPT	8
	move.w	(a0),d1
	and.w	d0,d1
	or.w	(a1)+,d1
	move.w	d1,(a0)+
	ENDR
	dbra	d6,.chunkloop

	lea	320-128(a0),a0
	dbra	d7,.yloop
	rts

PLOT_TESTCHAR:
	movea.l	scr,a0
	movea.l	pungfontadr,a2
	lea	34(a2),a2
	moveq	#16-1,d7

.loop:	move.l	(a2)+,(a0)+
	move.l	(a2)+,(a0)+
	lea	160-8(a2),a2
	lea	320-8(a0),a0
	dbra	d7,.loop
	rts

PLOT_ENDTEXT:
	tst.w	.doneinit(pc)
	beq	.scroll

	move.w	endscreenline,d0
	divu.w	#92*16,d0
	swap	d0
	mulu.w	#160,d0
	lea	(temp_buf,d0.l),a1
	movea.l	scr,a0
	bsr	COPY_PIC32020048
	rts

* Initialize the first time..
.scroll:
	move.w	#1,.doneinit

	lea	temp_buf,a0
	move.l	#(512*1024)/16-1,d7
	moveq	#0,d0
.loop:	move.l	d0,(a0)+
	move.l	d0,(a0)+
	move.l	d0,(a0)+
	move.l	d0,(a0)+
	dbra	d7,.loop

	lea	endtext_txt,a1
	movea.l	pungfontadr,a2
	lea	34(a2),a2
	
	lea	temp_buf,a0
	movea.l	a0,a6
	moveq	#92-1,d6
.lineloop:
	moveq	#20-1,d7

.charloop:
	moveq	#0,d1
	move.b	(a1)+,d1
	cmpi.b	#" ",d1
	bne.s	.else
	addq	#8,a0
	bra	.endcharloop
.else:	subi.b	#"!",d1
	divu.w	#20,d1
	move.w	d1,d2
	swap	d1
	ext.l	d1
	mulu.w	#16*160,d2
	add.l	d1,d1
	add.l	d1,d1
	add.l	d1,d1
	add.l	d2,d1
	lea	(a2,d1.l),a3
	REPT	16
	move.l	(a3)+,(a0)+
	move.l	(a3)+,(a0)+
	lea	160-8(a3),a3
	lea	160-8(a0),a0
	ENDR
	lea	-(160*16)+8(a0),a0
.endcharloop:
	dbra	d7,.charloop

	lea	160*16(a6),a6
	movea.l	a6,a0
	dbra	d6,.lineloop
	rts

.doneinit:
	DC.W	0

COPY_PIC32020048:
	move.w	#200-1,d7
.loop:
	REPT	20
	move.l	(a1)+,(a0)+
	move.l	(a1)+,(a0)+
	addq	#8,a0
	ENDR
	dbra	d7,.loop
	rts

FADE_ATARISCNE:
	move.w	faderstep,d0
	cmpi.w	#vga100,monitormode
	bne.s	.novga100
	subq.w	#1,d0
	bmi.s	.end_fade
	bra.s	.doloop
.novga100:
	lsr.w	#1,d0
	subq.w	#1,d0
	bmi.s	.end_fade
	add.w	d0,d0
.doloop:
	move.w	d0,faderstep
	lea	$ffff9800.w,a0
	lea	temp_buf,a1
	movea.l	atariscnelogoadr,a2
	move.w	#256-1,d7
.loop:	move.b	(a1),d0
	move.b	1(a1),d1
	move.b	2(a1),d2
	cmp.b	(a2)+,d0
	beq.s	.red_done
	addq.b	#1,d0
.red_done:
	cmp.b	(a2)+,d1
	beq.s	.green_done
	addq.b	#1,d1
.green_done:
	cmp.b	(a2)+,d2
	beq.s	.blue_done
	addq.b	#1,d2
.blue_done:
	move.b	d0,(a1)+
	move.b	d1,(a1)+
	move.b	d2,(a1)+
	lsl.w	#8,d0
	move.b	d1,d0
	swap	d0
	move.b	d2,d0
	move.l	d0,(a0)+
	dbra	d7,.loop	
	rts
.end_fade:
	move.w	d0,faderstep
	move.l	#rts,vbl_gfx
	rts

******** END OF DEMO-EFFECT OBJECT ********