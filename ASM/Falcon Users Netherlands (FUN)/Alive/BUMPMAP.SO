* Object skeleton used by DEMOS1.S or DASTD.S (v1.5)
* v1.0: * Monitormode selection.
*       * SET_RES routine vbl-synced.
*       * Screenaddress-setting optimised.

******** OBJECT EQUS ********

bumpheight:	EQU	100

******** OBJECT TABLE ********

* Must be first in object!!
bumpmap_tbl:
	DC.L	BUMPMAPMAINLOOP
	DC.L	INIT_BUMPMAP
	DC.L	SET_BUMPMAPRES
* Add more addresses here..
	DC.L	0

******** RESOLUTION SETTING ROUTINE ********

SET_BUMPMAPRES:
	IFEQ	testmode
	move.l	#rts,vbl_gfx

	movea.l	scr,a0
	bsr	CLEAR_320100TSCR
	movea.l	scr+4,a0
	bsr	CLEAR_320100TSCR
	movea.l	scr+8,a0
	bsr	CLEAR_320100TSCR

	move.w	$0468.w,d0
.ck466:	cmp.w	$0468.w,d0
	beq.s	.ck466

	clr.l	$ffff9800.w

	move.w	monitormode,d0
	cmpi.w	#vga60,d0
	beq.s	.vga60
	cmpi.w	#vga100,d0
	beq.s	.vga100
	cmpi.w	#rgb50,d0
	beq	.rgb50
* Unknown monitormode..
	rts
.vga60:	jmp	vga60_16bit_320_100
.vga100:
	jmp	vga100_16bit_320_100
.rgb50:	jmp	rgb50_16bit_320_100
	ENDC
	rts

******** INIT SUBROUTINE ********

INIT_BUMPMAP:
	lea	bumpfile_txt,a1
	jsr	LOAD_INCFILE
	move.l	a0,surfaceadr

	lea	lightmapfile_txt,a1
	jsr	LOAD_INCFILE
	move.l	a0,lightmapadr

	movea.l	surfaceadr,a1
	lea	bumpmap_buf,a0
	bsr	INIT_MAPBUMP
	rts

******** MAINLOOP SUBROUTINE ********

BUMPMAPMAINLOOP:
	IFND	demoos
	IFEQ	testmode
	move.w	$468.w,.old468
	addq.l	#1,frmcnt
	ENDC
	ENDC

	movea.l	bumptrajroutadr,a0
	jsr	(a0)

	bsr	PLOT_DOUBLEBUMPMAP

	IFEQ	testmode
	lea	scr,a0
	move.l	(a0)+,d0
	move.l	(a0)+,d1
	move.l	(a0),-4(a0)
	move.l	d0,(a0)
	move.l	d1,-8(a0)
	move.l	d0,d1
	lsr.w	#8,d0
	move.l	d0,$ffff8200.w
	move.b	d1,$ffff820d.w

	move.w	.old468(pc),d0
.tst468:
	cmp.w	$468.w,d0
	beq.s	.tst468
	ENDC
	rts

.old468:
	DC.W	0

******** OBJECT DATA ********

	DATA

bumptrajroutadr:
	DC.L	CALC_BUMPTRAJECT1
bumpfile_txt:
	DC.B	"FF.RAW",0
lightmapfile_txt:
	DC.B	"LAMP.RAW",0
	EVEN

******** OBJECT RESERVES ********

	BSS

surfaceadr:
	DS.L	1
lightmapadr:
	DS.L	1
bumpmap_buf:
	DS.W	320*200

******** OBJECT SUBROUTINES ********

	TEXT

CALC_BUMPTRAJECT1:
	lea	bumpmap_buf,a2
	adda.l	#(320*15)*2,a2
	movea.l	lightmapadr,a1
	adda.l	#(256*40-16)*2,a1

	lea	sine_tbl,a0
	move.w	$4bc.w,d0
	move.w	d0,d2
	mulu.w	#7,d2
	lsr.w	#2,d2
	Do_SinModulo	d0
	Do_SinModulo	d2
	Get_Cos	a0,d2,d1
	Get_Sin	a0,d0,d2
	eori.w	#$8000,d1
	eori.w	#$8000,d2

	moveq	#0,d4
	move.w	d1,d3
	move.w	d2,d4
	lsr.w	#8,d4
	lsr.w	#1,d4
	lsr.w	#8,d3
	lsr.w	#2,d3
	mulu.w	#320,d3
	add.l	d3,d4
	add.l	d4,d4
	adda.l	d4,a2

	moveq	#0,d0
	move.w	d2,d3
	lsr.w	#2,d3
	lsr.w	#8,d1
	lsr.w	#1,d1
	move.b	d1,d3
	add.l	d3,d3
	adda.l	d3,a1
	rts

INIT_MAPBUMP:
	move.w	#200-1,d7

.yloop	move.w	#320-1,d6
.xloop	move.b	(a1),d0
	sub.b	2(a1),d0
	bpl.s	.skip1
	neg.b	d0
.skip1	asr.b	#1,d0
	move.b	d0,(a0)+
	move.b	(a1),d0
	sub.b	640(a1),d0
	bpl.s	.skip2
	neg.b	d0
.skip2	asr.b	#1,d0
	move.b	d0,(a0)+
	addq	#1,a1
	dbra	d6,.xloop
	dbra	d7,.yloop
	rts

* INPUT: a1: texturemap address
*        a2: bumpmap address
PLOT_BUMPMAP:
	movea.l	scr,a0
	lea	32*2(a0),a0
	moveq	#0,d0
	move.w	#200-1,d7
	moveq	#16,d5
	movea.w	#scrxbytes-(256*2),a6

.yloop	moveq	#32-1,d6
.xloop	movem.w	(a2)+,d0-d4/a3-a5
	move.w	(a1,d0.l*2),(a0)+
	move.w	2(a1,d1.l*2),(a0)+
	move.w	4(a1,d2.l*2),(a0)+
	move.w	6(a1,d3.l*2),(a0)+
	move.w	8(a1,d4.l*2),(a0)+
	move.w	10(a1,a3.l*2),(a0)+
	move.w	12(a1,a4.l*2),(a0)+
	move.w	14(a1,a5.l*2),(a0)+
	adda.l	d5,a1
	dbra	d6,.xloop
	adda.l	a6,a0
	adda.l	a6,a2
	dbra	d7,.yloop
	rts

PLOT_DOUBLEBUMPMAP:
	movea.l	scr,a0
	moveq	#0,d0
	moveq	#100-1,d7
	moveq	#16,d5
	movea.w	#scrxbytes-(256*2),a6

.yloop	moveq	#20-1,d6
.xloop	movem.w	(a2)+,d0-d4/a3-a5
	move.w	(a1,d0.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	2(a1,d1.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	4(a1,d2.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	6(a1,d3.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	8(a1,d4.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	10(a1,a3.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	12(a1,a4.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	move.w	14(a1,a5.l*2),d0
	move.w	d0,(a0)+
	move.w	d0,(a0)+
	adda.l	d5,a1
	dbra	d6,.xloop
	lea	640-320(a2),a2
	lea	512-320(a1),a1
	dbra	d7,.yloop
	rts

******** END OF DEMO-EFFECT OBJECT ********