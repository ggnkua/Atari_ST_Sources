* Object skeleton used by DEMOS1.S or DASTD.S (v1.5)
* v1.0: * Monitormode selection.
*       * SET_RES routine vbl-synced.
*       * Screenaddress-setting optimised.

******** OBJECT EQUS ********

******** OBJECT TABLE ********

* Must be first in object!!
demofx_tbl:
	DC.L	DEMOFXMAINLOOP
	DC.L	INIT_DEMOFX
	DC.L	SET_DEMOFXRES
* Add more addresses here..
	DC.L	0

******** RESOLUTION SETTING ROUTINE ********

SET_DEMOFXRES:
	IFEQ	testmode
	move.l	#rts,vbl_gfx

	move.l	$0466.w,d0
.ck466:	cmp.l	$0466.w,d0
	beq.s	.ck466
	move.w	monitormode,d0
	cmpi.w	#vga60,d0
	beq.s	.vga60
	cmpi.w	#vga100,d0
	beq.s	.vga100
	cmpi.w	#rgb50,d0
	beq.s	.rgb50
* Unknown monitormode..
	rts
.vga60:
	rts
.vga100:
	rts
.rgb50:
	ENDC
	rts

******** INIT SUBROUTINE ********

INIT_DEMOFX:
* Insert initialising stuff here!
	rts

******** MAINLOOP SUBROUTINE ********

DEMOFXMAINLOOP:
	IFND	demoos
	IFEQ	testmode
	addq.l	#1,frmcnt
	ENDC
	ENDC

* Insert mainloop (possibly multiframe) operations here!

	IFEQ	testmode
	lea	scr,a0
	move.l	(a0)+,d0
	move.l	(a0)+,d1
	move.l	(a0),-4(a0)
	move.l	d0,(a0)
	move.l	d1,-8(a0)
	move.l	d0,d1
	lsr.w	#8,d0
	move.l	d0,$ffff8200.w
	move.b	d1,$ffff820d.w
	ENDC
	rts

******** OBJECT DATA ********

	DATA



******** OBJECT RESERVES ********

	BSS



******** OBJECT SUBROUTINES ********

	TEXT



******** END OF DEMO-EFFECT OBJECT ********