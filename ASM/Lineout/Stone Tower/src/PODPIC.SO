; Poets Of Decay picture displayer.

******** OBJECT EQUS ********

******** OBJECT TABLE ********

* Must be first in object!!
pod_pic_table:
	DC.L	PODPICMAINLOOP
	DC.L	INIT_PODPIC
	DC.L	SET_PODPICRES
	DC.L	podpic_trigger_fade_out
* Add more addresses here..
	DC.L	0

******** RESOLUTION SETTING ROUTINE ********

SET_PODPICRES:
	bra	podpic_trigger_fade_in

******** INIT SUBROUTINE ********

INIT_PODPIC:
	bra	calc_podpic_pal

******** MAINLOOP SUBROUTINE ********

PODPICMAINLOOP:
	move.l	frmcnt,d0
	cmp.l	lastfrmcnt,d0
	bne.s	.res_done
	bsr	SET_PODPICRES
.res_done:

	bsr	display_pod_pic

	IFEQ	testmode
	move.l	scr,d0
	lsr.w	#8,d0
	move.l	d0,$FFFF8200.w
	ENDC

.done:	rts

******** OBJECT SUBROUTINES ********

podpic_trigger_fade_in:
	move.w	#+1,podpic_fade_dir
	move.l	#podpic_fadepal,podpic_fadepal_adr
	move.l	#pod_pic_vbl,pal_irq
	rts

podpic_trigger_fade_out:
	move.w	#-1,podpic_fade_dir
	move.l	#podpic_fadepal+32*16,podpic_fadepal_adr
	move.l	#pod_pic_vbl,pal_irq
	rts

pod_pic_vbl:
	move.w	$0468.w,d0
	andi.w	#3,d0
	bne.s	.end

	tst.w	podpic_fade_dir
	beq.s	.end
	bmi.s	.fade_out

;- fade in -----------------------------------------------------------------
.fade_in:
	movea.l	podpic_fadepal_adr,a1
	cmpa.l	#podpic_fadepal+16*32,a1
	bne.s	.go_on
	clr.w	podpic_fade_dir
	bra	.end
.go_on:	lea	$FFFF8240.w,a0
	REPT	8
	move.l	(a1)+,(a0)+
	ENDR
	move.l	a1,podpic_fadepal_adr
	bra.s	.end

;- fade out ----------------------------------------------------------------
.fade_out:
	movea.l	podpic_fadepal_adr,a1
	cmpa.l	#podpic_fadepal,a1
	bgt.s	.go_on2
	clr.w	podpic_fade_dir
	bra.s	.end
.go_on2:lea	$FFFF8260.w,a0
	REPT	8
	move.l	-(a1),-(a0)
	ENDR
	move.l	a1,podpic_fadepal_adr

.end:	rts

display_pod_pic:
	lea	pod_pic+34,a1
	movea.l	scr,a0
	move.w	#666-1,d7				; man, you badass!
.loop:	movem.l	(a1)+,d0-d6/a2-a6
	movem.l	d0-d6/a2-a6,(a0)
	lea	12*4(a0),a0
	dbf	d7,.loop
	movem.l	(a1)+,d0-d6/a2
	movem.l	d0-d6/a2,(a0)
	rts

; Calculate some blackfaded versions of the palette..
calc_podpic_pal:

; 1: Extract (ste) palette to easy format.
	lea	pod_pic+2,a1
	lea	.pal_tbl(pc),a0
	moveq	#16-1,d7

.preloop:
	move.w	(a1)+,d0
	move.w	d0,d1
	move.w	d0,d2
	move.w	d0,d3
	move.w	d0,d4
	move.w	d0,d5

	andi.w	#$0700,d0
	lsr.w	#7,d0
	rol.w	#5,d3
	andi.w	#$0001,d3
	or.w	d3,d0

	andi.w	#$0070,d1
	lsr.w	#3,d1
	rol.b	#1,d4
	andi.w	#$0001,d4
	or.w	d4,d1
	
	andi.w	#$0007,d2
	add.w	d2,d2
	rol.b	#5,d5
	andi.w	#$0001,d5
	or.w	d5,d2

	move.b	d0,(a0)+
	move.b	d1,(a0)+
	move.b	d2,(a0)+

	dbra	d7,.preloop

; 2: make faded versions..
	lea	podpic_fadepal,a0
	moveq	#16-1,d7

.lowloop:
	lea	.pal_tbl(pc),a1
	moveq	#16-1,d6

.lowentryloop:
	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2

; do the actual fade..
	move.b	(a1)+,d0
	sub.b	d7,d0
	bpl.s	.r_ok
	moveq	#0,d0
.r_ok:	move.b	(a1)+,d1
	sub.b	d7,d1
	bpl.s	.g_ok
	moveq	#0,d1
.g_ok:	move.b	(a1)+,d2
	sub.b	d7,d2
	bpl.s	.b_ok
	moveq	#0,d2
.b_ok:

; Put in rorred format, weird STe crap..
	lsr.w	d0
	bcc.s	.rok
	ori.w	#%1000,d0
.rok:	lsr.w	d1
	bcc.s	.gok
	ori.w	#%1000,d1
.gok:	lsr.w	d2
	bcc.s	.bok
	ori.w	#%1000,d2
.bok:	

; Pack rgb, and store..
	lsl.w	#8,d0
	lsl.w	#4,d1
	or.w	d0,d2
	or.w	d1,d2
	move.w	d2,(a0)+
	dbf	d6,.lowentryloop

	dbf	d7,.lowloop
	rts

.pal_tbl:
	DS.B	3*16

******** OBJECT DATA ********

	DATA

pod_pic:incbin	ucm25b.pi1

******** OBJECT RESERVES ********

	BSS

podpic_fade_dir:
	ds.w	1
podpic_fadepal:
	ds.w	16*16
podpic_fadepal_adr:
	ds.l	1

******** END OF DEMO-EFFECT OBJECT ********
