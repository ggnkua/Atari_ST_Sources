***************************************************************************
* Powerman Of The Wild Boys presents.......well, run it and see!	  *
*									  *
* WARNING: You may not use this code if you dont credit me!  If anyone    *
*	   says they coded it or doesn't credit me I'll kick your ass...  *
*									  *
* This was coded ages ago, September 91, so the routines aren't really    *
* my fastest......I did manage to get it working with a 2 plane starfield *
* and a 8khz module so its not that slow.....				  *
*									  *
* All code (C) The Wild Boys, 1991/92					  *
***************************************************************************

SCREEN1		EQU $70000+$80000
SCREEN2		EQU $78000+$80000

		MOVE.L A7,STACK
		LEA MY,A7

		CLR.L -(A7)
		MOVE.W #32,-(A7)
		TRAP #1		
		ADDQ.L #6,A7

		MOVE.L #SCREEN1,SCR1
		MOVE.L #SCREEN2,SCR2
		JSR INIT
		JSR SET_UP
		JSR MAIN
		JSR END

		MOVE.L STACK,-(A7)
		MOVE.W #32,-(A7)
		TRAP #1		
		ADDQ.L #6,A7

		CLR.L -(A7)
		TRAP #1

SET_UP		MOVE.L #SCREEN1,PHYSIC
		MOVE.L #SCREEN2,LOGIC
		JSR INIT_VEC_FONT
		RTS

MAIN		MOVE.W #$077,$FFFF8240+(2*4).W
		MOVE.W #$077,$FFFF8240+(2*8).W
		MOVE.W #$077,$FFFF8240+(2*12).W
		MOVE.W #$2300,SR
.L1		JSR DO_VEC_TEXT
		CMPI.B #57,$FFFFFC02.W
		BEQ .L2
		MOVE.L VEC_TEXT_POINT,A0
		CMPA.L #VEC_TEXT_END,A0
		BLT .L1
.L2		RTS

WAITVBL		CLR.B VBLFLAG
.L1		TST.B VBLFLAG
		BEQ .L1
		RTS

LOGIC		DS.L 1
PHYSIC		DS.L 1

SWAP		MOVEM.L LOGIC,D0-D1
		MOVE.L D0,D2
		LSR.W #8,D2
		MOVE.L D2,$FFFF8200.W
		BSR WAITVBL
		EXG D0,D1
		MOVEM.L D0-D1,LOGIC
		RTS

INIT		MOVE.W #$2700,SR
		DC.W $A000		
		DC.W $A00A		
		MOVE.B #$12,D0		
		BSR IKBD		
		LEA $FFFF8240.W,A0
		MOVEQ.W #8-1,D0
.COLS		MOVE.L #0,(A0)+
		DBF D0,.COLS
		MOVEQ.L #0,D1
		MOVE.L SCR1,A0
		CMP.L SCR2,A0
		BEQ .L222
		MOVE.L SCR2,A1
		MOVE.L A1,A2
.L33		CMPA.L A0,A2
		BEQ .L2
		MOVE.L D1,(A0)+
		MOVE.L D1,(A1)+
		BRA .L33		
.L222		MOVE.W #32000/4-1,D0
.L22		MOVE.L D1,(A0)+
		DBF D0,.L22
.L2		LEA VARS,A0
		MOVE.L $70.W,(A0)+
		MOVE.L $120.W,(A0)+
		MOVE.L $118.W,(A0)+
		MOVE.L $134.W,(A0)+
		MOVE.L $68.W,(A0)+
		MOVE.B $FFFFFA07.W,(A0)+
		MOVE.B $FFFFFA09.W,(A0)+
		MOVE.B $FFFFFA13.W,(A0)+
		MOVE.B $FFFFFA1B.W,(A0)+
		MOVE.B $FFFFFA21.W,(A0)+
		MOVE.B $FFFFFA15.W,(A0)+
		MOVE.B $FFFFFA19.W,(A0)+
		MOVE.B $FFFFFA1F.W,(A0)+
		MOVE.B $FFFFFA15.W,(A0)+
		MOVE.L #VBL,$70.W		
		MOVE.L #RTE,$68.W
		MOVE.L #RTE,$134.W
		MOVE.L #KEY,$118.W
		MOVE.L SCR1,D0
		LSR.W #8,D0
		MOVE.W #$2300,SR
		CLR.B VBLFLAG
.WAITVBL	TST.B VBLFLAG
		BEQ .WAITVBL
		MOVE.L D0,$FFFF8200.W
		CLR.B $FFFF8260.W
		MOVE.B #2,$FFFF820A.W
		MOVE.W #$2700,SR
		CLR.B $FFFFFA07.W
		CLR.B $FFFFFA09.W
		CLR.B $FFFFFA13.W
		CLR.B $FFFFFA15.W
		ORI.B #1,$FFFFFA07.W		TIMER B ENABLE
		ORI.B #1,$FFFFFA13.W
		ORI.B #64,$FFFFFA09.W		KEYBOARD ENABLE
		ORI.B #64,$FFFFFA15.W
		RTS
SCR1		DS.L 1
SCR2		DS.L 1
VARS		DS.B 32
VBL		ST VBLFLAG
RTE		RTE
VBLFLAG		DC.W 0
KEY		MOVE.B $FFFFFC02.W,PRESS
		BCLR #6,$FFFFFA11.W
		RTE
PRESS		DC.W 0	
WAITKEY		MOVE.W #$2300,SR
		CLR.B PRESS
.L1		CMPI.B #57+128,PRESS
		BNE .L1
		RTS
END		MOVE.W #$2700,SR
		LEA $FFFF8800.W,A0
		MOVE.L #$700FF00,(A0)
		MOVE.L #$8000000,(A0)
		MOVE.L #$9000000,(A0)
		MOVE.L #$A000000,(A0)
		LEA VARS,A0
		MOVE.L (A0)+,$70.W
		MOVE.L (A0)+,$120.W
		MOVE.L (A0)+,$118.W
		MOVE.L (A0)+,$134.W
		MOVE.L (A0)+,$68.W
		MOVE.B (A0)+,$FFFFFA07.W
		MOVE.B (A0)+,$FFFFFA09.W
		MOVE.B (A0)+,$FFFFFA13.W
		MOVE.B (A0)+,$FFFFFA1B.W
		MOVE.B (A0)+,$FFFFFA21.W
		MOVE.B (A0)+,$FFFFFA15.W
		MOVE.B (A0)+,$FFFFFA19.W
		MOVE.B (A0)+,$FFFFFA1F.W
		MOVE.B (A0)+,$FFFFFA15.W
		MOVE.W #$777,$FFFF8240.W
		MOVE.W #0,$FFFF8242.W
		MOVE.W #0,$FFFF8246.W
		DC.W $A000
		DC.W $A009
		MOVE.B #8,D0
		BSR IKBD
		MOVE.W #1,-(A7)
		PEA $78000+$80000
		PEA $78000+$80000
		MOVE.W #5,-(A7)
		TRAP #14
		LEA 12(A7),A7
		MOVE.W #$2300,SR
		RTS

STACK		DS.L 1

IKBD		LEA $FFFFFC00.W,A0
.L1		MOVE.B (A0),D1
		BTST #1,D1
		BEQ .L1
		MOVE.B D0,2(A0)
		RTS

		DS.L 400
MY		DS.L 1

***************************************************************************
* VECTOR FONT (X=-7 TO +7, Y=-7 TO +7)					  *
* CALL INIT_VEC_FONT TO INIT, DO_VEC_TEXT TO DO ONE TEXT PAGE		  *
***************************************************************************

VEC_SPEED	EQU 32
NUM_CHARS	EQU 45
VEC_TIME	EQU 50*2
STARTZ		EQU 512
MAX_POINTS	EQU 30

VEC_TEXT	DC.B 'POWERMAN PRESENTS...',-1

		DC.B 'HIS LINE VECTOR TEXT'
		DC.B '      ROUTINE!      ',-1
		
		DC.B 'CREDIT ME IF YOU USE'
		DC.B '     THIS CODE      ',-1

		DC.B '  IF YOU DONT, TWB  '
		DC.B '   WILL KICK YOUR   '
		DC.B '       ASS...       ',-1

VEC_TEXT_END	EVEN

FADECOL		DS.W 1
COL_POINT	DC.L TCOLOURS
TCOLOURS	DC.W $077,$011
		DC.W $770,$110
		DC.W $707,$101
		DC.W $070,$010
		DC.W $777,$111
		DC.W -1
SCR_OFF		DC.W 4
LINE_DATA	DS.L 1
POINT_DATA	DS.L 1 
XOFF		DS.W 1
YOFF		DS.W 1
VEC_TEXT_POINT	DS.L 1
CLEAR		DC.W 0
INCS		DS.W 3
CURRENT		DS.L 1
CURR_Z		DS.W 1

DO_VEC_TEXT	TST.W CLEAR
		BEQ .L5
		MOVEQ.W #7-1,D0
		MOVE.W FADECOL,D1
.L6		JSR WAITVBL
		SUB.W D1,$FFFF8240+(2*8).W
		SUB.W D1,$FFFF8240+(2*9).W
		SUB.W D1,$FFFF8240+(2*10).W
		SUB.W D1,$FFFF8240+(2*11).W
		DBF D0,.L6
		CLR.W CLEAR
		LEA SCREEN1+4,A0
		LEA SCREEN2+4,A1
		MOVE.W #200-1,D0
		CLR.L D1
.L1000		MOVEQ.W #20-1,D2
.L777		MOVE.L D1,(A0)
		MOVE.L D1,(A1)
		ADDQ.L #8,A0
		ADDQ.L #8,A1
		DBF D2,.L777
		DBF D0,.L1000

.L5		MOVE.L COL_POINT,A0
		TST.W (A0)	
		BGE .L2000
		LEA TCOLOURS,A0
.L2000		MOVE.W (A0)+,D0
		MOVE.W (A0)+,FADECOL
		MOVE.L A0,COL_POINT
		MOVE.W D0,D1
		SUB.W FADECOL,D1
		MOVE.W D1,$FFFF8240+(2*4).W
		MOVE.W D0,$FFFF8240+(2*8).W
		MOVE.W D0,$FFFF8240+(2*12).W

.L56		CLR.W YOFF
		MOVE.L VEC_TEXT_POINT,A0
		CMPA.L #VEC_TEXT_END,A0
		BLT .L1
		LEA VEC_TEXT,A0
.L1		MOVE.L A0,A1
		CLR.W D0
.L22		ADDQ.W #1,D0
		TST.B (A1)+
		BGE .L22
		SUBQ.W #1,D0			D0=NUM CHARS IN TEXT PAGE
		DIVU #20,D0			D0=NUM LINES
		MOVE.W D0,D3
		SUBQ.W #1,D3			D3=DBF FOR EACH LINE
		LSL.W #4,D0			*16
		MOVE.W #200,D1
		SUB.W D0,D1
		LSR.W #1,D1			
		MOVE.W #100,D0
		SUB.W D1,D0
		NEG.W D0
		ADD.W D0,YOFF
		MOVE.L A0,VEC_TEXT_POINT

.L70		MOVEQ.W #20-1,D4
		MOVE.W #(-16*10)+12,XOFF
.L55		MOVE.L VEC_TEXT_POINT,A0
		CLR.W D0
		MOVE.B (A0)+,D0	
		MOVE.L A0,VEC_TEXT_POINT
		TST.B -1(A0)
		bmi .RR
		CMPI.B #109-65,D0
		BNE .L8889
		ADD.W #16,XOFF
		DBF D4,.L55
		BRA .HHH
.L8889		LSL.W #3,D0
		LEA FONT_OFFS,A0
		LEA (A0,D0.W),A0
		LEA WORLD,A1
		MOVE.L 4(A0),D0			D0=NUM POINTS
		SUBQ.W #1,D0
		MOVE.W D0,NUM_POINTS
		MOVE.L (A0),A0
		MOVE.L A0,LINE_DATA
.L3		TST.W (A0)+
		BGE .L3
		MOVE.L A0,POINT_DATA
		MOVE.W #0,D1
.L2		MOVE.W (A0)+,(A1)+
		MOVE.W (A0)+,(A1)+
		MOVE.W D1,(A1)+			
		DBF D0,.L2
		MOVE.W #STARTZ,CURR_Z	
		CLR.L XROT
		CLR.W ZROT
		CLR.L XOFFSET
		CLR.W ZOFFSET
		MOVE.W #512/VEC_SPEED-1,REG12
		MOVE.W #4,SCR_OFF
.L91		MOVEM.W D3/D4,-(A7)
		JSR ROTATE_POINTS2
		LEA VIEW+4,A0
		MOVE.W NUM_POINTS,D2
		MOVEM.W XOFF,D0-D1
		MOVE.W CURR_Z,D3
.L999		MOVE.W D3,(A0)+
		ADDQ.L #6,A0
		DBF D2,.L999
		SUB.W #VEC_SPEED,CURR_Z
		JSR PERSPECT2

		MOVE.W #-7,D0
		MOVE.W #-7,D1
		MOVE.W VIEW+4,D3
		ADD.W XOFF,D0
		ADD.W YOFF,D1
		EXT.L D0
		EXT.L D1
		ASL.L #8,D0		
		ASL.L #8,D1			
		ADD.W DIST,D3
		DIVS D3,D0			DIVIDE X BY DIST+Z
		DIVS D3,D1			DIVIDE Y BY DIST+Z

		LEA SCREEN,A0
		MOVE.W NUM_POINTS,D2
.L300		ADD.W D0,(A0)
		ADD.W #160,(A0)+
		ADD.W D1,(A0)
		ADD.W #100,(A0)+
		DBF D2,.L300
		MOVE.W SCREEN+2,YPOS

		JSR ERASE_VEC
		JSR DRAW_VEC
		MOVEM.W (A7)+,D3/D4
		JSR SWAP

		CMPI.B #57,$FFFFFC02.W
		BEQ .L81

		SUBQ.W #1,REG12
		BGE .L91
		ADD.W #16,XOFF

		MOVEM.W D3/D4,-(A7)
		
		JSR ERASE_VEC
		MOVE.W #6,SCR_OFF
		JSR DRAW_VEC
		JSR SWAP
		MOVE.W #4,SCR_OFF

		JSR ERASE_VEC
		MOVE.W #6,SCR_OFF
		JSR DRAW_VEC
		JSR SWAP
		MOVE.W #4,SCR_OFF

		MOVEM.W (A7)+,D3/D4
.L888		DBF D4,.L55
.HHH		ADD.W #16,YOFF
		DBF D3,.L70
.RR		ST CLEAR
		MOVE.W #VEC_TIME-1,D0
.L80		JSR WAITVBL
		CMPI.B #57,$FFFFFC02.W
		BEQ .L81
		DBF D0,.L80
		MOVE.L VEC_TEXT_POINT,A0
		TST.B (A0)
		BGE .L81
		ADDQ.L #1,VEC_TEXT_POINT
.L81		RTS

YPOS		DC.W 0
ERASE_VEC	MOVE.L LOGIC,A0
		ADDQ.L #4,A0
		MOVE.W YPOS,D0
		CMPI.W #32,D0
		BLT .L111
		SUB.W #32,D0
.L111		MULU #160,D0
		LEA (A0,D0.W),A0
		MOVE.W #50-1,D0
		CLR.W D1
.L100
OFFSET		SET 0
		REPT 20
		MOVE.W D1,OFFSET(A0)
OFFSET		SET OFFSET+8
		ENDR
		LEA 160(A0),A0
		DBF D0,.L100
		RTS
REG12		DS.W 1

DRAW_VEC	LEA SCREEN,A3

		LEA SCREEN,A3
		MOVE.L LOGIC,A1	
		ADD.W SCR_OFF,A1
		MOVE.L A1,CURRENT
		MOVE.L LINE_DATA,A2
.L1		MOVE.W (A2)+,D0
		BMI .L2
		MOVE.W (A2)+,D1
		SUBQ.W #1,D0
		SUBQ.W #1,D1
		LSL.W #2,D0
		LSL.W #2,D1
		MOVEM.W (A3,D0.W),D2-D3
		MOVEM.W (A3,D1.W),D0-D1
;draw line from d2,d3 to d0,d1
		MOVEM.L A2/A3,-(A7)
		BSR LINE
		MOVEM.L (A7)+,A2/A3
		BRA .L1
.L2		RTS	

INIT_VEC_FONT	JSR MAKE_FONT_OFFS
		MOVE.L #VEC_TEXT,VEC_TEXT_POINT
		JSR CONVERT
		RTS

MAKE_FONT_OFFS	LEA FONT_OFFS,A0
		LEA VECTOR_FONT,A1
		MOVE.W #45-1,D0
.L1		MOVE.L A1,(A0)+
		CLR.W D1	
.L2		MOVE.W (A1)+,D2
		BMI .RE
		CMP.W D1,D2
		BLE .L2
		MOVE.W D2,D1
		BRA .L2
.RE		CLR.W (A0)+
		MOVE.W D1,(A0)+
		LSL.W #2,D1
		LEA (A1,D1.W),A1
		DBF D0,.L1
		RTS

FONT_OFFS	DS.L NUM_CHARS*2		ADDRESS, NUM POINTS
;A
VECTOR_FONT	DC.W 1,2,3,4,5,6,7,8,-1
		DC.W -7,7
		DC.W -7,-6
		DC.W -6,-7
		DC.W 6,-7
		DC.W 7,-6
		DC.W 7,7
		DC.W -7,0
		DC.W 7,0
;B		
		DC.W 1,2,2,3,4,5,6,7,8,9,1,10,-1
		DC.W -7,7
		DC.W -7,-7
		DC.W 6,-7
		DC.W 7,-6
		DC.W 7,-1
		DC.W 7,0
		DC.W -6,0
		DC.W 7,2
		DC.W 7,6
		DC.W 6,7
;C
		DC.W 1,2,3,4,5,6,-1
		DC.W 7,7,-6,7
		DC.W -7,6,-7,-6
		DC.W -6,-7,7,-7
;D
		DC.W 1,2,2,3,3,4,4,5,5,6,6,1,-1
		DC.W -7,-7,3,-7,7,-3,7,4,3,7,-7,7
;E		
		DC.W 1,2,3,4,5,6,7,8,-1
		DC.W -7,-7,7,-7
		DC.W -7,0,4,0
		DC.W -7,7,7,7
		DC.W -7,-6,-7,6
;F
		DC.W 1,2,3,4,5,6,-1
		DC.W -7,-7,7,-7
		DC.W -7,0,4,0
		DC.W -7,-6,-7,7
;G
		DC.W 1,2,3,4,5,6,6,7,7,8,-1
		DC.W 7,-7,-6,-7
		DC.W -7,-6,-7,6
		DC.W -6,7,7,7
		DC.W 7,0,0,0
;H		
		DC.W 1,2,3,4,5,6,-1
		DC.W -7,7,-7,-7
		DC.W 7,7,7,-7
		DC.W -7,0,7,0
;I
		DC.W 1,2,3,4,5,6,-1
		DC.W -5,-7,5,-7
		DC.W -5,7,5,7
		DC.W 0,-7,0,7
;J		
		DC.W 1,2,3,4,4,5,-1
		DC.W 7,-7,7,6
		DC.W 6,7,-4,7
		DC.W -7,4
;K
		DC.W 1,2,3,4,3,5,-1
		DC.W -7,-7,-7,7
		DC.W -7,0
		DC.W 7,-7,7,7
;L
		DC.W 1,2,3,4,-1
		DC.W -7,-7,-7,6
		DC.W -6,7,7,7
;M
		DC.W 1,2,2,3,3,4,4,5,-1
		DC.W -7,7,-7,-7
		DC.W 0,0,7,-7
		DC.W 7,7
;N
		DC.W 1,2,2,3,3,4,-1
		DC.W -7,7,-7,-7
		DC.W 7,7,7,-7
;O
		DC.W 1,2,3,4,5,6,7,8,-1
		DC.W -6,-7,6,-7
		DC.W -6,7,6,7
		DC.W -7,-6,-7,6
		DC.W 7,-6,7,6
;P
		DC.W 1,2,3,4,5,6,7,8,-1
		DC.W -7,7,-7,-7
		DC.W -7,-7,7,-7
		DC.W 7,-7,7,-1
		DC.W 7,0,-7,0
;Q
		DC.W 1,2,3,4,5,6,7,8,9,10,-1
		DC.W -6,-7,6,-7
		DC.W -6,7,6,7
		DC.W -7,-6,-7,6
		DC.W 7,-6,7,6
		DC.W 4,4,7,7
;R
		DC.W 1,2,3,4,5,6,7,8,9,10,-1
		DC.W -7,7,-7,-7
		DC.W -7,-7,7,-7
		DC.W 7,-7,7,-1
		DC.W 7,0,-7,0
		DC.W 0,0,7,7
;S
		DC.W 1,2,3,4,5,6,7,8,9,10,-1
		DC.W 7,-7,-7,-7
		DC.W -7,-7,-7,-1
		DC.W -7,0,7,0
		DC.W 7,1,7,7
		DC.W 7,7,-7,7
;T
		DC.W 1,2,3,4,-1
		DC.W -7,-7,7,-7
		DC.W 0,-6,0,7
;U
		DC.W 1,2,3,4,5,6,-1
		DC.W -7,-7,-7,6
		DC.W -6,7,6,7
		DC.W 7,6,7,-7
;V
		DC.W 1,2,2,3,-1
		DC.W -7,-7,0,7
		DC.W 7,-7
;W
		DC.W 1,2,2,3,3,4,4,5,-1
		DC.W -7,-7,-7,7,0,0,7,7,7,-7
;X
		DC.W 1,2,3,4,-1
		DC.W -8,-8,7,7
		DC.W 8,-8,-7,7
;Y			
		DC.W 1,2,3,2,4,2,-1
		DC.W -8,-8,0,0,7,-7,0,7
;Z
		DC.W 1,2,2,3,3,4,-1
		DC.W -7,-7,7,-7
		DC.W -7,7,7,7
;0
		DC.W 1,2,3,4,5,6,7,8,9,10,-1
		DC.W -6,-7,6,-7
		DC.W -6,7,6,7
		DC.W -7,-6,-7,6
		DC.W 7,-6,7,6
		DC.W 6,-6,-6,6
;1
		DC.W 1,2,-1
		DC.W 0,-7,0,7
;2
		DC.W 1,2,2,3,3,4,4,5,5,6,-1
		DC.W -7,-7,4,-7,7,-5,7,-3,-7,7,7,7
;3
		DC.W 1,2,3,4,5,6,7,8,-1
		DC.W -7,-7,6,-7
		DC.W -4,0,6,0
		DC.W -7,7,6,7
		DC.W 7,-6,7,6
;4
		DC.W 1,2,2,3,4,5,-1
		DC.W -7,-7,-7,0,7,0
		DC.W 2,-4,2,7
;5
		DC.W 1,2,3,4,5,6,7,8,9,10,-1
		DC.W 7,-7,-7,-7
		DC.W -7,-7,-7,-1
		DC.W -7,0,6,0
		DC.W 7,1,7,7
		DC.W 7,7,-7,7
;6
		DC.W 1,2,2,3,3,4,4,5,-1
		DC.W -7,-7,-7,7,7,7,7,0,-7,0
;7
		DC.W 1,2,2,3,-1
		DC.W -7,-7,7,-7
		DC.W -3,7
;8
		DC.W 1,2,2,3,3,4,4,1,5,6,-1
		DC.W -7,-7,-7,7,7,7,7,-7
		DC.W -7,0,7,0
;9
		DC.W 1,2,2,3,3,4,4,5,-1
		DC.W 7,7,7,-7,-7,-7,-7,0,7,0
;.
		DC.W 1,2,-1
		DC.W -7,7,-7,6
;-
		DC.W 1,2,-1
		DC.W -6,0,6,0
;,
		DC.W 1,2,-1
		DC.W -4,4,-7,7	
;?
		DC.W 1,2,2,3,3,4,4,5,6,7,-1
		DC.W -7,-7,7,-7,7,0,0,0,0,4,0,7,0,6
;!		
		DC.W 1,2,3,4,-1
		DC.W 0,-7,0,4,0,6,0,7
;'
		DC.W 1,2,-1
		DC.W -7,-4,-4,-7
;(
		DC.W 1,2,2,3,3,4,-1
		DC.W -4,-7,-7,-7,-7,7,-4,7
;)
		DC.W 1,2,2,3,3,4,-1
		DC.W 4,-7,7,-7,7,7,4,7

CONVERT		LEA VEC_TEXT,A0
		LEA A4_CTAB,A1
.A		MOVE.B (A0)+,D0
		BMI .DD
		MOVEA.L A1,A2
		MOVEQ.W #20-1,D1
.BZ		CMP.B (A2)+,D0 
		BEQ .C
		ADDQ.L #1,A2
		DBF D1,.BZ	
		BRA .D
.C		MOVE.B (A2),-1(A0)
.D		SUB.B #65,-1(A0)
.DD		CMPA.L #VEC_TEXT_END,A0
		BLT .A
.EXIT		RTS	

A4_CTAB		DC.B '0',91
		DC.B '1',92
		DC.B '2',93
		DC.B '3',94
		DC.B '4',95
		DC.B '5',96
		DC.B '6',97
		DC.B '7',98
		DC.B "8",99
		DC.B '9',100,'.',101,'-',102,',',103,'?',104
		DC.B '!',105,"'",106,'(',107,")",108,' ',109
		EVEN

REG1		DS.W 1
REG2		DS.W 1
REG3		DS.W 1

LINE		MOVEM.W D0-D1,REG1
		MOVE.W D2,A0
		MOVE.W D3,A1
		MOVE.L CURRENT,A2
		LEA YTAB1,A3
		MOVE.W A0,A4
		SUB.W REG1,A4				A4=DX
		MOVE.W A1,D3
		SUB.W REG2,D3				D3=DY
		CMP.W #0,A4
		BGE .L1
		MOVE.W A4,D4
		NEG.W D4
		MOVE.W D4,A4
		MOVEQ.W #-1,D4				D4=X STEP
		BRA .L2
.L1		MOVEQ.W #1,D4				D4=X STEP
.L2		TST.W D3
		BGE .L3
		NEG.W D3
		MOVEQ.W #-1,D2				D2=Y STEP
		BRA .L4
.L3		MOVEQ.W #1,D2				D2=Y STEP
.L4		TST.W D3
		BNE .L5
		MOVEQ.W #-1,D0				D0=E
		BRA .L6
.L5		MOVEQ.W #0,D0				D0=E
.L6		CMP.W D3,A4
		BGE R1

R2		TST.W D2	
		BGE R2B

R2A		TST.W D4
		BMI R2A1

R2A2		;UP AND RIGHT
		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
		MOVEQ.W #0,D2
		BSET D1,D2	
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		OR.W D2,(A2)
		TST.W D0
		BGE .L7	
		BTST #0,D2
		BEQ .L6
		ADDQ.W #8,A2
.L6		ADD.W D3,D0
		ADD.W D4,REG1
		ROR.W D2
		CMP.W REG1,A0
		BNE .L7
		CMP.W REG2,A1
		BEQ .L2
.L7		SUB.W A4,D0
		SUB.W #1,REG2
		LEA -160(A2),A2
		BRA .L5 
.L2		OR.W D2,(A2)
		RTS

R2A1		;UP AND LEFT
		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
		MOVEQ.W #0,D2
		BSET D1,D2	
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		OR.W D2,(A2)
		TST.W D0
		BGE .L7	
		BTST #15,D2
		BEQ .L6
		SUBQ.W #8,A2
.L6		ADD.W D3,D0
		ADD.W D4,REG1
		ROL.W D2
		CMP.W REG1,A0
		BNE .L7
		CMP.W REG2,A1
		BEQ .L2
.L7		SUB.W A4,D0
		SUB.W #1,REG2
		LEA -160(A2),A2
		BRA .L5 
.L2		OR.W D2,(A2)
		RTS

R2B		TST.W D4
		BMI R2B1

R2B2		;DOWN AND RIGHT
		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
		MOVEQ.W #0,D2
		BSET D1,D2	
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		OR.W D2,(A2)
		TST.W D0
		BGE .L7	
		BTST #0,D2
		BEQ .L6
		ADDQ.W #8,A2
.L6		ADD.W D3,D0
		ADD.W D4,REG1
		ROR.W D2
		CMP.W REG1,A0
		BNE .L7
		CMP.W REG2,A1
		BEQ .L2
.L7		SUB.W A4,D0
		ADDQ.W #1,REG2
		LEA 160(A2),A2
		BRA .L5 
.L2		OR.W D2,(A2)
		RTS

R2B1		;DOWN AND LEFT
		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
		MOVEQ.W #0,D2
		BSET D1,D2	
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		OR.W D2,(A2)
		TST.W D0
		BGE .L7	
		BTST #15,D2
		BEQ .L6
		SUBQ.W #8,A2
.L6		ADD.W D3,D0
		ADD.W D4,REG1
		ROL.W D2
		CMP.W REG1,A0
		BNE .L7
		CMP.W REG2,A1
		BEQ .L2
.L7		SUB.W A4,D0
		ADD.W #1,REG2
		LEA 160(A2),A2
		BRA .L5 
.L2		OR.W D2,(A2)
		RTS

R1		TST.W D2
		BMI R1A

R1B		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
.L6		MOVEQ.W #0,D2
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		BSET D1,D2	
		TST.W D0
		BGE .L3
		SUB.W D4,D1
		ADD.W D3,D0
		ADD.W D4,REG1
		TST.W D1
		BMI .L4
		CMPI.W #16,D1
		BLT .L5
		MOVEQ.W #0,D1
		OR.W D2,(A2)
		SUBQ.W #8,A2
		BRA .L6			
.L4		MOVEQ.W #15,D1
		OR.W D2,(A2)
		ADDQ.W #8,A2
		BRA .L6	
.L3		OR.W D2,(A2)
		LEA 160(A2),A2
		SUB.W A4,D0
		ADD.W #1,REG2
		SUB.W D4,D1
		ADD.W D3,D0
		ADD.W D4,REG1
		TST.W D1
		BMI .L42
		CMPI.W #16,D1
		BLT .L6
		MOVEQ.W #0,D1
		SUBQ.W #8,A2
		BRA .L6			
.L42		MOVEQ.W #15,D1
		ADDQ.W #8,A2
		BRA .L6	
.L2		OR.W D2,(A2)
		RTS

R1A		MOVE.W REG1,D2
		LSR.W #4,D2
		MOVE.W D2,D1
		LSL.W #3,D1
		MOVE.W D1,REG3
		MOVE.W D1,D2
		LSL.W #1,D2
		SUB.W REG1,D2
		BGE .L11
		NEG.W D2	
.L11		MOVEQ.W #15,D1
		SUB.W D2,D1				BIT TO SET(D1)
		MOVE.W REG2,D2
		LSL.W #1,D2
		LEA (A3,D2.W),A3
		MOVE.W (A3),D2
		ADD.W REG3,D2
		LEA (A2,D2.W),A2
.L6		MOVEQ.W #0,D2
.L5		CMP.W REG1,A0
		BNE .L1
		CMP.W REG2,A1
		BEQ .L2
.L1		BSET D1,D2	
		TST.W D0
		BGE .L3
		SUB.W D4,D1
		ADD.W D3,D0
		ADD.W D4,REG1
		TST.W D1
		BMI .L4
		CMPI.W #16,D1
		BLT .L5
		MOVEQ.W #0,D1
		OR.W D2,(A2)
		SUBQ.W #8,A2
		BRA .L6			
.L4		MOVEQ.W #15,D1
		OR.W D2,(A2)
		ADDQ.W #8,A2
		BRA .L6	
.L3		OR.W D2,(A2)
		LEA -160(A2),A2
		SUB.W A4,D0
		SUB.W #1,REG2
		SUB.W D4,D1
		ADD.W D3,D0
		ADD.W D4,REG1
		TST.W D1
		BMI .L42
		CMPI.W #16,D1
		BLT .L6
		MOVEQ.W #0,D1
		SUBQ.W #8,A2
		BRA .L6			
.L42		MOVEQ.W #15,D1
		ADDQ.W #8,A2
		BRA .L6	
.L2		OR.W D2,(A2)
		RTS
							
YTAB1		
OFFSET		SET 0
		REPT 200
		DC.W OFFSET
OFFSET		SET OFFSET+160
		ENDR

********************************** 3D ROUTINES ****************************
* ALL 3D ROUTINE CODING BY POWERMAN OF THE WILD BOYS			  *
* Y AXIS SHOULD BE TREATED AS UPSIDE DOWN (-VE IS TOP, +VE IS BOTTOM)	  *
* CALL ROTATE_POINTS, SORT (IF VECTORBALLS), PERSPECT			  * 
* CALL HIDE TO HIDE HIDDEN SURFACES (FILLED POLYGONS ONLY)		  *
* ALL POLYGONS MUST BE CONVEX						  *
* SCREEN = SCREEN X,Y COORDS (0,0=TOP LEFT)				  *
* USES 512 ENTRY SINE TABLE						  *
* DOESN'T USE A4,D7 (SO CAN BE USED WITH AUDIO SCULPTURE REPLAY ROUT)	  *
***************************************************************************
POINTS		EQU 100			Maximum number of points

DIST		DC.W 256		Perspective
WORLD		DS.W POINTS*3		X,Y,Z coords for each point		
VIEW		DS.W POINTS*4		X,Y,blank,z coords for each rotated point
SCREEN		DS.W POINTS*2		Screen X,Y coords
NUM_POINTS	DS.W 1			Number of points in current object-1
MATRIX		DS.W 9
XROT		DC.W 0			X rotation angle
YROT		DC.W 0			Y rotation angle
ZROT		DC.W 0			Z rotation angle
XOFFSET		DC.W 0			Offset on X axis
YOFFSET		DC.W 0			Offset on Y axis
ZOFFSET		DC.W 0			Offset on Z axis
SINCOS		DS.W 6			Space for x,y,z sine/cosine

ROTATE_POINTS2	LEA SINTAB,A0
		LEA 128*2(A0),A2	COSINE=SINE+128 DEGREES
		LEA SINCOS,A1
		MOVEM.W XROT,D0-D2	D0=X ANGLE,D1=Y,D2=Z
		MOVE.W #512,D4
		MOVE.W #-512,D3

		CMP.W D3,D0		Make sure angles are in range
		BGT .L2
		ADD.W D4,D0	
		BRA .L3	
.L2		CMP.W D4,D0
		BLT .L3
		SUB.W D4,D0

.L3		CMP.W D3,D1
		BGT .L4
		ADD.W D4,D1
		BRA .L5	
.L4		CMP.W D4,D1
		BLT .L5
		SUB.W D4,D1

.L5		CMP.W D3,D2
		BGT .L6
		ADD.W D4,D2
		BRA .L7
.L6		CMP.W D4,D2
		BLT .L7
		SUB.W D4,D2

.L7		MOVEM.W D0-D2,XROT
		TST.W D0			Get correct + value if -
		BPL .L8
		ADD.W D4,D0
.L8		TST.W D1	
		BPL .L9
		ADD.W D4,D1
.L9		TST.W D2
		BPL .L10
		ADD.W D4,D2

.L10		ADD.W D0,D0
		ADD.W D1,D1
		ADD.W D2,D2
		MOVE.W (A0,D0.W),(A1)+		Sine x   (0)
		MOVE.W (A2,D0.W),(A1)+		Cosine x (2)
		MOVE.W (A0,D1.W),(A1)+		Sine y   (4)
		MOVE.W (A2,D1.W),(A1)+		Cosine y (6)
		MOVE.W (A0,D2.W),(A1)+		Sine z   (8)
		MOVE.W (A2,D2.W),(A1)		Cosine z (10)
		LEA -10(A1),A1

		MOVE.W 4(A1),D0			SIN(Y)
		MOVE.W D0,D1		
		MULS 8(A1),D0			SIN(Z)*SIN(Y)
		LSL.L #1,D0
		SWAP D0				D0=SIN(Z)*SIN(Y)
		 	
		NEG.W D1			-SIN(Y)
		MULS 10(A1),D1			COS(Z)
		LSL.L #1,D1
		SWAP D1				D1=-SIN(Y)*COS(Z)

		LEA MATRIX,A2
;MATRIX(1,1) 	
		MOVE.W 10(A1),D2
		MOVE.W D2,D0
		MULS 6(A1),D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A2)+
;MATRIX(1,2)	
		MOVE.W (A1),D2
		MULS D1,D2
		MOVE.W 8(A1),D3
		MOVE.W D3,D4
		MOVE.W D4,-(A7)
		MULS 2(A1),D3
		SUB.L D2,D3
		LSL.L #1,D3
		SWAP D3
		MOVE.W D3,(A2)+		
;MATRIX(1,3)	
		MOVE.W 2(A1),D2
		MULS D1,D2
		MULS (A1),D4
		ADD.L D2,D4
		LSL.L #1,D4
		SWAP D4
		MOVE.W D4,(A2)+		
;MATRIX(2,1)	
		MOVE.W (A7)+,D2
		NEG.W D2
		MULS 6(A1),D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A2)+
;MATRIX(2,2)	
		MOVE.W D0,D2
		MULS 2(A1),D0
		MOVE.W (A1),D3
		MULS D0,D3
		SUB.L D3,D0
		LSL.L #1,D0
		SWAP D0
		MOVE.W D0,(A2)+
;MATRIX(2,3)	
		MULS (A1),D2
		MOVE.W 2(A1),D3
		MOVE.W D3,D0
		MULS D0,D3
		ADD.L D3,D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A2)+
;MATRIX(3,1)	
		MOVE.W 4(A1),(A2)+
;MATRIX(3,2)	
		MOVE.W 6(A1),D2
		MOVE.W D2,D4
		NEG.W D2
		MULS (A1),D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A2)+
;MATRIX(3,3)	
		MULS D0,D4
		LSL.L #1,D4
		SWAP D4
		MOVE.W D4,(A2)+

		MOVE.W NUM_POINTS,REG10
		LEA WORLD,A0
		LEA VIEW,A1
		LEA MATRIX,A2
		LEA XOFFSET,A4
.L1		MOVE.L A2,A3
		MOVEM.W (A0),D0-D2		D0-D2=x,y,z coords
		ADD.W (A4),D0
		ADD.W 2(A4),D1
		ADD.W 4(A4),D2
		MOVE.W D0,-(A7)
		MOVE.W D1,-(A7)
		MOVE.W D2,-(A7)
.CALC_X_COORD	MULS (A3)+,D0			
		MULS (A3)+,D1
		MULS (A3)+,D2
		ADD.L D0,D1
		ADD.L D2,D1
		LSL.L #1,D1
		SWAP D1
		MOVE.W D1,(A1)+
.CALC_Y_COORD	MOVE.W (A7)+,D2
		MOVE.W (A7)+,D1
		MOVE.W (A7)+,D0
		MULS (A3)+,D0
		MULS (A3)+,D1
		MULS (A3)+,D2
		ADD.L D0,D1
		ADD.L D1,D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A1)+
.CALC_Z_COORD	MOVEM.W (A0)+,D0-D2
		ADD.W (A4),D0
		ADD.W 2(A4),D1
		ADD.W 4(A4),D2
		MULS (A3)+,D0
		MULS (A3)+,D1
		MULS (A3)+,D2
		ADD.L D0,D1
		ADD.L D1,D2
		LSL.L #1,D2
		SWAP D2
		MOVE.W D2,(A1)+
		ADDQ.L #2,A1	
		SUBQ.W #1,REG10
		BGE .L1
		RTS
REG10		DS.W 1

XCENT		DC.W 160
YCENT		DC.W 100

PERSPECT2	LEA VIEW,A0
		LEA SCREEN,A1
		MOVE.W NUM_POINTS,D2

.L1		MOVEM.W (A0)+,D0/D1/D3/A2
		EXT.L D0
		EXT.L D1
		ASL.L #8,D0		
		ASL.L #8,D1			

		ADD.W DIST,D3
		DIVS D3,D0			DIVIDE X BY DIST+Z
		DIVS D3,D1			DIVIDE Y BY DIST+Z

		MOVEM.W D0-D1,(A1)
		ADDQ.L #4,A1
		DBF D2,.L1	
		RTS

SINTAB		DC.W 0,402,804,1206,1608,2009,2411,2811
		DC.W 3212,3612,4011,4410,4808,5205,5602,5998
		DC.W 6393,6787,7180,7571,7962,8351,8740,9127
		DC.W 9512,9896,10279,10660,11039,11417,11793,12167
 		DC.W 12540,12910,13279,13646,14010,14373,14733,15091
 		DC.W 15447,15800,16151,16500,16846,17190,17531,17869
 		DC.W 18205,18538,18868,19195,19520,19841,20160,20475
 		DC.W 20788,21097,21403,21706,22006,22302,22595,22884
 		DC.W 23170,23453,23732,24008,24279,24548,24812,25073
 		DC.W 25330,25583,25833,26078,26320,26557,26791,27020
 		DC.W 27246,27467,27684,27897,28106,28311,28511,28707
 		DC.W 28899,29086,29269,29448,29622,29792,29957,30118
 		DC.W 30274,30425,30572,30715,30853,30986,31114,31238
 		DC.W 31357,31471,31581,31686,31786,31881,31972,32058
 		DC.W 32138,32214,32286,32352,32413,32470,32522,32568
 		DC.W 32610,32647,32679,32706,32729,32746,32758,32766

 		DC.W 32767,32766,32758,32746,32729,32706,32679,32647
 		DC.W 32610,32568,32522,32470,32413,32352,32286,32214
 		DC.W 32138,32058,31972,31881,31786,31686,31581,31471
 		DC.W 31357,31238,31114,30986,30853,30715,30572,30425
 		DC.W 30274,30118,29957,29792,29622,29448,29269,29086
 		DC.W 28899,28707,28511,28311,28106,27897,27684,27467
 		DC.W 27246,27020,26791,26557,26320,26078,25833,25583
 		DC.W 25330,25073,24812,24548,24279,24008,23732,23453
 		DC.W 23170,22884,22595,22302,22006,21706,21403,21097
 		DC.W 20788,20475,20160,19841,19520,19195,18868,18538
 		DC.W 18205,17869,17531,17190,16846,16500,16151,15800
 		DC.W 15447,15091,14733,14373,14010,13646,13279,12910
 		DC.W 12540,12167,11793,11417,11039,10660,10279,9896
 		DC.W 9512,9127,8740,8351,7962,7571,7180,6787
 		DC.W 6393,5998,5602,5205,4808,4410,4011,3612
 		DC.W 3212,2811,2411,2009,1608,1206,804,402
 
		DC.W 0,-402,-804,-1206,-1608,-2009,-2411,-2811
 		DC.W -3212,-3612,-4011,-4410,-4808,-5205,-5602,-5998
 		DC.W -6393,-6787,-7180,-7571,-7962,-8351,-8740,-9127
 		DC.W -9512,-9896,-10279,-10660,-11039,-11417,-11793,-12167
 		DC.W -12540,-12910,-13279,-13646,-14010,-14373,-14733,-15091
 		DC.W -15447,-15800,-16151,-16500,-16846,-17190,-17531,-17869
 		DC.W -18205,-18538,-18868,-19195,-19520,-19841,-20160,-20475
 		DC.W -20788,-21097,-21403,-21706,-22006,-22302,-22595,-22884
 		DC.W -23170,-23453,-23732,-24008,-24279,-24548,-24812,-25073
 		DC.W -25330,-25583,-25833,-26078,-26320,-26557,-26791,-27020
 		DC.W -27246,-27467,-27684,-27897,-28106,-28311,-28511,-28707
 		DC.W -28899,-29086,-29269,-29448,-29622,-29792,-29957,-30118
 		DC.W -30274,-30425,-30572,-30715,-30853,-30986,-31114,-31238
 		DC.W -31357,-31471,-31581,-31686,-31786,-31881,-31972,-32058
 		DC.W -32138,-32214,-32286,-32352,-32413,-32470,-32522,-32568
 		DC.W -32610,-32647,-32679,-32706,-32729,-32746,-32758,-32766

 		DC.W -32767,-32766,-32758,-32746,-32729,-32706,-32679,-32647
 		DC.W -32610,-32568,-32522,-32470,-32413,-32352,-32286,-32214
 		DC.W -32138,-32058,-31972,-31881,-31786,-31686,-31581,-31471
 		DC.W -31357,-31238,-31114,-30986,-30853,-30715,-30572,-30425
 		DC.W -30274,-30118,-29957,-29792,-29622,-29448,-29269,-29086
 		DC.W -28899,-28707,-28511,-28311,-28106,-27897,-27684,-27467
 		DC.W -27246,-27020,-26791,-26557,-26320,-26078,-25833,-25583
 		DC.W -25330,-25073,-24812,-24548,-24279,-24008,-23732,-23453
 		DC.W -23170,-22884,-22595,-22302,-22006,-21706,-21403,-21097
 		DC.W -20788,-20475,-20160,-19841,-19520,-19195,-18868,-18538
 		DC.W -18205,-17869,-17531,-17190,-16846,-16500,-16151,-15800
 		DC.W -15447,-15091,-14733,-14373,-14010,-13646,-13279,-12910
 		DC.W -12540,-12167,-11793,-11417,-11039,-10660,-10279,-9896
 		DC.W -9512,-9127,-8740,-8351,-7962,-7571,-7180,-6787
 		DC.W -6393,-5998,-5602,-5205,-4808,-4410,-4011,-3612
 		DC.W -3212,-2811,-2411,-2009,-1608,-1206,-804,-402

* DUPLICATE FIRST 128 ENTRIES FOR COSINE OVERLAP

 		DC.W 0,402,804,1206,1608,2009,2411,2811
 		DC.W 3212,3612,4011,4410,4808,5205,5602,5998
 		DC.W 6393,6787,7180,7571,7962,8351,8740,9127
 		DC.W 9512,9896,10279,10660,11039,11417,11793,12167
 		DC.W 12540,12910,13279,13646,14010,14373,14733,15091
 		DC.W 15447,15800,16151,16500,16846,17190,17531,17869
 		DC.W 18205,18538,18868,19195,19520,19841,20160,20475
 		DC.W 20788,21097,21403,21706,22006,22302,22595,22884
 		DC.W 23170,23453,23732,24008,24279,24548,24812,25073
 		DC.W 25330,25583,25833,26078,26320,26557,26791,27020
 		DC.W 27246,27467,27684,27897,28106,28311,28511,28707
 		DC.W 28899,29086,29269,29448,29622,29792,29957,30118
 		DC.W 30274,30425,30572,30715,30853,30986,31114,31238
 		DC.W 31357,31471,31581,31686,31786,31881,31972,32058
 		DC.W 32138,32214,32286,32352,32413,32470,32522,32568
 		DC.W 32610,32647,32679,32706,32729,32746,32758,32766
