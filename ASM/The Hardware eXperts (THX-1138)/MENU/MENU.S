***********************************************************
*                                                         *
*      MENU MASTERS -  MENU SOURCECODE VERSION 1.0        *
*                                                         *
*   Written by IVAN of THX-1138  (The Hardware eXperts)   *
*   Put on general release by BATMAN of Shaolin Masters   *
*                                                         *
*                                                         *
***********************************************************

;                        IMPORTANT NOTES
;                        ---------------
; This code only loads from the created menu prg on 520 machines
; 1040's go to desktop, see doc on disk.. for hints ect
;
; To change the number of games and the number of tunes change the
; two values below.
;
; put the filenames in FILE1, FILE2, FILE3 ... etc.
;
; if the games are in folders then put the folder names in FOLD1 etc
; otherwise, leave as A:\\
;
; Put the filename of the music at the MUZAK label.
;
; Put the filename of the degas PI1 file at the DEGASPIC LABEL
; N.B The picture can only be 172 lines high as the scroller needs the
; bottom 28 lines
;
; Put your scrolltext in DC.B statements at the SCRTEXT label, always
; leave at least 10 spaces before the start of your text and end
; with a DC.B 255 or the text will not loop
;
; to change the picture fade in/out find the label called "SHOWPIC:"
; and change the JSR SHOW1 to read JSR SHOW1-5
; Put compiled prg in AUTO folder first then DAT.PRG (needed by some prgs)

* THESE VALUES WILL NEED TO BE CHANGED FOR EACH MENU *

NUMBER_OF_TUNES	EQU	9	;REFER TO HOW.DOC ON DISC
NUMBER_OF_GAMES	EQU	3

* START OF PROGRAM *

	INCLUDE	"A:\HEADER.VCS"

	JSR	MENU

	MOVE.L	FIL,A0
	LEA	$7FE40,A1
	MOVE.W	#159,D0
TFLNAME:	MOVE.B	(A0)+,(A1)+
	DBF	D0,TFLNAME
	MOVE.L	FOL,A0
	LEA	$7FEE0,A1
	MOVE.W	#159,D0
TFONAME:	MOVE.B	(A0)+,(A1)+
	DBF	D0,TFONAME
	RTS  

* THE MENU ROUTINE *

MENU:	MOVE.B	#2,$FF820A
	MOVE.B	#$06,$FF8201		; SCREEN AT $68000
	MOVE.B	#2,$FF820A	
	MOVE.B	#$80,$FF8203
	AND.B	#$FE,$484			; DISABLE KEYCLICK
	MOVE.B	#2,$FF820A
	MOVE.B	#0,$FF8260			; CHANGE SCREEN TO LO-RES
CLS:	MOVE.W	#$3200,D0			; CLEAR SCREEN
	LEA.L	$68000,A0		
WIPE:	MOVE.L	#0,(A0)+
	DBF	D0,WIPE
	MOVE.L	#MSOFF,-(A7)		; KILL THE MOUSE
	MOVE.W	#0,-(A7)
	MOVE.W	#25,-(A7)
	TRAP	#14
	ADDQ.L	#8,A7	
	MOVE.W	#8,D0			; SET UP MUSIX(tune number to start at #number)
	JSR	MUZAK
	LEA	SCRTEXT,A0			; SET UP SCROLLTEXT
	MOVE.L	A0,SPTR
	JSR	NEXTLET			; INITIALISE SCROLLER
	OR	#$0F00,SR			; GOODBYE INTERRUPTS
	MOVE.B	#$01,$FFFA07
	MOVE.B	#$01,$FFFA13
	MOVE.B	#$C0,$FFFA09
	MOVE.B	#$C0,$FFFA15
	MOVE.L	#VBL,$70			; SET UP VBL
	AND	#$F0FF,SR			; ENABLE INTERRUPTS
SHOWPIC:	JSR	SHOW1			; DISPLAY PICCY
	JSR	SHOWVU			; VU-METER PICCY
	MOVE.L	#REALVB,SODOFF+2
HERE:	MOVE.W	#7,-(A7)
	TRAP	#1
	ADDQ.L	#2,A7
	CMP.W	#32,D0			; SPACEBAR TO CHANGE TUNE
	BNE	MISS0
	JSR	NEXTUNE
MISS0:	CMP.W	#49,D0	
	BLT	HERE
	CMP.W	#48+NUMBER_OF_GAMES,D0
	BGT	HERE
	SUB.W	#48,D0
	AND.L	#$0000FFFF,D0
	LSL.L	#2,D0
	LEA	FILETAB,A0
	LEA	FOLDTAB,A1
	ADD.L	D0,A0
	ADD.L	D0,A1	
	MOVE.L	(A0),FIL
	MOVE.L	(A1),FOL

MEXIT:	MOVE.L	#MUSONLY,SODOFF+2
	JSR	KILLSCRL
	JSR	FADEMTR
	JSR	PICFADE
	MOVE.W	#10,D0
MMHERE:	MOVE.W	FCNT,D1
MMHERE1:	CMP.W	FCNT,D1
	BEQ	MMHERE
	DBF	D0,MMHERE
	RTS

* VERTICAL BLANK ROUTINE *

VBL:	JSR	TIMERB
	ADD.W	#1,FCNT
	MOVEM.L	D0-D7,-(A7)
	MOVEM.L	DEGASPIC+2,D0-D7
	MOVE.B	#2,$FF820A
	MOVEM.L	D0-D7,$FF8240
	MOVEM.L	(A7)+,D0-D7
SODOFF:	JMP	MUSONLY
	DC.W	0
MUSONLY:	JSR	MUZAK+$0C
	RTE	
REALVB:	JSR	MUZAK+$0C
	JSR	VMETER
	JSR	SCROLL
	RTE

* PICCY SHOW ROUTINES *

SHOW1:	MOVE.W	#172,D0
	LEA	DEGASPIC+34,A0
	LEA	$68000,A4
_PS11:	MOVE.W	D0,D1
	MOVE.L	A4,A1
_PS21:	MOVE.L	A1,A2
	MOVE.L	A0,A3
	MOVE.W	#39,D2
_PS31:	MOVE.L	(A3)+,(A2)+
	DBF	D2,_PS31
	ADD.L	#160,A1
	DBF	D1,_PS21
	ADD.L	#160,A0
	ADD.L	#160,A4
	DBF	D0,_PS11	
	RTS

SHOW2:	MOVE.W	#172,D0
	LEA	DEGASPIC+34,A0
	ADD.L	#172*160,A0
	LEA	$68000+172*160,A4
_PS12:	MOVE.W	D0,D1
	MOVE.L	A4,A1
_PS22:	MOVE.L	A1,A2
	MOVE.L	A0,A3
	MOVE.W	#39,D2
_PS32:	MOVE.L	(A3)+,(A2)+
	DBF	D2,_PS32
	SUB.L	#160,A1
	DBF	D1,_PS22
	SUB.L	#160,A0
	SUB.L	#160,A4
	DBF	D0,_PS12	
	RTS

SHOW3:	MOVE.W	#172,D0
	LEA	DEGASPIC+34,A0
	LEA	$68000,A1
_PS13:	MOVE.W	#39,D2
_PS23:	MOVE.L	(A0)+,(A1)+
	DBF	D2,_PS23
	MOVE.W	FCNT,D6
_XXX	CMP.W	FCNT,D6
	BEQ	_XXX
	DBF	D0,_PS13	
	RTS

SHOW4:	MOVE.W	#172,D0
	LEA	DEGASPIC+34,A0
	ADD.L	#172*160,A0
	LEA	$68000+172*160,A2
_PS14:	MOVE.L	A0,A1
	MOVE.L	A2,A3
	MOVE.W	#39,D2
_PS24:	MOVE.L	(A1)+,(A3)+
	DBF	D2,_PS24
	SUB.L	#160,A0
	SUB.L	#160,A2
	MOVE.W	FCNT,D6
_YYY	CMP.W	FCNT,D6
	BEQ	_YYY
	DBF	D0,_PS14
	RTS

SHOW5:	LEA	$68000+160*171,A0
	LEA	$68000,A2
	LEA	DEGASPIC+34,A3
	ADD.L	#171*160,A3
	LEA	DEGASPIC+34,A5
	MOVE.W	#86,D0
_PS15:	MOVE.L	A0,A1
	MOVE.L	A3,A4
	MOVE.W	#39,D2
_PS25:	MOVE.L	(A4)+,(A1)+
	MOVE.L	(A5)+,(A2)+
	DBF	D2,_PS25
	MOVE.W	FCNT,D3
_PS35:	CMP.W	FCNT,D3
	BEQ	_PS35
	SUB.L	#320,A0
	SUB.L	#320,A3
	ADD.L	#160,A2
	ADD.L	#160,A5
	DBF	D0,_PS15
	RTS

* PICCY FADE ROUTINE *

PICFADE:	LEA	$6EAE0,A0
	LEA	$68000,A2
	MOVE.W	#86,D0
_FS15:	MOVE.L	A0,A1
	MOVE.W	#39,D2
_FS25:	MOVE.L	#0,(A1)+
	MOVE.L	#0,(A2)+
	DBF	D2,_FS25
	MOVE.W	FCNT,D3
_FS35:	CMP.W	FCNT,D3
	BEQ	_FS35
	SUB.L	#320,A0
	ADD.L	#160,A2
	DBF	D0,_FS15
	RTS

* MOVEP BYTESCROLL ROUTINES *

NEXTLET:	MOVEM.L	D0/A0,-(A7)			; NEXT LETTER ROUTINE
NXLET:	MOVE.L	SPTR,A0			; ADDRESS OF LETTER
	ADD.L	#1,SPTR			; POINT TO NEXT LETTER
	CLR.L	D0			; CLEAR D0	
	MOVE.B	(A0),D0			; CHAR FROM TEXT
	CMP.B	#255,D0			; END OF SCROLL?
	BNE	MISS			; NO, JUMP TO MISS
	LEA.L	SCRTEXT,A0			; SCROLLTEXT START
	MOVE.L	A0,SPTR			; ADDRESS OF LETTER
	MOVE.B	(A0),D0			; PUT IT IN D0
MISS:	CMP.B	#97,D0			; IS CHAR LOWER CASE?
	BLT	NOAND			; NO, JUMP TO NOAND
	ANDI.B	#$DF,D0			; YES, MAKE UPPER CASE
NOAND:	CMP.B	#31,D0			; ILLEGAL CHARACTER?		
	BGT	NORM			; NO, JUMP TO NORM
	BRA	NXLET			; YES, GET ANOTHER	
NORM:	SUB.L	#32,D0			; CALCULATE FONT POINTER
	MULU	#400,D0
	LEA.L	FONT,A0			
	ADD.L	D0,A0            
	MOVE.L	A0,FPTR			; STORE FONT POINTER
	MOVE.W	#4,TIMES
	MOVEM.L	(A7)+,D0/A0
	RTS				; BYE!

***********************
* MOVEP BYTE SCROLLER *
***********************

TRANS	MACRO
	MOVEP.L	\1(A0),D0
	MOVEP.L	D0,\1-7(A0)
	MOVEP.L	\1+1(A0),D0
	MOVEP.L	D0,\1(A0)
	ENDM
	
SCROLL	MOVEM.L	D0-D4/A0-A4,-(A7)
	TST.W	TIMES
	BNE	.OK
	JSR	NEXTLET
.OK	LEA	$68000+175*160,A0
	MOVE.L	FPTR,A1
	MOVE.W	#24,D7
.HERE	MOVEP.L	1(A0),D0
	MOVEP.L	D0,(A0)
	TRANS	8
	TRANS	16
	TRANS	24
	TRANS	32
	TRANS	40
	TRANS	48
	TRANS	56
	TRANS	64
	TRANS	72
	TRANS	80
	TRANS	88
	TRANS	96
	TRANS	104
	TRANS	112
	TRANS	120
	TRANS	128
	TRANS	136
	TRANS	144
	TRANS	152
	MOVE.L	(A1),D0
	MOVEP.L	D0,153(A0)
	ADD.L	#16,A1
	ADD.L	#160,A0
	DBF	D7,.HERE
	ADD.L	#4,FPTR
	SUB.W	#1,TIMES
	MOVEM.L	(A7)+,D0-D4/A0-A4	
	RTS

KILLSCRL	LEA	$68000+175*160,A0
	MOVE.W	#26*40,D0
.KILL	CLR.L	(A0)+
	DBF	D0,.KILL
	RTS

* THE VU-METER ROUTINE *

VMETER:	MOVEM.L	D0-D7/A0-A6,-(A7)
	LEA	$702B6,A0		;214 lines down, 24 bytes in
	MOVE.B	#8,D1
	MOVE.W	#2,D0
OLOOP:	MOVE.L	A0,A1
	CLR.W	D3
	MOVE.B	D1,$FF8800
	MOVE.B	$FF8800,D3
	SUB.B	#2,D3
	MOVE.B	#0,D4
	MOVE.W	#15,D2
ILOOP:	CMP.B	D3,D4
	BGT	BLANK
	MOVE.W	#$FFC0,(A1)	
	MOVE.W	#$FFC0,160(A1)
	MOVE.W	#$FFC0,320(A1)
	BRA	LEXIT
BLANK:	MOVE.W	#0,(A1)
	MOVE.W	#0,160(A1)
	MOVE.W	#0,320(A1)
LEXIT:	ADDQ.L	#8,A1
	ADDQ.B	#1,D4
	DBF	D2,ILOOP
	ADD.L	#1280,A0
	ADD.B	#1,D1
	DBF	D0,OLOOP
	MOVEM.L	(A7)+,D0-D7/A0-A6
	RTS

* DISPLAY/FADE THE VU-METER'S BACKGROUND *

SHOWVU:	MOVEM.L	D0-D2/A0-A2,-(A7)
	LEA	$715FE,A1
	MOVE.W	#35,D1
SPHERE:	LEA	VUPICCY,A0
	MOVE.L	A1,A2
	MOVE.W	#$460,D0
PSHOW:	MOVE.L	(A0)+,(A2)+
	DBF	D0,PSHOW
	SUB.L	#160,A1
	MOVE.W	FCNT,D2
SPWAIT:	CMP.W	FCNT,D2
	BEQ	SPWAIT
	DBF	D1,SPHERE
	MOVEM.L	(A7)+,D0-D2/A0-A2
	RTS

FADEMTR:	MOVEM.L	D0-D2/A0-A2,-(A7)
	MOVE.W	#39,D1
FPHERE:	LEA	$6FDA0+$1900,A0
	LEA	$6FE40+$1900,A1
	MOVE.W	#$640,D0
PFADE:	MOVE.L	-(A0),-(A1)
	DBF	D0,PFADE
	MOVE.W	FCNT,D2
FPWAIT:	CMP.W	FCNT,D2
	BEQ	FPWAIT
	DBF	D1,FPHERE
	MOVEM.L	(A7)+,D0-D2/A0-A2
	RTS

* TIMER B CODE FOR PALETTE SWITCHING AND BORDER REMOVAL *

TIMERB:	OR.B	#1,$FFFA07
	OR.B	#1,$FFFA13
	CLR.B	$FFFA1B
	MOVE.B	#174,$FFFA21	; SCREEN LINE NUMBER
	MOVE.B	#8,$FFFA1B
	BCLR	#0,$FFFA0F
	MOVE.L	#TIM_B1,$120
	MOVE.B	#2,$FF820A
	RTS

TIM_B1:	CLR.B	$FFFA1B
	MOVEM.L	D0-D7,-(A7)
	MOVEM.L	PAL2,D0-D7
	MOVE.B	#2,$FF820A
	MOVEM.L	D0-D7,$FF8240
	MOVEM.L	(A7)+,D0-D7
	MOVE.B	#25,$FFFA21
	MOVE.B	#8,$FFFA1B
	MOVE.L	#TIM_B2,$120
	BCLR	#0,$FFFA0F
	RTE

TIM_B2:	CLR.B	$FFFA1B
	MOVE.L	D0,-(A7)
	MOVE.W	SR,-(A7)
	MOVE.W	#$2700,SR		
	MOVE.W	NUMBER,D0
WAIT:	NOP
	DBF	D0,WAIT
	MOVE.B	#0,$FF820A
	MOVE.W	#$000C,D0
WAIT2:	NOP	
	DBF	D0,WAIT2
	MOVE.B	#2,$FF820A
	MOVEM.L	D0-D7,-(A7)
	MOVEM.L	PAL3,D0-D7
	MOVE.B	#2,$FF820A
	MOVEM.L	D0-D7,$FF8240
	MOVEM.L	(A7)+,D0-D7
	MOVE.W	(A7)+,SR
	MOVE.L	(A7)+,D0
	BCLR	#0,$FFFA0F
	RTE

* PLAY THE NEXT TUNE *

NEXTUNE:	ADD.W	#1,TUNE
	CMPI.W	#NUMBER_OF_TUNES+1,TUNE
	BNE	CHNGE
	MOVE.W	#0,TUNE
CHNGE:	MOVE.W	TUNE,D0
	JSR	MUZAK
	RTS

*******************
*  DATA STORAGE   *
*******************
FILE0:	DC.B	"LEAVE THIS",0
	EVEN
FOLD0:	DC.B	"LEAVE THIS",0
	EVEN
XSTORE:	DS.L	50
NUMBER:	DC.W	$0E
MSOFF:	DC.W	$1212
MSEON:	DC.W	$0808
FPTR	DS.L	1
SPTR	DS.L	1
TIMES	DS.W	1
TUNE:	DC.W	0
COM:	DC.L	0
ENV:	DC.L	0
FCNT:	DC.W	0
NWLT:	DC.W	0
FIL:	DS.L	1
FOL:	DS.L	1

* FONT PALLETTE, LAST 3 NUMBERS OF EACH BLOCK ARE RGB VALUES IN THE ORDER
* THEY APPEAR ON DEGAS ELITE PALLETTE, 16 NUMBERS.

PAL2:	DC.W	$0000,$0760,$0650,$0540,$0430,$0750,$0666,$0000 
	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000

* VU METER PALLETE
 
PAL3:	DC.W	$0000,$0053,$0000,$0700,$0000,$0000,$0000,$0000
	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
	EVEN

VUPICCY:	INCBIN	"A:\VUMTRPIC.BIN"
	DS.L	40
	EVEN

FONT:	INCBIN	"A:\NIGHTFON.BYT"
	EVEN


***********************************************
* YOU WILL NEED TO CHANGE THESE FILENAMES ETC *
***********************************************

* IF YOU NEED ANY MORE THAN 6 FILES, ADD THE FILE 7, FOLD 7 ETC NAMES HERE

FILETAB	DC.L	FILE1,FILE2,FILE3,FILE4,FILE5,FILE6
FOLDTAB	DC.L	FOLD1,FOLD2,FOLD3,FOLD4,FOLD5,FOLD6

* ADD FILENAMES HERE

FILE1:	DC.B	"GAME1.PRG",0
	EVEN
FILE2:	DC.B	"GAME2.PRG",0
	EVEN
FILE3:	DC.B	"GAME3.PRG",0
	EVEN
FILE4:	DC.B	"GAME4.PRG",0
	EVEN
FILE5:	DC.B	"A:\GAME5.PRG",0
	EVEN
FILE6:	DC.B	"A:\GAME6.PRG",0
	EVEN

* ADD FOLDER NAMES HERE

FOLD1:	DC.B	"A:\\",0
	EVEN
FOLD2:	DC.B	"A:\\",0
	EVEN
FOLD3:	DC.B	"A:\\",0
	EVEN
FOLD4:	DC.B	"A:\\",0
	EVEN
FOLD5:	DC.B	"A:\\",0
	EVEN
FOLD6:	DC.B	"A:\\",0
	EVEN


MUZAK:	INCBIN	"A:\TWIST.MUS"
	EVEN

DEGASPIC:	INCBIN	"A:\DEGASPIC.PI1"
	EVEN


SCRTEXT:	DC.B	"            "
	DC.B	" HELLO AND WELCOME TO DAMIANS SOFTWARE LIST"
	DC.B	" PRESS SPACE TO CHANGE MUSIC...                "
	DC.B	" ..."
	DC.B	" TO ENTER A NEW LINE JUST PRESS [ RETURN ] AFTER THE SPEACH MARKS AT THE END"
	DC.B	" WHICH WILL PUT THE CURSOR AT THE LEFTMOST EDGE OF THE PAGE"
	DC.B	" PRESS [ TAB ] TO MOVE IT TO THE DC.B POSITION AND"
	DC.B	" TYPE IN  DC.B    THEN PRESS [ TAB ] AGAIN AND TYPE"
	DC.B	" IN YOUR TEXT (ENCLOSED IN SPEACH MARKS) LIKE THIS EXAMPLE"
	DC.B	" TRY IT! MOVE THE CURSOR TO THE VERY END OF A LINE"
	DC.B	" AND PRESS [ RETURN ] EASY JUST LIKE ANY TEXT EDITOR"
	DC.B	" USE BACKSPACE  AND DELETE TO ERASE MISTOOKS (LEFT & RIGHT)"
	DC.B	" OF CURSOR,  ARROW KEYS MOVE AROUND TEXT, UPPER OR lower"
	dc.b	" case DOESN'T MATTER, THE PROGRAM CONVERTS IT ALL TO UPPER"
	DC.B	" SOMETIMES THE LOADING SCREEN CORRUPTS WHEN TEST RUN FROM MEMORY  "
	DC.B	" DON'T WORRY ABOUT THIS, JUST PRESS 1 TO ESCAPE BACK TO GENST"
	DC.B	" AND RE-RUN IT WITH ALT+ X IT WILL EVENTUALLY COME RIGHT"

	DC.B	" THIS IS BECAUSE WE ARE IN MEDIUM RES AND THE END PRODUCT"
	DC.B	" RUNS IN LOW RES, ALWAYS ASSEMBLE IT TO MEMORY FIRST"
	DC.B	" FOR A TEST RUN TO CHECK FOR SPELLING (YOU CANT LOAD A GAME"
	DC.B	" AT THAT STAGE) ASSEMBLE TO DISK WHEN EVERYTHING LOOKS OK"
	DC.B	"THEN DO A FULL LOAD TEST RUN.... FINNISHED PRG MUST BE IN "
	DC.B	" AUTO FOLDER - FOLLOWED BY DAT.PRG (NEEDED SOMETIMES)"
	DC.B	"NOT EVERYTHING WILL WORK . PRGS THAT USE GEM I.E "
	DC.B	" (NEED THE CURSOR) WILL HAVE TO BE SET UP ON DESKTOP"
	DC.B	" OR RUN FROM STARTGEM (P.D. UTILITY) BUT MOST GAMES"
	DC.B	" WILL BE O.K, ALSO TESTING A GAME FIRST BY DOUBLE CLICKING"
	DC.B	" IS NOT 100 % AS SOME THAT BOMB OUT BY THAT METHOD WILL"
	DC.B	" LOAD FROM THE MENU (ITS LIKE THEY RUN FROM AUTOFOLDERS)"
	DC.B	" SO SOME TRIAL AND ERROR IS INVOLVED, BUT HAVING SAID THAT"
	DC.B	" IT REALLY IS VERY VERY EASY TO USE ONCE YOU GET THE HANG"
	DC.B	" OF IT. STUDY THE DROP DOWN MENU'SIF YOU HAVEN'T USED GEN"
	DC.B	" OR SEE SEWERSOFT DOC DISK 8 OR 9 I THINK ? FOR FULL "
	DC.B	" INSTRUCTIONS ON DEVPAC"
	DC.B	" HAVE FUN!!!!!*****"      
	DC.B	255
	EVEN

