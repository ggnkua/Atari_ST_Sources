Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 1



1                        ;DSP-MOD-Player
2                        ;Coderight by bITmASTER of TCE
3                        ;V3.0
4      
5         000001         TEST      equ     1
6         000000         POSTEST   equ     0                                 ;us
es r3
7      
8         000040         start     equ     $40
9                        PlayBufSize
10        001000                   equ     2*2*1024
11                       HostBufSize
12        000400                   equ     1024
13     
14                       ;---------- X: Memory ---------------------------------
-----------------
15        000200         host_buf1 equ     512                               ;Ho
stbuffer
16        000600         host_buf2 equ     512+1*HostBufSize
17        000A00         host_buf3 equ     512+2*HostBufSize
18        000E00         host_buf4 equ     512+3*HostBufSize
19        001200         host_buf5 equ     512+4*HostBufSize
20        001600         host_buf6 equ     512+5*HostBufSize
21        001A00         host_buf7 equ     512+6*HostBufSize
22        001E00         host_buf8 equ     512+7*HostBufSize
23     
24                       ;---------- Y: Memory ---------------------------------
------------------
25     
26        001000         play_buf  equ     $1000
27     
28                       ;---------- X: und Y:Memory ---------------------------
------------------
29     
30        003000         hall_buf  equ     $3000
31     
32                       ;---------- Y:Memory ----------------------
33     
34        Y:0000                   org     y:0
35     
36        Y:0000         HallDelay dc      0
37        Y:0001         Tracks    dc      0
38        Y:0002         CurBufSize dc     0                                 ;ak
tuelle Buffergroesse
39     
40        Y:0003         buf_tab   dc      host_buf1,host_buf2,host_buf3,host_bu
f4
41        Y:0007                   dc      host_buf5,host_buf6,host_buf7,host_bu
f8
42     
43        Y:000B         buf_ptr   ds      8
44     
45                       ;---------- X:Memory ----------------------
46     
47        X:0000                   org     x:0
48     
49        X:0000         VolLeft   dc      0
50        X:0001         VolRight  dc      0
51        X:0002         Inc       dc      0
52        X:0003         parts     dc      0
53        X:0004         calc_ptr: dc      0
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 2



54        X:0005         flags:    dc      0
55        X:0006         exec:     dc      0
56        X:0007         debug:    dc      0
57     
58        X:0100                   org     x:$100
59        X:0100         register: ds      32
60     
61        X:0200                   org     x:$200
62        X:0200                   dc      0,2,0,0
63     
64                                 if      POSTEST
66                                 endif
67     
68                       ;---------- Peripherie --------------------
69     
70        00FFE0         PBC       equ     $ffe0
71        00FFE8         HCR       equ     $ffe8
72        00FFE9         HSR       equ     $ffe9
73        00FFEB         HRX       equ     $ffeb
74        00FFEB         HTX       equ     $ffeb
75     
76        00FFE1         PCC       equ     $ffe1
77        00FFE3         PCDDR     equ     $ffe3
78        00FFE5         PCD       equ     $ffe5
79        00FFEC         CRA       equ     $ffec
80        00FFED         CRB       equ     $ffed
81        00FFEE         SSISR     equ     $ffee
82        00FFEF         TX        equ     $ffef
83        00FFEF         RX        equ     $ffef
84        00FFFE         BCR       equ     $fffe
85        00FFFF         IPR       equ     $ffff
86     
87     
88                       WaitHoRX: macro
89   m                   _wrx:     jclr    #0,x:HSR,_wrx
90   m                             endm
91     
92        P:0000                   org     p:0
93        P:0000 0AF080            jmp     >start
                 000040
94     
95        P:0010                   org     p:$10
96     
97        P:0010 08DFEF            movep             y:(r7)+,x:TX            ;Fa
st-Interrupt
98     
99        P:0024                   org     p:$24
100       P:0024 0BF080            jsr     >loop
                 000062
101       P:0026 0BF080            jsr     >load_p56
                 00016A
102       P:0028 0BF080            jsr     >dsp_exec
                 000191
103    
104       P:0040                   org     p:$40
105    
106                      ;---------- Start -------------------------------------
----------------
107    
108       P:0040 08F4BE            movep             #0,x:BCR                ;no
 Waitstates
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 3



                 000000
109    
110                      ;---------- Host initialisieren -----------------------
----------------
111    
112       P:0042 08F4A8            movep             #4,x:HCR                ;en
able Host Command Int
                 000004
113       P:0044 08F4A0            movep             #1,x:PBC
                 000001
114    
115                      ;---------- Play-Buffer -------------------------------
--------------
116    
117       P:0046 05F427            movec             #PlayBufSize-1,m7       ;Bu
ffersize
                 000FFF
118    
119       P:0048 20001B            clr     b
120       P:0049 67F400            move              #play_buf,r7
                 001000
121       P:004B 44F400            move              #PlayBufSize,x0
                 001000
122       P:004D 06C420            rep     x0
123       P:004E 5F5F00            move                          b,y:(r7)+   ;Bu
ffer loeschen
124    
125       P:004F 0BF080            jsr     InitBufPtr
                 000163
126    
127                      ;---------- Hall-Buffer -------------------------------
----------------
128    
129                      ;                       move    #hall_buf,r5
130                      ;                       movec   #$1000-1,m5
131                      ;                       move    #$800,n5
132                      ;                       jsr             ClrHallBuf     
 ;versaut F030 DSP-OS
133    
134                      ;----------     SSI initialisieren --------------------
--------------------
135    
136       P:0051 08F4BF            movep             #$3800,x:IPR            ;In
t-Prioritaet
                 003800
137                                                                          ;SS
I = 2
138                                                                          ;HO
ST = 1
139    
140       P:0053 08F4AC            movep             #$4100,x:CRA            ;CR
A, $4120
                 004100
141       P:0055 08F4AD            movep             #$5800,x:CRB            ;CR
B, $5800 / $5a08
                 005800
142    
143       P:0057 08F4A1            movep             #$01f0,x:PCC            ;PC
C
                 0001F0
144       P:0059 08F4A3            movep             #$0008,x:PCDDR          ;SC
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 4



0 = Out
                 000008
145    
146       P:005B 00F0B8            andi    #$f0,mr                           ;In
terrupt an, No Scaling
147    
148    
149       P:005C 568600  tunix:    move              x:<exec,a
150       P:005D 200003            tst     a
151       P:005E 0EA05C            jeq     tunix
152       P:005F 219000            move              a1,r0
153       P:0060 000000            nop
154       P:0061 0AE080            jmp     (r0)
155    
156                      ;------------------------------------------------------
----------------
157                      ;---------- Start Main Loop ---------------------------
----------------
158    
159                      ;---------- Daten vom Host holen ----------------------
----------------
160    
161       P:0062 0BF080  loop      jsr     save_reg
                 000199
162    
163       P:0064 300000            move              #HallDelay,r0
164       P:0065 668400            move              x:calc_ptr,r6
165       P:0066 05F426            movec             #PlayBufSize-1,m6
                 000FFF
166    
167       P:0068 0A05A0            jset    #0,x:flags,loop_
                 000076
168    
169       P:006A 0AA980  FirstVBL: jclr    #0,x:HSR,FirstVBL                 ;wa
rte auf 1.VBL
                 00006A
170       P:006C 0858EB            movep             x:HRX,y:(r0)+           ;Ha
llDelay & Flags
171    
172       P:006D 0AAE82  wfs:      jclr    #2,x:SSISR,wfs                    ;Wa
it for transmit-frame-sync
                 00006D
173    
174       P:006F 66F400            move              #play_buf,r6            ;Ca
lc-Pointer setzen
                 001000
175       P:0071 67F400            move              #play_buf+984,r7        ;Pl
ay-Pointer setzen
                 0013D8
176       P:0073 0A0520            bset    #0,x:flags
177       P:0074 0AF080            jmp     loop1
                 000079
178    
179       P:0076 0AA980  loop_     jclr    #0,x:HSR,loop_                    ;wa
rte auf VBL
                 000076
180       P:0078 0858EB            movep             x:HRX,y:(r0)+           ;Ha
llDelay
181    
182       P:0079 0AA980  loop1     jclr    #0,x:HSR,loop1
                 000079
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 5



183       P:007B 0858EB            movep             x:HRX,y:(r0)+           ;Tr
acks
184    
185    
186                                if      TEST
187                      ;                       bclr    #3,x:PCD
188                                endif
189    
190                      ;---------- aktuelle Buffergroesse berechnen ----------
-------------------
191    
192       P:007C 22EF00            move              r7,b                    ;Pl
ay-Position
193       P:007D 22C400            move              r6,x0                   ;Ca
lc-Position
194       P:007E 44F44C            sub     x0,b      #PlayBufSize,x0         ;An
zahl der zu berechn. Words
                 001000
195       P:0080 0AF0A0            jcc     SizeOK                            ;r7
 > r6
                 000083
196       P:0082 200048            add     x0,b
197       P:0083 20002B  SizeOK    lsr     b                                 ;/2
, wegen Stereo
198       P:0084 5F6000            move                          b,y:(r0)    ;Cu
rBufSize merken
199    
200       P:0085 0AA981  _w        jclr    #<1,x:HSR,_w                      ;wa
rten bis HTX leer
                 000085
201       P:0087 08CF2B            movep             b,x:HTX                 ;Cu
rBufSize -> CPU
202    
203    
204    
205                      ;---------- Daten fr Tracks holen --------------------
-----------------
206    
207       P:0088 330000            move              #0,r3
208       P:0089 0AA980  ReadPart  jclr    #0,x:HSR,ReadPart
                 000089
209       P:008B 084E2B            movep             x:HRX,a
210       P:008C 200003            tst     a                                 ;ko
mmt noch ein Part ?
211       P:008D 0AF0A2            jne     ReadPartEnd                       ;ne
in
                 000099
212       P:008F 205B00            move              (r3)+                   ;in
c Partcounter
213    
214       P:0090 340B00            move              #buf_ptr,r4
215       P:0091 060140            do      y:<Tracks,ReadData
                 000096
216       P:0093 68E400            move                          y:(r4),r0   ;ge
t host_bufx
217       P:0094 0BF080            jsr     CPUtoDSP
                 00012A
218       P:0096 685C00            move                          r0,y:(r4)+  ;ho
st_buf-Position merken
219       P:0097 000000  ReadData  nop
220    
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 6



221       P:0098 0C0089            jmp     <ReadPart
222    
223                      ReadPartEnd
224       P:0099 630300            move              r3,x:<parts
225    
226                      ;---------- calculate Frequenz ------------------------
------------------
227    
228       P:009A 07F084            movem             p:intp_off,x0
                 0000D2
229       P:009C 0A00D1            jclr    #17,y:<HallDelay,NoInterpol
                 0000A0
230       P:009E 07F084            movem             p:intp_on,x0
                 0000D3
231       P:00A0 077084  NoInterpol movem            x0,p:Interpolate        ;Pa
tch
                 000113
232       P:00A2 077084            movem             x0,p:NoOverflow
                 000122
233    
234       P:00A4 07F084            movem             p:patch_a0,x0           ;se
t to zero
                 000126
235       P:00A6 077084            movem             x0,p:patch_a
                 000117
236       P:00A8 07F084            movem             p:patch_b0,x0
                 000128
237       P:00AA 077084            movem             x0,p:patch_b
                 00011A
238    
239                                if      POSTEST
241                                endif
242    
243       P:00AC 340300            move              #buf_tab,r4
244       P:00AD 22DE00            move              r6,n6                   ;n6
 = Calc-Position
245    
246       P:00AE 060140            do      y:<Tracks,CalcFreqs
                 0000B9
247       P:00B0 68DC00            move                          y:(r4)+,r0  ;ge
t Host-Buffer-Address
248       P:00B1 0D00D4            jsr     <CalcFreq
249    
250       P:00B2 07F084            movem             p:patch_a1,x0           ;re
ad Buffer and add
                 000127
251       P:00B4 077084            movem             x0,p:patch_a
                 000117
252       P:00B6 07F084            movem             p:patch_b1,x0
                 000129
253       P:00B8 077084            movem             x0,p:patch_b
                 00011A
254    
255                      CalcFreqs
256    
257                      ;---------- make Surround-Effect ----------------------
------------------
258                      ; r5 / m5 laden !!
259    
260       P:00BA 0A00D0            jclr    #16,y:<HallDelay,HallEnd          ;ke
in Hall
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 7



                 0000CA
261       P:00BC 7D8000            move                          y:<HallDelay,n5
 ;set HallDelay
262    
263       P:00BD 23D600            move              n6,r6                   ;Bu
ffer
264       P:00BE 264000            move              #0.5,y0                 ;Ha
ll-Faktor
265       P:00BF 788200            move                          y:<CurBufSize,n
0 ;Groesse des zu fuellenden Buffers
266    
267       P:00C0 06D800            do      n0,HallEnd
                 0000C9
268       P:00C2 5EDE00            move                          y:(r6)+,a   ;Or
ginal links
269       P:00C3 566D00            move              a,x:(r5+n5)             ;in
 Hallbuffer speichern
270       P:00C4 4FE500            move                          y:(r5),y1   ;Ha
ll rechts holen
271       P:00C5 5FD6B3            macr    y1,y0,a               y:(r6)-,b   ;ca
lc links, Orginal rechts
272       P:00C6 5F6D00            move                          b,y:(r5+n5) ;in
 Hallbuffer speichern
273       P:00C7 47DD00            move              x:(r5)+,y1              ;Ha
ll links holen
274       P:00C8 5E5EBB            macr    y1,y0,b               a,y:(r6)+   ;ca
lc rechts, links zurck
275       P:00C9 5F5E00            move                          b,y:(r6)+   ;re
chts zurck
276                      HallEnd
277                                if      TEST
278                      ;                       bset    #<3,x:PCD
279       P:00CA 08F0AB            movep             x:debug,x:HTX           ;DS
P fertig
                 000007
280                                endif
281    
282                                if      POSTEST
288                                endif
289    
290       P:00CC 660400            move              r6,x:calc_ptr
291       P:00CD 0BF080            jsr     InitBufPtr
                 000163
292       P:00CF 0BF080            jsr     load_reg
                 0001C0
293                      ;                       jmp             <loop
294       P:00D1 000004            rti
295    
296                      ;---------- End Main Loop -----------------------------
----------------
297                      ;------------------------------------------------------
----------------
298    
299       P:00D2 250071  intp_off: tfr     y1,a      #<0,x1
300       P:00D3 21E571  intp_on:  tfr     y1,a      b,x1
301    
302    
303    
304                      ;---------- calculate Frequenz ------------------------
----------------
305                      ;           alle Parts fr einen Track
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 8



306                      ;
307                      ;In:    r0: enthlt alle Parameter / Samples fr einen 
Track
308    
309       P:00D4 23D600  CalcFreq  move              n6,r6                   ;Ca
lc-Start setzen
310    
311       P:00D5 060300            do      x:<parts,CalcEndParts             ;re
peat for all parts
                 000123
312    
313       P:00D7 380800            move              #8,n0                   ;An
zahl Parameter
314       P:00D8 221500            move              r0,r5                   ;r5
 zeigt auf Parameter
315       P:00D9 204800            move              (r0)+n0                 ;sk
ip Parameter
316    
317       P:00DA 221100            move              r0,r1
318       P:00DB 71DD00            move              x:(r5)+,n1              ;si
ze non-repeat
319       P:00DC 000000            nop
320       P:00DD 204900            move              (r1)+n1                 ;r1
 zeigt auf Repeatstart
321       P:00DE 223200            move              r1,r2                   ;r2
 auch
322    
323       P:00DF 56DD00            move              x:(r5)+,a               ;si
ze repeated
324       P:00E0 21D900            move              a,n1
325       P:00E1 200003            tst     a
326       P:00E2 0AF0AA            jeq     NoRepeat                          ;ke
in Repeat
                 0000F2
327    
328       P:00E4 220F00            move              r0,b                    ;ad
r start samples
329       P:00E5 44E500            move              x:(r5),x0               ;wo
rksize
330       P:00E6 200048            add     x0,b                              ;be
stimme Bufferende
331    
332       P:00E7 204900            move              (r1)+n1                 ;r1
: RepEnd
333       P:00E8 222400            move              r1,x0
334       P:00E9 44F44C            sub     x0,b      #>1,x0                  ;Bu
fEnd-RepEnd
                 000001
335       P:00EB 20004C            sub     x0,b
336       P:00EC 0AF0AF            jle     NoRepeat
                 0000F2
337    
338                      ; flle den unpack-Buffer mit dem Repeatstck aus
339    
340       P:00EE 06CF00            do      b,MakeRep
                 0000F1
341       P:00F0 44DA00            move              x:(r2)+,x0              ;Re
pstart ->
342       P:00F1 445900            move              x0,x:(r1)+              ;Re
pend
343                      MakeRep:
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 9



344                      NoRepeat:
345    
346       P:00F2 221100            move              r0,r1                   ;r1
 uses for freqcalc
347    
348       P:00F3 56DD00            move              x:(r5)+,a               ;wo
rksize
349       P:00F4 21DA00            move              a,n2
350       P:00F5 44F400            move              #>5,x0                  ;ne
xt part start by
                 000005
351       P:00F7 22B040            add     x0,a      r5,r0                   ; +
 worksize + 8
352       P:00F8 219800            move              a1,n0
353       P:00F9 000000            nop
354       P:00FA 204800            move              (r0)+n0
355    
356                      ;---------- calculate Volume --------------------------
----------------
357                      ; Balance: $c10000...$000000...$3f0000
358                      ;          left      mid       right
359                      ;          -0.492    0         0.492
360                      ; BalanceLeft  = 0.5 - Balance
361                      ; BalanceRight = 0.5 + Balance
362    
363    
364       P:00FB 44DD00            move              x:(r5)+,x0              ;Sa
mpVol
365       P:00FC 45DD00            move              x:(r5)+,x1              ;Ma
inVol
366       P:00FD 47DDA0            mpy     x0,x1,a   x:(r5)+,y1              ;y1
 StereoPosition
367       P:00FE 21C600            move              a,y0                    ;y0
 gesamt-Volume
368       P:00FF 2E4000            move              #0.5,a
369       P:0100 200074            sub     y1,a
370       P:0101 21C400            move              a,x0                    ;le
ft
371       P:0102 2000D0            mpy     x0,y0,a                           ;Ca
lc Volume Left
372       P:0103 560000            move              a,x:<VolLeft
373       P:0104 2E4000            move              #0.5,a
374       P:0105 200070            add     y1,a
375       P:0106 21C400            move              a,x0                    ;ri
ght
376       P:0107 2000D0            mpy     x0,y0,a                           ;Ca
lc Volume Right
377       P:0108 560100            move              a,x:<VolRight
378    
379       P:0109 55DD00            move              x:(r5)+,b1              ;Sa
mpPer
380       P:010A 20002B            lsr     b                                 ;/2
381       P:010B 550200            move              b1,x:<Inc               ;IN
C-Wert
382    
383       P:010C 55DD00            move              x:(r5)+,b1              ;fr
actional Position
384       P:010D 20002B            lsr     b                                 ;fr
actional Position / 2
385    
386                      ; Achtung ! Delta-Sample kann >1 werden !!!! Fehler !!!
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 10



!
387    
388       P:010E 47D900            move              x:(r1)+,y1              ;Ba
sis-Sample
389       P:010F 56E100            move              x:(r1),a                ;n
chste Sample
390       P:0110 71F474            sub     y1,a      #>2,n1                  ;De
lta
                 000002
391       P:0112 21C400            move              a,x0                    ;x0
: Delta-Sample
392    
393                      Interpolate
394       P:0113 21E571            tfr     y1,a      b,x1                    ;Ba
sis-Sample | fractional Position oder 0
395    
396       P:0114 06DA00            do      n2,CalcEnd
                 000122
397    
398       P:0116 4680A3            macr    x0,x1,a   x:<VolLeft,y0           ;1s
tSample += deltaSample * fracPos
399       P:0117 16E600  patch_a:  move              a,x1        y:(r6),a    ;Sa
mple in x1 | read left track
400       P:0118 4681E2            mac     x1,y0,a   x:<VolRight,y0          ;ca
lc left | Volume right
401       P:0119 5E5E00            move                          a,y:(r6)+
402       P:011A 5EE600  patch_b:  move                          y:(r6),a    ;re
ad right track
403       P:011B 4582E2            mac     x1,y0,a   x:<Inc,x1               ;ca
lc right | INC-Wert
404       P:011C 5E5E68            add     x1,b                  a,y:(r6)+   ;po
s += inc-Wert | Sample right -> Buffer
405       P:011D 0E5122            jec     <NoOverflow                       ;Ex
tension clear
406       P:011E 47D900            move              x:(r1)+,y1              ;Ba
sis-Sample
407       P:011F 56E100            move              x:(r1),a                ;n
chste Sample
408       P:0120 258074            sub     y1,a      #<$80,x1                ;De
lta | x1 = $800000
409       P:0121 21C46B            eor     x1,b      a,x0                    ;b
ertrag loeschen | x0: DeltaSample
410    
411       P:0122 21E571  NoOverflow: tfr   y1,a      b,x1                    ;Ba
sis-Sample | fractional Position oder 0
412    
413       P:0123 000000  CalcEnd:  nop
414    
415                      CalcEndParts
416       P:0124 000000            nop
417    
418                                if      POSTEST
420                                endif
421       P:0125 00000C            rts
422    
423       P:0126 21C513  patch_a0: clr     a         a,x1
424       P:0127 16E600  patch_a1: move              a,x1        y:(r6),a
425       P:0128 200013  patch_b0: clr     a
426       P:0129 5EE600  patch_b1: move                          y:(r6),a
427    
428                      ;********** Move Daten von der CPU in den DSP *********
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 11



******************
429    
430                      ;Input: r0: Zeiger auf Hostbuffer
431    
432       P:012A 221100  CPUtoDSP: move              r0,r1
433       P:012B 205800            move              (r0)+
434       P:012C 205800            move              (r0)+
435       P:012D 060680            do      #6,ReadPara                       ;ge
t parameters
                 000131
436                                WaitHoRX
438       P:0131 0858AB            movep             x:HRX,x:(r0)+
439                      ReadPara:
440    
441       P:0132 221200            move              r0,r2                   ;ab
 r2 kommen die Samples
442    
443                                WaitHoRX
445       P:0135 084F2B            movep             x:HRX,b                 ;An
zahl Bytes
446       P:0136 21FA00            move              b,n2
447       P:0137 575900            move              b,x:(r1)+
448       P:0138 0BF080            jsr     ReadSamp                          ;ge
t non-repeated part
                 00014A
449    
450                                WaitHoRX
452       P:013C 084F2B            movep             x:HRX,b                 ;An
zahl Bytes
453       P:013D 575900            move              b,x:(r1)+
454       P:013E 204A00            move              (r2)+n2                 ;r1
 = end non-repeated part
455       P:013F 225000            move              r2,r0
456       P:0140 0BF080            jsr     ReadSamp                          ;re
peated part
                 00014A
457    
458       P:0142 56E100            move              x:(r1),a                ;Wo
rksize
459       P:0143 44F400            move              #>6,x0                  ;ne
xt part
                 000006
460       P:0145 223040            add     x0,a      r1,r0
461       P:0146 21D800            move              a,n0
462       P:0147 000000            nop
463       P:0148 204800            move              (r0)+n0
464    
465       P:0149 00000C            rts
466    
467                      ;---------- Samples von der CPU holen -----------------
-------------------
468    
469       P:014A 20000B  ReadSamp: tst     b
470       P:014B 0AF0AA            jeq     read_end                          ;is
t null
                 00015B
471       P:014D 44F42B            lsr     b         #>1,x0                  ;/2
+1 ( wegen words und 68030er dbra )
                 000001
472       P:014F 45F448            add     x0,b      #$8000,x1               ;Sh
ift-Faktor
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 12



                 008000
473    
474       P:0151 06CF00            do      b,read_end
                 00015A
475                                WaitHoRX                                  ;wa
rten bis Daten da
477       P:0155 08442B            movep             x:HRX,x0                ;Sa
mples lesen
478       P:0156 2000A0            mpy     x0,x1,a                           ;sh
ift right 8 Bits
479       P:0157 21C400            move              a,x0                    ;pr
epare x0 for 1s
480       P:0158 2104A0            mpy     x0,x1,a   a0,x0                   ;sh
ift right 8 Bits, store 2s in x0
481       P:0159 505800            move              a0,x:(r0)+              ;1.
 Sample-Byte
482       P:015A 445800            move              x0,x:(r0)+              ;2.
 Sample-Byte
483                      read_end:
484       P:015B 00000C            rts
485    
486    
487                      ;------------------------------------------------------
------------------------
488    
489       P:015C 20001B  ClrHallBuf clr    b
490       P:015D 70F400            move              #$1000,n0
                 001000
491       P:015F 06D800            do      n0,ClrHallBuf1
                 000161
492       P:0161 495D00            move              b,l:(r5)+               ;Bu
ffer loeschen
493                      ClrHallBuf1
494       P:0162 00000C            rts
495    
496                      ;---------- init buf_ptr ------------------------------
-----------------
497    
498       P:0163 300300  InitBufPtr move             #buf_tab,r0
499       P:0164 310B00            move              #buf_ptr,r1
500       P:0165 060880            do      #8,InitBufPtr1
                 000168
501       P:0167 4CD800            move                          y:(r0)+,x0
502       P:0168 4C5900            move                          x0,y:(r1)+
503                      InitBufPtr1
504       P:0169 00000C            rts
505    
506    
507                      ;------------------------------------------------------
-----------------
508                      ;load P56-Files, Ende mit -1 ( $ffffff )
509    
510    
511       P:016A 0BF080  load_p56: jsr     read_host                         ;Ad
dress Space
                 000195
512       P:016C 56F400            move              #-1,a
                 FFFFFF
513       P:016E 200045            cmp     x0,a                              ;= 
-1 ?
514       P:016F 0AF0AA            jeq     ld_p56end                         ;fe
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 13



rtig
                 000194
515    
516       P:0171 208500            move              x0,x1
517       P:0172 0BF080            jsr     read_host                         ;Lo
ad address
                 000195
518       P:0174 209000            move              x0,r0
519       P:0175 0BF080            jsr     read_host                         ;Bl
ock-Size
                 000195
520    
521       P:0177 06C400            do      x0,read_data
                 00018E
522       P:0179 0BF080            jsr     read_host                         ;Da
ten
                 000195
523       P:017B 200013            clr     a
524       P:017C 56F465            cmp     x1,a      #>1,a                   ;P-
Memory ?
                 000001
525       P:017E 0AF0A2            jne     no_p                              ;ne
in
                 000183
526       P:0180 075884            move              x0,p:(r0)+
527       P:0181 0AF080            jmp     do_end
                 00018E
528    
529       P:0183 56F465  no_p      cmp     x1,a      #>2,a                   ;X:
Memory ?
                 000002
530       P:0185 0AF0A2            jne     no_x                              ;ne
in
                 00018A
531       P:0187 445800            move              x0,x:(r0)+              ;wr
ite to X:Memory
532       P:0188 0AF080            jmp     do_end
                 00018E
533    
534       P:018A 200065  no_x      cmp     x1,a                              ;Y:
Memory ?
535       P:018B 0AF0A2            jne     do_end                            ;ne
in
                 00018E
536       P:018D 4C5800            move                          x0,y:(r0)+  ;wr
ite to Y:Memory
537       P:018E 000000  do_end:   nop
538       P:018F 000000  read_data: nop
539       P:0190 0C016A            jmp     load_p56
540    
541    
542       P:0191 0BF080  dsp_exec: jsr     read_host
                 000195
543       P:0193 440600            move              x0,x:exec
544       P:0194 000004  ld_p56end: rti
545    
546       P:0195 0AA980  read_host: jclr   #0,X:HSR,read_host
                 000195
547       P:0197 08442B            movep             x:HRX,x0
548       P:0198 00000C            rts
549    
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 14



550    
551                      ;---------- Register retten / laden -------------------
-----------------
552    
553       P:0199 607000  save_reg: move              r0,x:register
                 000100
554       P:019B 057020            move              m0,x:register+1
                 000101
555       P:019D 60F400            move              #register+2,r0
                 000102
556       P:019F 05F420            move              #$ffff,m0
                 00FFFF
557       P:01A1 000000            nop
558       P:01A2 615800            move              r1,x:(r0)+
559       P:01A3 055821            move              m1,x:(r0)+
560       P:01A4 625800            move              r2,x:(r0)+
561       P:01A5 055822            move              m2,x:(r0)+
562       P:01A6 635800            move              r3,x:(r0)+
563       P:01A7 055823            move              m3,x:(r0)+
564       P:01A8 645800            move              r4,x:(r0)+
565       P:01A9 055824            move              m4,x:(r0)+
566       P:01AA 655800            move              r5,x:(r0)+
567       P:01AB 055825            move              m5,x:(r0)+
568       P:01AC 665800            move              r6,x:(r0)+
569       P:01AD 055826            move              m6,x:(r0)+
570       P:01AE 705800            move              n0,x:(r0)+
571       P:01AF 715800            move              n1,x:(r0)+
572       P:01B0 725800            move              n2,x:(r0)+
573       P:01B1 735800            move              n3,x:(r0)+
574       P:01B2 745800            move              n4,x:(r0)+
575       P:01B3 755800            move              n5,x:(r0)+
576       P:01B4 765800            move              n6,x:(r0)+
577       P:01B5 505800            move              a0,x:(r0)+
578       P:01B6 545800            move              a1,x:(r0)+
579       P:01B7 525800            move              a2,x:(r0)+
580       P:01B8 515800            move              b0,x:(r0)+
581       P:01B9 555800            move              b1,x:(r0)+
582       P:01BA 535800            move              b2,x:(r0)+
583       P:01BB 445800            move              x0,x:(r0)+
584       P:01BC 455800            move              x1,x:(r0)+
585       P:01BD 465800            move              y0,x:(r0)+
586       P:01BE 475800            move              y1,x:(r0)+
587       P:01BF 00000C            rts
588    
589       P:01C0 60F400  load_reg: move              #register+2,r0
                 000102
590       P:01C2 05F420            move              #$ffff,m0
                 00FFFF
591       P:01C4 000000            nop
592       P:01C5 61D800            move              x:(r0)+,r1
593       P:01C6 05D821            move              x:(r0)+,m1
594       P:01C7 62D800            move              x:(r0)+,r2
595       P:01C8 05D822            move              x:(r0)+,m2
596       P:01C9 63D800            move              x:(r0)+,r3
597       P:01CA 05D823            move              x:(r0)+,m3
598       P:01CB 64D800            move              x:(r0)+,r4
599       P:01CC 05D824            move              x:(r0)+,m4
600       P:01CD 65D800            move              x:(r0)+,r5
601       P:01CE 05D826            move              x:(r0)+,m6
602       P:01CF 66D800            move              x:(r0)+,r6
603       P:01D0 05D826            move              x:(r0)+,m6
Motorola DSP56000 Assembler  Version 4.1.1   99-01-22  17:19:02  
C:\DSPASS\DSPMOD\MODPLAY.ASM  Page 15



604       P:01D1 70D800            move              x:(r0)+,n0
605       P:01D2 71D800            move              x:(r0)+,n1
606       P:01D3 72D800            move              x:(r0)+,n2
607       P:01D4 73D800            move              x:(r0)+,n3
608       P:01D5 74D800            move              x:(r0)+,n4
609       P:01D6 75D800            move              x:(r0)+,n5
610       P:01D7 76D800            move              x:(r0)+,n6
611       P:01D8 50D800            move              x:(r0)+,a0
612       P:01D9 54D800            move              x:(r0)+,a1
613       P:01DA 52D800            move              x:(r0)+,a2
614       P:01DB 51D800            move              x:(r0)+,b0
615       P:01DC 55D800            move              x:(r0)+,b1
616       P:01DD 53D800            move              x:(r0)+,b2
617       P:01DE 44D800            move              x:(r0)+,x0
618       P:01DF 45D800            move              x:(r0)+,x1
619       P:01E0 46D800            move              x:(r0)+,y0
620       P:01E1 47D800            move              x:(r0)+,y1
621       P:01E2 60F000            move              x:register,r0
                 000100
622       P:01E4 05F020            move              x:register+1,m0
                 000101
623       P:01E6 00000C            rts
624    
625    
626    
627    
628    
629    
630    
631                                if      TEST
632       P:01E7 0003F8  error     ori     #3,mr                             ;In
terrupt aus
633       P:01E8 000087            stop
634                                endif
635    
636       P:01E9 000000            nop
637    
638       P:01EA                   dc      "Help me!"
639       P:01ED                   dc      $624954
640       P:01EE                   dc      $6d4153
641       P:01EF                   dc      $544552
642       P:01F0                   dc      $202020
643       P:01F1                   dc      $6e6f20
644       P:01F2                   dc      $445350
645       P:01F3                   dc      $202d20
646       P:01F4                   dc      $6e6f20
647       P:01F5                   dc      $66756e
648       P:01F6                   dc      $202121
649    
650                                end

0    Errors
0    Warnings
