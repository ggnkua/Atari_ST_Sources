*********GOOD FAST POLY ROUT FOR FRONT OF FRACTAL**********************

NO_DRAW:	RTS

POLY_FRONT:
	MOVE.W	2(A0),D1
	MOVE.W	6(A0),D3
	CMP.W	D1,D3
	BGE	ROUT2
********THE SPECIAL POLY ROUT FOR WHEN RIGHT TOP POINT IS HIGHEST ***********
.ROUT1:
	MOVE.W 	14(A0),D4		LOWER Y COORDINATE
	SUB.W 	D3,D4			HEIGHT OF POLYGON
	BEQ.S	NO_DRAW

	MOVE.L 	LOGBASE(PC),A6		*GET SCREEN ADDRESS

	LSL.W	#5,D3
	ADD.W	D3,A6
	ADD.W	D3,D3
	ADD.W	D3,D3
	ADD.W	D3,A6

	LEA	POLYGON_IMG(PC),A4
	LEA	GRAD_TABLE+640(PC),A1
	MOVE.W	D4,D6
.LEFT_AGAIN:
	MOVE.L 	4(A0),D3
	MOVE.W 	2(A0),D5
	SUB.W 	D3,D5
	CLR.W 	D3
	MOVE.W 	D5,D0
	MOVE.W 	(A0),D1
	SUB.W 	4(A0),D1

	ADD.W	D0,D0
	MULS	(A1,D0.W),D1
	ADD.L	D1,D1

	SUB.W	D5,D4
	SUBQ.W	#1,D5
	MOVE.W	D5,D6
	SWAP	D1
	SWAP	D3
	MOVEQ	#0,D0
.LOOP1:
	ADD.L	D1,D3
	ADDX.W	D0,D3
	MOVE.W	D3,(A4)+
	DBF	D5,.LOOP1

	MOVE.W 	4(A0),D0			RIGHT HAND EDGE!

.DRAW_POLYGON:
	LEA	POLYGON_IMG(PC),A1
	MOVEQ	#15,D3
	MOVEQ	#-1,D7			SET COLOR (FRONT POLY DRAWER)

	MOVE.W	D0,A2
	AND.W	D3,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.L	.RIGHT_MASKS2(PC,D0.W),D5
	
.POLYFILL_LOOP:
	MOVE.W	(A1)+,D0
	MOVE.W	A2,D1

	MOVE.W 	D0,D2			*GET LEFT X TWICE
	SUB.W 	D0,D1			*GET RIGHT X
	AND.W 	D3,D0
	SUB.W	D0,D2
	LSR.W 	#1,D2			
	LEA	(A6,D2.W),A4		*GET SCREEN ADDRESS FOR LINE

	MOVE.W	D0,D2
	ADD.W	D2,D2
	MOVE.W	.LEFT_MASKS2(PC,D2.W),D2

	ADD.W 	D1,D0			*CHECK TO SEE IF ON MORE THAN
	CMP.W	D3,D0
	BGT 	.MULTI_CHUNK		*YEP IT IS

	AND.W 	D5,D2			

	OR.W    D2,(A4)+
	OR.W    D2,(A4)+
	OR.W    D2,(A4)+
	OR.W    D2,(A4)+

	LEA 	160(A6),A6
	DBF	D6,.POLYFILL_LOOP
	TST.W	D4
	BNE	RIGHT_BIAS_BUST_IN
	RTS

.RIGHT_MASKS2
	DC.L	%10000000000000001000000000000000
	DC.L	%11000000000000001100000000000000
	DC.L	%11100000000000001110000000000000
	DC.L	%11110000000000001111000000000000
	DC.L	%11111000000000001111100000000000
	DC.L	%11111100000000001111110000000000
	DC.L	%11111110000000001111111000000000
	DC.L	%11111111000000001111111100000000
	DC.L	%11111111100000001111111110000000
	DC.L	%11111111110000001111111111000000
	DC.L	%11111111111000001111111111100000
	DC.L	%11111111111100001111111111110000
	DC.L	%11111111111110001111111111111000
	DC.L	%11111111111111001111111111111100
	DC.L	%11111111111111101111111111111110
	DC.L	%11111111111111111111111111111111
.LEFT_MASKS2:
	DC.W	%1111111111111111
	DC.W	%0111111111111111
	DC.W	%0011111111111111
	DC.W	%0001111111111111
	DC.W	%0000111111111111
	DC.W	%0000011111111111
	DC.W	%0000001111111111
	DC.W	%0000000111111111
	DC.W	%0000000011111111
	DC.W	%0000000001111111
	DC.W	%0000000000111111
	DC.W	%0000000000011111
	DC.W	%0000000000001111
	DC.W	%0000000000000111
	DC.W	%0000000000000011
	DC.W	%0000000000000001

.POLYFILL_LOOP2:
	MOVE.W	(A1)+,D0
	MOVE.W	A2,D1
	MOVE.W 	D0,D2			*GET LEFT X TWICE
	SUB.W 	D0,D1			*GET RIGHT X
	AND.W 	D3,D0
	SUB.W	D0,D2
	LSR.W 	#1,D2			
	LEA	(A6,D2.W),A4		*GET SCREEN ADDRESS FOR LINE
	MOVE.W	D0,D2
	ADD.W	D2,D2
	ADD.W 	D1,D0			*CHECK TO SEE IF ON MORE THAN
	MOVE.W	.LEFT_MASKS(PC,D2.W),D2
.MULTI_CHUNK

	OR.W    D2,(A4)+
	OR.W    D2,(A4)+
	OR.W	D2,(A4)+
	OR.W    D2,(A4)+

	CMP.W	#$20,D0
	BLT.S	.FILL_TOWER
	MOVE.L 	D7,(A4)+
	MOVE.L 	D7,(A4)+		
.FILL_TOWER:
	OR.L    D5,(A4)+
	OR.L    D5,(A4)+
	LEA 	160(A6),A6
	DBF	D6,.POLYFILL_LOOP2
	TST.W	D4
	BNE	RIGHT_BIAS_BUST_IN
.ABORT_POLY:
	RTS

.LEFT_MASKS:
	DC.W	%1111111111111111
	DC.W	%0111111111111111
	DC.W	%0011111111111111
	DC.W	%0001111111111111
	DC.W	%0000111111111111
	DC.W	%0000011111111111
	DC.W	%0000001111111111
	DC.W	%0000000111111111
	DC.W	%0000000011111111
	DC.W	%0000000001111111
	DC.W	%0000000000111111
	DC.W	%0000000000011111
	DC.W	%0000000000001111
	DC.W	%0000000000000111
	DC.W	%0000000000000011
	DC.W	%0000000000000001

OUT_OF_ROUT:
	RTS

*****THE SPECIAL POLYGON ROUT FOR WHEN LEFT MOST POINT IS HIGHEST**********
ROUT2:
	MOVE.W 	14(A0),D4		MAX COORDINATE
	SUB.W 	D1,D4			ADDRESS OF TOP MOST POINT
	BEQ.S	OUT_OF_ROUT		ABORT_POLY

	CMP.W 	D3,D1			CHECK TO SEE IF BOTTOM IS FLAT
	BEQ 	ROUT3
	MOVE.L 	LOGBASE(PC),A6		*GET SCREEN ADDRESS

	LSL.W	#5,D1
	ADD.W	D1,A6
	ADD.W	D1,D1
	ADD.W	D1,D1
	ADD.W	D1,A6

	LEA	POLYGON_IMG+400(PC),A4
	MOVE.W	(A0),D2
	MOVE.W	D2,-400(A4)			STORE LEFTX COORDINATE
	AND.W	#$FFF0,D2

	LEA	GRAD_TABLE+640(PC),A1
	MOVE.W	D4,D6
	
	MOVE.L 	(A0),D3
	MOVE.W  4(A0),D1
	MOVE.W  6(A0),D5
	SUB.W   D3,D5
	CLR.W   D3
	MOVE.W  D5,D0
	SUB.W   (A0),D1

	ADD.W	D0,D0
	MULS	(A1,D0.W),D1
	ADD.L	D1,D1

	SUB.W	D5,D4
	SUBQ.W	#1,D5
	MOVE.W	D5,D6			*GET LENGTH OF TRIANGLE FRAGMENT
	SWAP	D1
	SWAP	D3
	SUB.W	D2,D3			*MINUS X1!!!
	SUB.W	#16,D3
	MOVEQ	#0,D0
.LOOP2:
	ADD.L	D1,D3
	ADDX.W	D0,D3
	MOVE.W	D3,(A4)+
	DBF	D5,.LOOP2
	BRA.S	.DRAW_POLYGON

.LEFT_MASKS:
	DC.L	%11111111111111111111111111111111
	DC.L	%01111111111111110111111111111111
	DC.L	%00111111111111110011111111111111
	DC.L	%00011111111111110001111111111111
	DC.L	%00001111111111110000111111111111
	DC.L	%00000111111111110000011111111111
	DC.L	%00000011111111110000001111111111
	DC.L	%00000001111111110000000111111111
	DC.L	%00000000111111110000000011111111
	DC.L	%00000000011111110000000001111111
	DC.L	%00000000001111110000000000111111
	DC.L	%00000000000111110000000000011111
	DC.L	%00000000000011110000000000001111
	DC.L	%00000000000001110000000000000111
	DC.L	%00000000000000110000000000000011
	DC.L	%00000000000000010000000000000001

	DC.W	%1000000000000000
	DC.W	%1100000000000000
	DC.W	%1110000000000000
	DC.W	%1111000000000000
	DC.W	%1111100000000000
	DC.W	%1111110000000000
	DC.W	%1111111000000000
	DC.W	%1111111100000000
	DC.W	%1111111110000000
	DC.W	%1111111111000000
	DC.W	%1111111111100000
	DC.W	%1111111111110000
	DC.W	%1111111111111000
	DC.W	%1111111111111100
	DC.W	%1111111111111110
	DC.W	%1111111111111111
.RIGHT_MASKSB

.DRAW_POLYGON
	LEA	POLYGON_IMG+400(PC),A2

	MOVEQ	#15,D3
	MOVEQ	#-1,D7			SET COLOR (FRONT POLY DRAWER)
	MOVE.W	#16,A3

	MOVE.W	-400(A2),D1		GET LEFT X
	MOVE.W	D1,D2
	AND.W	D3,D1
	SUB.W	D1,D2
	LSR.W	#1,D2	
	ADD.W	D2,A6	
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	.LEFT_MASKS(PC,D1.W),D5

.POLYFILL_LOOP:
	MOVE.W	(A2)+,D0		*GET X1 TO X2 DISTANCE
	BGE.S 	.MULTI_CHUNK		*YEP IT IS
	ADD.W	D0,D0
	MOVE.W	.RIGHT_MASKSB(PC,D0.W),D2			
	AND.W	D5,D2
	OR.W    D2,(A6)+
	OR.W    D2,(A6)+
	OR.W    D2,(A6)+
	OR.W    D2,(A6)+
	LEA 	152(A6),A6
	DBF	D6,.POLYFILL_LOOP
	TST.W	D4
	BNE	LEFT_BIAS_BUST_IN
	RTS

.POLYFILL_LOOP2:
	MOVE.W	(A2)+,D0		*GET X1 TO X2 DISTANCE
.MULTI_CHUNK
	OR.L    D5,(A6)+
	OR.L    D5,(A6)+
	SUB.W 	A3,D0
	BMI.S	.FILL_TOWER
	MOVE.L 	D7,(A6)+
	MOVE.L 	D7,(A6)+		
	ADD.W 	D0,D0
	MOVE.W 	.RIGHT_MASKS(PC,D0.W),D1 
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	LEA 	136(A6),A6
	DBF	D6,.POLYFILL_LOOP2
	TST.W	D4
	BNE	LEFT_BIAS_BUST_IN
	RTS
.FILL_TOWER:
	ADD.W 	D0,D0
	MOVE.W 	.RIGHT_MASKS(PC,D0.W),D1 
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	OR.W    D1,(A6)+
	LEA 	144(A6),A6
	DBF	D6,.POLYFILL_LOOP2
.ABORT_POLY:
	TST.W	D4
	BNE	LEFT_BIAS_BUST_IN
	RTS

	DC.W	%1000000000000000
	DC.W	%1100000000000000
	DC.W	%1110000000000000
	DC.W	%1111000000000000
	DC.W	%1111100000000000
	DC.W	%1111110000000000
	DC.W	%1111111000000000
	DC.W	%1111111100000000
	DC.W	%1111111110000000
	DC.W	%1111111111000000
	DC.W	%1111111111100000
	DC.W	%1111111111110000
	DC.W	%1111111111111000
	DC.W	%1111111111111100
	DC.W	%1111111111111110
	DC.W	%1111111111111111
.RIGHT_MASKS
	REPT	4
	DC.W	%1000000000000000
	DC.W	%1100000000000000
	DC.W	%1110000000000000
	DC.W	%1111000000000000
	DC.W	%1111100000000000
	DC.W	%1111110000000000
	DC.W	%1111111000000000
	DC.W	%1111111100000000
	DC.W	%1111111110000000
	DC.W	%1111111111000000
	DC.W	%1111111111100000
	DC.W	%1111111111110000
	DC.W	%1111111111111000
	DC.W	%1111111111111100
	DC.W	%1111111111111110
	DC.W	%1111111111111111
	ENDR

*****THE SPECIAL POLYGON ROUT FOR DRAWING A RECTANGLE **********
ROUT3:
	MOVE.L 	LOGBASE,A6		*GET SCREEN ADDRESS

	LSL.W	#5,D3
	ADD.W	D3,A6
	ADD.W	D3,D3
	ADD.W	D3,D3
	ADD.W	D3,A6

	MOVE.W	(A0),D2
	MOVE.W	4(A0),D3
	LEA	POLYGON_IMG(PC),A4
	MOVE.W	D2,(A4)				STORE X1 COORD
	AND.W	#$FFF0,D2
	SUB.W	D2,D3			
	MOVE.W	D3,400(A4)			AND STORE X1 TO X2 DIST
	BRA	DRAW_RECTANGLE

*************************************************
* ROUTINE FOR DRAWING BOTTOM RECTANGLE OF LEFT  *
* BIASED FRONT SHAPE                            *
*************************************************

LEFT_BIAS_BUST_IN:
	MOVE.W	POLYGON_IMG(PC),D2
	AND.W	#$FFF0,D2
	MOVE.W 	4(A0),D3
	SUB.W	D2,D3			*DIST FROM X1 TO X2
	MOVE.W	D3,POLYGON_IMG+400
	MOVE.L	D5,D2
	BRA	DRAW_RECTANGLE1

*************************************************
* ROUTINE FOR DRAWING BOTTOM RECTANGLE OF RIGHT *
* BIASED FRONT SHAPE                            *
*************************************************

RIGHT_BIAS_BUST_IN:
	LEA	POLYGON_IMG(PC),A4
	MOVE.W 	(A0),D2			
	MOVE.W	D2,(A4)			*STORE X1 COORD
	AND.W	#$FFF0,D2
	MOVE.W 	4(A0),D3
	SUB.W	D2,D3			DIST FROM X1 TO X2
	MOVE.W	D3,400(A4)
	BRA	DRAW_RECTANGLE

REC_LEFT_MASKS:
	DC.L	%11111111111111111111111111111111
	DC.L	%01111111111111110111111111111111
	DC.L	%00111111111111110011111111111111
	DC.L	%00011111111111110001111111111111
	DC.L	%00001111111111110000111111111111
	DC.L	%00000111111111110000011111111111
	DC.L	%00000011111111110000001111111111
	DC.L	%00000001111111110000000111111111
	DC.L	%00000000111111110000000011111111
	DC.L	%00000000011111110000000001111111
	DC.L	%00000000001111110000000000111111
	DC.L	%00000000000111110000000000011111
	DC.L	%00000000000011110000000000001111
	DC.L	%00000000000001110000000000000111
	DC.L	%00000000000000110000000000000011
	DC.L	%00000000000000010000000000000001
REC_RIGHT_MASKS
	DC.L	%10000000000000001000000000000000
	DC.L	%11000000000000001100000000000000
	DC.L	%11100000000000001110000000000000
	DC.L	%11110000000000001111000000000000
	DC.L	%11111000000000001111100000000000
	DC.L	%11111100000000001111110000000000
	DC.L	%11111110000000001111111000000000
	DC.L	%11111111000000001111111100000000
	DC.L	%11111111100000001111111110000000
	DC.L	%11111111110000001111111111000000
	DC.L	%11111111111000001111111111100000
	DC.L	%11111111111100001111111111110000
	DC.L	%11111111111110001111111111111000
	DC.L	%11111111111111001111111111111100
	DC.L	%11111111111111101111111111111110
	DC.L	%11111111111111111111111111111111

DRAW_RECTANGLE:
	MOVE.W	POLYGON_IMG(PC),D1
	MOVE.W	D1,D2
	AND.W	#15,D1
	SUB.W	D1,D2
	ADD.W	D1,D1
	ADD.W	D1,D1
	LSR.W	#1,D2	
	ADD.W	D2,A6	
	LEA	REC_LEFT_MASKS(PC),A2
	MOVE.L	(A2,D1.W),D2
	
DRAW_RECTANGLE1:
	MOVEQ	#15,D3
	MOVEQ	#-1,D7			SET COLOR (FRONT POLY DRAWER)
	MOVEQ	#16,D6			FOR A SUB

	MOVE.W	POLYGON_IMG+400(PC),D5			GET WIDTH
	MOVE.W	D5,D1
	AND.W	D3,D1
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	REC_RIGHT_MASKS(PC,D1.W),D1
	SUB.W	D6,D5
	BMI	ONLY_1_WORD
	CMP.W	D6,D5
	BGE	.WITH_MIDDLE
	ADD.W	D4,D4
	ADD.W	D4,D4
	MOVE.W	D4,D3
	ADD.W	D4,D4
	ADD.W	D3,D4
	NEG.W	D4
	LEA	.BOT_NORMAL(PC),A2
	JMP	(A2,D4.W)
.POLYFILL_LOOP:

	REPT	MAX_HEIGHT
	OR.L    D2,(A6)+		*MASK IN D3
	OR.L    D2,(A6)+

	OR.L    D1,(A6)+		*MASK IN D5
	OR.L    D1,(A6)+

	LEA 	144(A6),A6
	ENDR
.BOT_NORMAL:
.ABORT_POLY:
	RTS

.WITH_MIDDLE:
	LSL.W	#4,D4
	NEG.W	D4
	LEA	.MIDDLE_BOT(PC),A2
	JMP	(A2,D4.W)

	REPT	MAX_HEIGHT
	OR.L    D2,(A6)+		*MASK IN D3
	OR.L    D2,(A6)+

	MOVE.L 	D7,(A6)+
	MOVE.L 	D7,(A6)+		

	OR.L    D1,(A6)+		*MASK IN D5
	OR.L    D1,(A6)+

	LEA 	136(A6),A6
	ENDR
.MIDDLE_BOT:
	RTS

ONLY_1_WORD:
	AND.L	D1,D2
	LSL.W	#3,D4

	NEG.W	D4
	LEA	.ONE_WORD_BOT(PC),A2
	JMP	(A2,D4.W)

	REPT	MAX_HEIGHT
	OR.L    D2,(A6)+		*MASK IN D3
	OR.L    D2,(A6)+

	LEA 	152(A6),A6
	ENDR
.ONE_WORD_BOT:
ABORT_POLY:
	RTS
