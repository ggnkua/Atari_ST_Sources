***************************************************
* THE SCROLLING MASSACRE SCREEN FROM THE MINDBOMB *
***************************************************

FONT2		EQU $5F800
FONT1		EQU $4CC00
SCREEN1		EQU $70000
SCREEN2		EQU $78000

	CLR.L	-(SP)			SET SUPERVISOR
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADD.L	#6,SP

	MOVE.L D0,OLDSSP		PRESERVE STACK
	LEA MYSTACK,A7			PUT IN OUR STACK

	MOVEQ #$12,D0			TURN OFF MOUSE
	BSR IKBD
	MOVEQ #$1A,D0			AND JOYSTICKS
	BSR IKBD

	MOVEQ #2,D0			INITIALIZE MUSIC
	JSR MUSIC

	BSR SHIFTER			CREATE THE TWO COPYS OF THE BIG FONT
	BSR MAKESCROLL			MAKE THE LITTLE HORIZONTAL SCROLLS
	BSR MAKEVERTSCROLL		MAKE THE VERTICAL SCROLLS
	BSR DO_WAVES			MAKE UP THE WAVES FOR THE HORIZONTAL
	BSR SORT_SCROLL			ADJUST CHARACTER CODES TO SUIT OUR FONTS
	BSR HBLON			TURN ON INTERRUPTS

	LEA $78000,A0			CLEAR THE SCREENS

	MOVE.W #8000,D0
CLOOP	CLR.L (A0)+
	DBF D0,CLOOP

MAINLOOP
	MOVE.L #SCREEN2,LOGBASE		SET PHYSBASE AND LOGBASE
	MOVE.L #SCREEN1,D0
	LSR.W #8,D0
	MOVE.L 	D0,$FFFF8200.W

	CLR.W VBLIND			WAIT FOR VSYNC
VBLOOP	TST.W VBLIND
	BEQ.S VBLOOP

	BSR SCROLL1			DO BIG SCROLL
	BSR DO_SCROLLS			DO LITTLE SCROLLS
	BSR DO_VERT			DO VERTICALS
	BSR GOSCROLL			DO WAVERS

	CMP.B #$39,KBUFF		QUITTING?
	BEQ QUIT

	MOVE.L #SCREEN1,LOGBASE		SET PHYSBASE AND LOGBASE
	MOVE.L #SCREEN2,D0
	LSR.W #8,D0
	MOVE.L 	D0,$FFFF8200.W

	CLR.W VBLIND			WAIT FOR VSYNC
VBLOOP1	TST.W VBLIND
	BEQ.S VBLOOP1

	BSR SCROLL1			BIGSCROLL
	BSR DO_SCROLLS			LITTLE SCROLLS
	BSR DO_VERT			VERTICAL SCROLLS
	BSR GOSCROLL			WAVERS

	CMP.B #$39,KBUFF		QUITTING
	BEQ QUIT

	BRA MAINLOOP			LOOP AND DO IT AGAIN

**********************************
* STANDARD TIMER ROUTINES AND KEY VECTOR
**********************************

QUIT
	MOVE.W #$2700,SR		ITS ALL OVER SO EXIT
	JSR HBLOFF			TURN OFF OUR INTS
	LEA $FFFF8800.W,A1		CLEAR SOUNDCHIP
	MOVE.L #$8080000,(A1)
	MOVE.L #$9090000,(A1)
	MOVE.L #$A0A0000,(A1)
	MOVE.W #$2300,SR
	MOVEQ #$14,D0			TURN BACK ON MOUSE AND JOYS
	BSR IKBD
	MOVEQ #$8,D0
	BSR IKBD
	MOVE.L	#$07770000,$FFFF8240.W	MAKE SURE DESKTOP IS VISIBLE
	MOVE.L	#$0,$FFFF825C.W
	MOVE.L	OLDSSP,-(SP)		BACK TO USER MODE
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADD.L	#6,SP
	CLR.W	-(SP)			AND EXIT
	TRAP	#1

HBLON
	MOVE.L $FFFF8200.W,OLDPHYS
	MOVE.L $120.W,OLDTB		SAVE INTERRUPTS
	MOVE.L $70.W,OLDVBL
	MOVE.L $118.W,OLDKEY
	MOVE.B $FFFFFA07.W,OLD07
	MOVE.B $FFFFFA09.W,OLD09
	MOVE.B $FFFFFA0F.W,OLD0F
	MOVE.B $FFFFFA11.W,OLD11
	MOVE.B $FFFFFA1B.W,OLD1B
	AND.B #$DF,$FFFFFA09.W		THEN SET UP OURS
	AND.B #$FE,$FFFFFA07.W
	MOVE.L #TIMERB,$120.W
	MOVE.L #VBL,$70.W
	OR.B #1,$FFFFFA07.W
	OR.B #1,$FFFFFA13.W
	BCLR #6,$FFFFFA09.W			PUT IN OUR NEW 
	MOVE.L #KEYVECTOR,$118.W		KEY VECTOR
	BSET #6,$FFFFFA09.W
	RTS

HBLOFF	MOVE.W SR,-(SP)			TAKE OUT ALL OF OUR INTS
	MOVE.W #$2700,SR
	MOVE.B OLD07,$FFFFFA07.W
	MOVE.B OLD09,$FFFFFA09.W
	MOVE.B OLD0F,$FFFFFA0F.W
	MOVE.B OLD11,$FFFFFA11.W
	MOVE.B OLD1B,$FFFFFA1B.W
	MOVE.L OLDTB,$120.W
	MOVE.L OLDVBL,$70.W
	MOVE.L OLDKEY,$118.W
	MOVE.L OLDPHYS,$FFFF8200.W
	MOVE.W (SP)+,SR
	RTS


IKBD	LEA $FFFFFC00.W,A1		PASS DATA TO KEYBOARD PROCESSOR
IKLOOP	MOVE.B (A1),D1
	BTST #1,D1
	BEQ.S IKLOOP
	MOVE.B D0,2(A1)
	RTS

KEYVECTOR			*THE NEW KEY VECTOR
	MOVE.W D2,-(SP)
	MOVE.B $FFFFFC00.W,D2
	BTST #7,D2
	BEQ.S	VECTOREND
	MOVE.B $FFFFFC02.W,D2
	MOVE.B D2,KBUFF
	BCLR #6,$FFFFFA11.W
VECTOREND
	MOVE.W (SP)+,D2
	RTE

DEFPAL	DC.W $000,$700,$70,$70,$777,$700,$70,$70
	DC.W $770,$037,$70,$70,$770,$037,$70,$70

VBL	ST VBLIND			VSYNC!!
	MOVEM.L D0-D7/A0-A6,-(SP)	PRESERVE BULLSHIT
	CLR.B $FFFFFA1B.W		SET UP TIMER B
	MOVE.B #8,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #TIMERB,$120.W
	LEA DEFPAL(PC),A0		PUT IN PALETTE
	LEA $FFFF8240.W,A1
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	LEA COLTAB,A0			SET UP COLOR POINTERS FOR TIMERB
	MOVE.L A0,COLPOINT
	JSR MUSIC+8			DO MUSIC
	MOVEM.L (A7)+,D0-D7/A0-A6	RESTORE BULLSHIT
	RTE
TIMERB
	MOVE.W #$700,$FFFF8242.W	FOLLOWING TIMERBS CHANGE ALL THE
	MOVE.L #$06760700,$FFFF8248.W	NECESSARY COLOURS!
	MOVE.W #$770,$FFFF8250.W
	MOVE.W #$770,$FFFF8258.W
	MOVE.L #TIMERBA,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBA
	MOVE.W #$0666,$FFFF8248.W
	MOVE.L #TIMERBB,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBB
	MOVE.W #$0565,$FFFF8248.W
	MOVE.L #TIMERBC,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBC
	MOVE.W #$600,$FFFF8242.W
	MOVE.L #$05550600,$FFFF8248.W
	MOVE.W #$660,$FFFF8250.W
	MOVE.W #$660,$FFFF8258.W
	MOVE.L #TIMERBE,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBE
	MOVE.W #$500,$FFFF8242.W
	MOVE.L #$04540500,$FFFF8248.W
	MOVE.W #$550,$FFFF8250.W
	MOVE.W #$550,$FFFF8258.W
	MOVE.L #TIMERBF,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBF
	MOVE.W #$400,$FFFF8242.W
	MOVE.L #$04440400,$FFFF8248.W
	MOVE.W #$440,$FFFF8250.W
	MOVE.W #$440,$FFFF8258.W
	MOVE.L #TIMERBG,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBG
	MOVE.W #$300,$FFFF8242.W
	MOVE.L #$03430300,$FFFF8248.W
	MOVE.W #$330,$FFFF8250.W
	MOVE.W #$330,$FFFF8258.W
	MOVE.L #TIMERBH,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBH
	MOVE.W #$200,$FFFF8242.W
	MOVE.L #$03330200,$FFFF8248.W
	MOVE.W #$220,$FFFF8250.W
	MOVE.W #$220,$FFFF8258.W
	MOVE.L #TIMERBI,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBI
	MOVE.L #$00040015,$FFFF8244.W		
	MOVE.L #$00040015,$FFFF824C.W
	MOVE.L #$00470057,$FFFF8254.W
	MOVE.L #$00470057,$FFFF825C.W
	MOVE.W #$3,$FFFF8242.W
	MOVE.L #$02320003,$FFFF8248.W
	MOVE.W #$26,$FFFF8250.W
	MOVE.W #$26,$FFFF8258.W
	MOVE.L #TIMERBB1,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB1
	MOVE.W #$0222,$FFFF8248.W
	MOVE.L #TIMERBB2,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB2
	MOVE.W #$0121,$FFFF8248.W
	MOVE.L #TIMERBB3,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB3
	MOVE.W #$0111,$FFFF8248.W
	MOVE.L #TIMERBB4,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB4
	MOVE.W #$0121,$FFFF8248.W
	MOVE.L #TIMERBB5,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB5
	MOVE.W #$0222,$FFFF8248.W
	MOVE.L #TIMERBB6,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB6
	MOVE.W #$0232,$FFFF8248.W
	MOVE.L #TIMERBB7,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE
TIMERBB7
	MOVE.W #$0333,$FFFF8248.W
	MOVE.L #TIMERBJ,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE


TIMERBJ MOVE.L A0,-(A7)
	MOVE.L COLPOINT,A0
	MOVE.W (A0)+,$FFFF8242.W
	MOVE.L (A0)+,$FFFF8248.W
	MOVE.W (A0)+,$FFFF8250.W
	MOVE.W (A0)+,$FFFF8258.W
	MOVE.L (A0)+,$FFFF8244.W
	MOVE.L (A0)+,$FFFF824C.W
	MOVE.L (A0)+,$FFFF8254.W
	MOVE.L (A0)+,$FFFF825C.W
	MOVE.L A0,COLPOINT
	MOVE.L (A7)+,A0
	CLR.B $FFFFFA1B.W
	MOVE.B #8,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #TIMERBK,$120.W
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERBK MOVE.L A0,-(A7)
	MOVE.L COLPOINT,A0
	MOVE.W (A0)+,$FFFF8242.W
	MOVE.L (A0)+,$FFFF8248.W
	MOVE.W (A0)+,$FFFF8250.W
	MOVE.W (A0)+,$FFFF8258.W
	MOVE.L A0,COLPOINT
	MOVE.L (A7)+,A0
	BCLR #0,$FFFFFA0F.W
	RTE

VBLIND	DC.W 0
LOGBASE	DC.L 0
OLDSSP	DC.L 0				ALL THE VARIOUS
OLDPHYS	DC.L 0				THINGS TO BE SAVED
OLDVBL	DC.L 0
OLDTB	DC.L 0
OLDKEY	DC.L 0
KBUFF	DC.W 0
OLD07	DC.B 0
OLD09	DC.B 0
OLD0F	DC.B 0
OLD11	DC.B 0
OLD1B   DC.B 0
	even
	DS.L 100
MYSTACK
COLPOINT	DC.L COLTAB
COLTAB
	DC.W $200,$343,$200,$220,$220
	DC.W $70,$70,$70,$70,$70,$70,$70,$70
	DC.W $300,$444,$300,$330,$330
	DC.W $400,$454,$400,$440,$440
	DC.W $500,$555,$500,$550,$550
	DC.W $600,$565,$600,$660,$660
	DC.W $700,$666,$700,$770,$770
	DC.W $700,$676,$700,$770,$770
	DC.W $700,$777,$700,$770,$770
	DC.W $700,$777,$700,$770,$770
	DC.W $700,$777,$700,$770,$770
	DC.W $700,$777,$700,$770,$770

**********************************************
* THE VERTICAL SCROLLINES. THE ENTIRE SCROLL *
* IS PRE WORKED OUT (LISTED IN MEMORY) AND   *
* THEN IT IS JUST MOVED ONTO THE SCREEN FROM *
* A POINTER INTO THE SCROLLINE               *
**********************************************
DO_VERT
	MOVE.L LOGBASE,A0		GET SCREEN POS OF FIRST SCROLL
	LEA 14(A0),A0
	MOVE.L VERTPOINT,A1		FIN WHERE TO GET SCROLLDAT FROM
	LEA 4(A1),A1
	MOVE.L VERTEND,A2
	CMP.L A2,A1
	BLT.S GHJK
	LEA VERTSCROLL,A1
GHJK
	MOVE.L A1,VERTPOINT
ADDIT	SET 0
	REPT 71				*OK DO 71 LINES
	MOVE.L (A1)+,D7			OF 9 SCROLLERS
	MOVE.L D7,ADDIT(A0)
	MOVE.L D7,ADDIT+16(A0)
	MOVE.L D7,ADDIT+32(A0)
	MOVE.L D7,ADDIT+48(A0)
	MOVE.L D7,ADDIT+64(A0)
	MOVE.L D7,ADDIT+80(A0)
	MOVE.L D7,ADDIT+96(A0)
	MOVE.L D7,ADDIT+112(A0)
	MOVE.L D7,ADDIT+128(A0)
ADDIT	SET ADDIT+160
	ENDR
	LEA 65*160(A0),A0		THEN MISS 64 LINE OF SCROLL
	LEA 128(A1),A1
	REPT 63
	MOVE.L (A1)+,D7			AND OD 63 LINE S MORE OF SCROLLERS
	MOVE.L D7,ADDIT(A0)
	MOVE.L D7,ADDIT+16(A0)
	MOVE.L D7,ADDIT+32(A0)
	MOVE.L D7,ADDIT+48(A0)
	MOVE.L D7,ADDIT+64(A0)
	MOVE.L D7,ADDIT+80(A0)
	MOVE.L D7,ADDIT+96(A0)
	MOVE.L D7,ADDIT+112(A0)
	MOVE.L D7,ADDIT+128(A0)
ADDIT	SET ADDIT+160
	ENDR

	RTS

********************************************************
* OK THIS ROUTNE TAKES AN ORIGINAL WAVES (GFA CREATION *
* SOURCE ON THE DISK) AND CONVERTS IT INTO A SERIES OF *
* ADDRESSES POINTING AT WHERE THE SCROLL IS TO BE TAKEN*
* FROM.						       *
********************************************************

DO_WAVES
	LEA SCROLL,A0
	LEA WAVES,A2
	MOVE.W #2399,D7
WAVLOOP
	MOVEQ #0,D0
	MOVEQ #0,D1
	MOVE.W (A0)+,D0
	MOVE.L D0,D1
	AND.L #15,D0
	AND.L #$FFF0,D1
	MULU #2400,D0
	LSR.W #3,D1
	ADD.L D1,D0
	LEA SCROLLS,A1
	ADD.L D0,A1
	MOVE.L A1,(A2)+
	DBF D7,WAVLOOP
	RTS

**********************************************
* THIS BIT DISPLAYS THE LITTLE SCROLLINES.   *
* THE TOP OF THE SCREEN IS A MIRROR IMAGE OF *
* THE BOTTOM. SO EACH SCROLL( EXCEPT THE CENTRE*
* ONE ) CAN BE DRAW TWICE                    *
**********************************************

DO_SCROLLS
	LEA SCROLLPOINTS,A0
	MOVE.L LOGBASE,A3
	LEA 4(A3),A3
	MOVE.L #WAVESEND,D0
ADDIT	SET 0
ADDIT1	SET 30720

**********************************************************
* THE ROUTINE IS REPEATED 12 TIMES FOR THE 12 SCROLLINES *
**********************************************************
	REPT 12	
	MOVE.L (A0),A1
	CMP.L D0,A1
	DC.W $6D04
	LEA -9600(A1),A1
	MOVE.L (A1)+,A2
	LEA 4(A1),A1
	MOVE.L A1,(A0)+
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+160
ADDIT1	SET ADDIT1+160
	LEA 260(A2),A2
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT(A3)
	MOVE.W D1,ADDIT1(A3)
	MOVE.W D2,ADDIT+8(A3)
	MOVE.W D2,ADDIT1+8(A3)
	MOVE.W D3,ADDIT+16(A3)
	MOVE.W D3,ADDIT1+16(A3)
	MOVE.W D4,ADDIT+24(A3)
	MOVE.W D4,ADDIT1+24(A3)
	MOVE.W D5,ADDIT+32(A3)
	MOVE.W D5,ADDIT1+32(A3)
	MOVE.W D6,ADDIT+40(A3)
	MOVE.W D6,ADDIT1+40(A3)
	MOVE.W D7,ADDIT+48(A3)
	MOVE.W D7,ADDIT1+48(A3)
	MOVE.W A4,ADDIT+56(A3)
	MOVE.W A4,ADDIT1+56(A3)
	MOVE.W A5,ADDIT+64(A3)
	MOVE.W A5,ADDIT1+64(A3)
	MOVE.W A6,ADDIT+72(A3)
	MOVE.W A6,ADDIT1+72(A3)
	MOVEM.W (A2)+,D1-D7/A4-A6
	MOVE.W D1,ADDIT+80(A3)
	MOVE.W D1,ADDIT1+80(A3)
	MOVE.W D2,ADDIT+88(A3)
	MOVE.W D2,ADDIT1+88(A3)
	MOVE.W D3,ADDIT+96(A3)
	MOVE.W D3,ADDIT1+96(A3)
	MOVE.W D4,ADDIT+104(A3)
	MOVE.W D4,ADDIT1+104(A3)
	MOVE.W D5,ADDIT+112(A3)
	MOVE.W D5,ADDIT1+112(A3)
	MOVE.W D6,ADDIT+120(A3)
	MOVE.W D6,ADDIT1+120(A3)
	MOVE.W D7,ADDIT+128(A3)
	MOVE.W D7,ADDIT1+128(A3)
	MOVE.W A4,ADDIT+136(A3)
	MOVE.W A4,ADDIT1+136(A3)
	MOVE.W A5,ADDIT+144(A3)
	MOVE.W A5,ADDIT1+144(A3)
	MOVE.W A6,ADDIT+152(A3)
	MOVE.W A6,ADDIT1+152(A3)
ADDIT	SET ADDIT+320
ADDIT1	SET ADDIT1-2240
	ENDR

************************************************
* THIS ROUTINE DOES THE ONE CENTRAL SCROLLER   *
* THAT DOESN'T NEED TO BE COPIED TWICE         *
************************************************

	MOVE.L (A0),A1
	CMP.L D0,A1
	DC.W $6D04
	LEA -9600(A1),A1
	MOVE.L (A1)+,A2
	LEA 4(A1),A1
	MOVE.L A1,(A0)+

	REPT 7
	MOVE.W (A2)+,ADDIT(A3)
	MOVE.W (A2)+,ADDIT+8(A3)
	MOVE.W (A2)+,ADDIT+16(A3)
	MOVE.W (A2)+,ADDIT+24(A3)
	MOVE.W (A2)+,ADDIT+32(A3)
	MOVE.W (A2)+,ADDIT+40(A3)
	MOVE.W (A2)+,ADDIT+48(A3)
	MOVE.W (A2)+,ADDIT+56(A3)
	MOVE.W (A2)+,ADDIT+64(A3)
	MOVE.W (A2)+,ADDIT+72(A3)
	MOVE.W (A2)+,ADDIT+80(A3)
	MOVE.W (A2)+,ADDIT+88(A3)
	MOVE.W (A2)+,ADDIT+96(A3)
	MOVE.W (A2)+,ADDIT+104(A3)
	MOVE.W (A2)+,ADDIT+112(A3)
	MOVE.W (A2)+,ADDIT+120(A3)
	MOVE.W (A2)+,ADDIT+128(A3)
	MOVE.W (A2)+,ADDIT+136(A3)
	MOVE.W (A2)+,ADDIT+144(A3)
	MOVE.W (A2)+,ADDIT+152(A3)
ADDIT	SET ADDIT+160
	LEA 260(A2),A2
	ENDR

	RTS

SCROLLPOINTS
	DC.L WAVES
	DC.L WAVES+20
	DC.L WAVES+40
	DC.L WAVES+60
	DC.L WAVES+80
	DC.L WAVES+100
	DC.L WAVES+120
	DC.L WAVES+140
	DC.L WAVES+160
	DC.L WAVES+180
	DC.L WAVES+200
	DC.L WAVES+220
	DC.L WAVES+240

***********************************************
* ROUTINE TO CREATE VERTICAL SCROLLERS        *
***********************************************

MAKEVERTSCROLL
	LEA VERTSCROLL,A0
	LEA VERTSCROLLINE,A1
	LEA VERTSCROLLINE2,A6
	LEA DATA16,A2
LOOP
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	BRA.S ISOLATE
RFG	SUB.W 	#64,D0
	LSL.W #5,D0
	MOVE.L A2,A3
	ADD.L D0,A3

	MOVEQ #0,D0
	MOVE.B (A6)+,D0
	BRA ISOLATE2
RFG2	SUB.W 	#64,D0
	LSL.W #5,D0
	MOVE.L A2,A5
	ADD.L D0,A5
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	MOVE.W (A3)+,(A0)+
	MOVE.W (A5)+,(A0)+
	CLR.L (A0)+

	BRA.S LOOP
VEND
	LEA -400(A0),A0
	MOVE.L A0,VERTEND
	RTS

************************************
* LITTLE ROUTINE TO CORRECT CHAR   *
* DISCREPINACIES                   *
************************************

ISOLATE
	CMP.B #$FF,D0
	BEQ.S VEND
	CMP.B #$20,D0
	BNE.S NC
	MOVE.B #'@',D0
NC	CMP.B #'?',D0
	BNE.S NC1
	MOVE.B #']',D0
NC1	CMP.B #'.',D0
	BNE.S NC2
	MOVE.B #'\',D0
NC2	CMP.B #'!',D0
	BNE.S NC3
	MOVE.B #'[',D0
NC3
	BRA RFG

ISOLATE2
	CMP.B #$FF,D0
	BEQ.S VEND
	CMP.B #$20,D0
	BNE.S NCB
	MOVE.B #'@',D0
NCB	CMP.B #'?',D0
	BNE.S NC1B
	MOVE.B #']',D0
NC1B	CMP.B #'.',D0
	BNE.S NC2B
	MOVE.B #'\',D0
NC2B	CMP.B #'!',D0
	BNE.S NC3B
	MOVE.B #'[',D0
NC3B
	BRA RFG2

************************
* ROUTINE TO MAKE THE HORIZONTAL SCROLLINES
************************
	
MAKESCROLL
	LEA BUFFER,A0
	LEA SCROLLINE,A1
	LEA FONT,A2
	MOVE.W #299,D7
LOOP67
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	SUB.W 	#32,D0
	LSL.W #3,D0
	MOVE.L A2,A3
	ADD.L D0,A3
	MOVE.B (A3)+,(A0)
	MOVE.B (A3)+,300(A0)
	MOVE.B (A3)+,600(A0)
	MOVE.B (A3)+,900(A0)
	MOVE.B (A3)+,1200(A0)
	MOVE.B (A3)+,1500(A0)
	MOVE.B (A3)+,1800(A0)
	MOVE.B (A3)+,2100(A0)
	LEA 1(A0),A0
	DBF D7,LOOP67

	LEA SCROLLS,A1
	MOVE.W #15,D7
LOOP1
	LEA BUFFER,A0
	MOVE.W #599,D6
LOOP2	MOVE.L (A0)+,(A1)+
	DBF D6,LOOP2
	LEA BUFFER,A0
	MOVE.W #7,D6
LOOP3
	ROXL.W 298(A0)
	ROXL.W 296(A0)
	ROXL.W 294(A0)
	ROXL.W 292(A0)
	ROXL.W 290(A0)
	ROXL.W 288(A0)
	ROXL.W 286(A0)
	ROXL.W 284(A0)
	ROXL.W 282(A0)
	ROXL.W 280(A0)
	ROXL.W 278(A0)
	ROXL.W 276(A0)
	ROXL.W 274(A0)
	ROXL.W 272(A0)
	ROXL.W 270(A0)
	ROXL.W 268(A0)
	ROXL.W 266(A0)
	ROXL.W 264(A0)
	ROXL.W 262(A0)
	ROXL.W 260(A0)
	ROXL.W 258(A0)
	ROXL.W 256(A0)
	ROXL.W 254(A0)
	ROXL.W 252(A0)
	ROXL.W 250(A0)
	ROXL.W 248(A0)
	ROXL.W 246(A0)
	ROXL.W 244(A0)
	ROXL.W 242(A0)
	ROXL.W 240(A0)
	ROXL.W 238(A0)
	ROXL.W 236(A0)
	ROXL.W 234(A0)
	ROXL.W 232(A0)
	ROXL.W 230(A0)
	ROXL.W 228(A0)
	ROXL.W 226(A0)
	ROXL.W 224(A0)
	ROXL.W 222(A0)
	ROXL.W 220(A0)
	ROXL.W 218(A0)
	ROXL.W 216(A0)
	ROXL.W 214(A0)
	ROXL.W 212(A0)
	ROXL.W 210(A0)
	ROXL.W 208(A0)
	ROXL.W 206(A0)
	ROXL.W 204(A0)
	ROXL.W 202(A0)
	ROXL.W 200(A0)
	ROXL.W 198(A0)
	ROXL.W 196(A0)
	ROXL.W 194(A0)
	ROXL.W 192(A0)
	ROXL.W 190(A0)
	ROXL.W 188(A0)
	ROXL.W 186(A0)
	ROXL.W 184(A0)
	ROXL.W 182(A0)
	ROXL.W 180(A0)
	ROXL.W 178(A0)
	ROXL.W 176(A0)
	ROXL.W 174(A0)
	ROXL.W 172(A0)
	ROXL.W 170(A0)
	ROXL.W 168(A0)
	ROXL.W 166(A0)
	ROXL.W 164(A0)
	ROXL.W 162(A0)
	ROXL.W 160(A0)
	ROXL.W 158(A0)
	ROXL.W 156(A0)
	ROXL.W 154(A0)
	ROXL.W 152(A0)
	ROXL.W 150(A0)
	ROXL.W 148(A0)
	ROXL.W 146(A0)
	ROXL.W 144(A0)
	ROXL.W 142(A0)
	ROXL.W 140(A0)
	ROXL.W 138(A0)
	ROXL.W 136(A0)
	ROXL.W 134(A0)
	ROXL.W 132(A0)
	ROXL.W 130(A0)
	ROXL.W 128(A0)
	ROXL.W 126(A0)
	ROXL.W 124(A0)
	ROXL.W 122(A0)
	ROXL.W 120(A0)
	ROXL.W 118(A0)
	ROXL.W 116(A0)
	ROXL.W 114(A0)
	ROXL.W 112(A0)
	ROXL.W 110(A0)
	ROXL.W 108(A0)
	ROXL.W 106(A0)
	ROXL.W 104(A0)
	ROXL.W 102(A0)
	ROXL.W 100(A0)
	ROXL.W 98(A0)
	ROXL.W 96(A0)
	ROXL.W 94(A0)
	ROXL.W 92(A0)
	ROXL.W 90(A0)
	ROXL.W 88(A0)
	ROXL.W 86(A0)
	ROXL.W 84(A0)
	ROXL.W 82(A0)
	ROXL.W 80(A0)
	ROXL.W 78(A0)
	ROXL.W 76(A0)
	ROXL.W 74(A0)
	ROXL.W 72(A0)
	ROXL.W 70(A0)
	ROXL.W 68(A0)
	ROXL.W 66(A0)
	ROXL.W 64(A0)
	ROXL.W 62(A0)
	ROXL.W 60(A0)
	ROXL.W 58(A0)
	ROXL.W 56(A0)
	ROXL.W 54(A0)
	ROXL.W 52(A0)
	ROXL.W 50(A0)
	ROXL.W 48(A0)
	ROXL.W 46(A0)
	ROXL.W 44(A0)
	ROXL.W 42(A0)
	ROXL.W 40(A0)
	ROXL.W 38(A0)
	ROXL.W 36(A0)
	ROXL.W 34(A0)
	ROXL.W 32(A0)
	ROXL.W 30(A0)
	ROXL.W 28(A0)
	ROXL.W 26(A0)
	ROXL.W 24(A0)
	ROXL.W 22(A0)
	ROXL.W 20(A0)
	ROXL.W 18(A0)
	ROXL.W 16(A0)
	ROXL.W 14(A0)
	ROXL.W 12(A0)
	ROXL.W (A0)
	LEA 300(A0),A0
	DBF D6,LOOP3
	DBF D7,LOOP1
	REPT 25
	CLR.L (A1)+
	ENDR

	RTS

	RTS
	
****************SCROLLINE FOR THE LITTLE SCROLLS
SCROLLINE	DC.B "                                         "
		DC.B " YEAH! LOADSA SCROLLINES. CODED BY MANIKIN OF THE LOST BOYS FOR THE MINDBOMB DEMO, BECAUSE I WAS BORED AND HAD AN HOUR TO SPARE ONE SUNDAY AFTERNOON IN MANCHESTER!!! "
		DC.B " TLB HAVE THE FASTEST CODE ON THE ST.. WE ARE THE BEST, FORGET THE REST!!"
		DC.B "                                           "
		DC.B "                                           "
		DC.B "                                           "
		DC.B "                                           "
		DC.B "                                           "
		DC.B "                                           "

***************SCROLLINE FOR THE VERTICAL SCROLLERS
VERTSCROLLINE 	DC.B "                        "  
	DC.B " AHHH! YET MORE SCROLLS. I THINK IF YOU COUNT YOU WILL FIND THAT THERE ARE ABOUT FORTY LINES ON THIS SCREEN. NOT BAD HUH?  AND WHATS MORE SOME OF THEM ARE ALMOST READABLE!  WELL I DID SAY SOME THAT CERTAINLY DOES NOT MEAN ALL!"
	DC.B "!!                                     ",$FF
		EVEN	
**************AND FOR THE SECOND VERTICAL SCROLLER
VERTSCROLLINE2	DC.B "                        "
	DC.B " FOR ANYONE INTERESTED THIS SCREEN WAS COMPLETED AT THREE IN THE MORNING ON THE TENTH OF FEBRUARY NINETEEN NINETY WHILE UNDER THE INFLUENCE OF A HEAVY NIGHTS DRINKING. I HAVE ABSOLUTELY NO IDEA HOW I MANAGED TO GET THE CODE TO"
	DC.B "WORK!!!!                               ",$FF
	EVEN

VERTPOINT	DC.L VERTSCROLL
VERTEND		DC.L VERTSCROLL

*****************************************
* THE SCROLL ROUTINES FOR THE BIG 64*64 *
* 4 PLANE SCROLLER IN THE CENTRE        *
* USES BUFFERED SCROLL TECHNIQUES WHERE *
* EACH SCREEN IS 8 PIXELS DIFFERENT TO  *
* THE OTHER BY FLIPPING BETWEEN SCREENS *
* AND SCROLLING EACH BY 16 PIXELS EVERY *
* TIME THE ILLUSION OF MOVEMENT IS CREATED*
* IT ALSO FUCKING FAST!!                *
*****************************************

SCROLL1
	SUBQ.W #1,COUNT			
	BEQ NEWLET			GET NEW LETTER
	NOT.W IND			
	CMP.W #1,IND			ROUTINE 1 OR 2
	BNE SCROLL2

	LEA SCREEN1+12168-(4*160),A1		MOVE BY ONE WORD (16 PIXELS)

	BSR STANDARD

	MOVE.L CHARPOS1,A0
	LEA SCREEN1+12312-(4*160),A1
	BSR STANDARD2
	MOVE.L A0,CHARPOS1
	RTS

SCROLL2
	LEA SCREEN2+12168-(4*160),A1

	BSR STANDARD

	MOVE.L CHARPOS2,A0
	LEA SCREEN2+12312-(4*160),A1
	BSR STANDARD2
	MOVE.L A0,CHARPOS2
	RTS
STANDARD2
ADDIT	SET 0
	REPT 62
	MOVE.L (A0)+,ADDIT(A1)
	MOVE.L (A0)+,ADDIT+4(A1)
ADDIT	SET ADDIT+160
	ENDR
	LEA 16(A0),A0
	RTS

STANDARD
	REPT 62	
	MOVEM.L (A1)+,D0-D7/A2-A6
	MOVEM.L D0-D7/A2-A6,-60(A1)
	MOVEM.L (A1)+,D0-D7/A2-A6
	MOVEM.L D0-D7/A2-A6,-60(A1)
	MOVEM.L (A1)+,D0-D7/A2-A5
	MOVEM.L D0-D7/A2-A5,-56(A1)
	LEA 8(A1),A1
	ENDR
	RTS

NEWLET
	LEA SCREEN2+12168-(4*160),A1

	BSR STANDARD

	MOVE.L CHARPOS2,A0
	LEA SCREEN2+12312-(4*160),A1
	BSR STANDARD2
	MOVEQ #0,D7
	MOVEQ #0,D6
	MOVE.L BIGSCROLLPOINT,A0

NEWLETTER
	MOVE.B (A0)+,D7
	MOVE.L A0,BIGSCROLLPOINT
	CMPI.W #$FF,D7
	BEQ WRAP
	SUB.W #64,D7
	MOVE.B D7,D6
	LSL.W	#8,D6
	LSL.W 	#3,D6
	MULU #2560,D7
	LEA FONT2,A0
	LEA FONT1,A1
	ADD.L D6,A0
	ADD.L D7,A1
	MOVE.L A0,CHARPOS1

	LEA SCREEN2+12312-(4*160),A0
ADDIT	SET 0
	REPT 15
	MOVEM.L (A1)+,D0-D7
	OR.L D0,ADDIT(A0)
	OR.L D1,ADDIT+4(A0)
	OR.L D2,ADDIT+160(A0)
	OR.L D3,ADDIT+164(A0)
	OR.L D4,ADDIT+320(A0)
	OR.L D5,ADDIT+324(A0)
	OR.L D6,ADDIT+480(A0)
	OR.L D7,ADDIT+484(A0)
ADDIT	SET ADDIT+640
	ENDR
	MOVEM.L (A1)+,D0-D3
	OR.L D0,ADDIT(A0)
	OR.L D1,ADDIT+4(A0)
	OR.L D2,ADDIT+160(A0)
	OR.L D3,ADDIT+164(A0)
	LEA 16(A1),A1
	MOVE.L A1,CHARPOS2
	MOVE.W #8,COUNT
	NOT.W IND

	RTS

WRAP	LEA BIGREP,A0
	BRA NEWLETTER	

************************************
* ROUTINE TO PRE SHIFT THE FONT
***********************************

SHIFTER
	LEA BIGFONT,A0
	LEA FONT1,A1
	LEA FONT1,A2

	MOVE.W #29,D0
LOOPB
	MOVE.W #63,D1
LOOP3B
	MOVE.L A2,A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 8(A2),A2
	DBF D1,LOOP3B
	LEA 2048(A2),A2
	DBF D0,LOOPB

	LEA BIGFONT,A0
	LEA FONT2,A1
	MOVE.W #29,D0
LOOP2B
	MOVE.W #63,D1
LOOP5B
	MOVE.L (A0)+,(A1)
	MOVE.L (A0)+,4(A1)
	MOVE.L (A0)+,512(A1)
	MOVE.L (A0)+,516(A1)
	MOVE.L (A0)+,1024(A1)
	MOVE.L (A0)+,1028(A1)
	MOVE.L (A0)+,1536(A1)
	MOVE.L (A0)+,1540(A1)
	LEA 8(A1),A1
	DBF D1,LOOP5B
	LEA 1536(A1),A1
	DBF D0,LOOP2B
	RTS

SORT_SCROLL
	LEA BIGSCROLLINE,A0
SLOOP
	MOVE.B (A0),D0
	CMP.B #$FF,D0
	BEQ.S SEND
	CMP.B #' ',D0
	BNE.S SJ1
	MOVE.B #'@',D0
SJ1	CMP.B #'.',D0
	BNE.S SJ2
	MOVE.B #91,D0
SJ2	CMP.B #'!',D0
	BNE.S SJ3
	MOVE.B #92,D0
SJ3	CMP.B #'?',D0
	BNE.S SJ4
	MOVE.B #93,D0
SJ4	MOVE.B D0,(A0)+
	BRA	SLOOP
SEND	RTS

*********************************
* THE BYTE BENDER SCROLLINE
*********************************

GOSCROLL
		LEA TABPOS(PC),A2
		SUB.W #1,COUNT1
		BNE DOSCROLL
		move.w #16,COUNT1	new letter routine for the 
MOVLET		move.l 12(A2),a0		crystal scroll
		MOVEQ #0,D0
		MOVE.B (A0)+,D0		GET LETTER
		CMP.B #$FF,D0		TEST FOR END
		BEQ WRAPOFF
		CMP.B #$FE,D0
		BEQ WAVEFORM
		SUB.B #$20,D0		ADJUST FOR OUR FONT
		MOVE.L  A0,12(A2)
		LSL.W #6,D0
		LEA WIBFONT(PC),A0
		ADD.L D0,A0
		LEA DATA,A1
		MOVEM.L (A0)+,D0-D7	MOVE LETTERS TO STORE
		MOVEM.L D0-D7,(A1)
		MOVEM.L (A0)+,D0-D7
		MOVEM.L D0-D7,32(A1)

DOSCROLL
		MOVE.W #14,D0		16 LINES HIGH
		LEA DATA(PC),A1		GET LETTER STORE
		LEA SCROLLBUFFER(PC),A0	GET SCREEN POS
DOSY1           
		LSL.W  2(A1)
                ROXL.W  (A1)   ; the letters are 32 pixels wide
                ROXL.W  570(A0) ; scroll the screen
                ROXL.W  540(A0) 
                ROXL.W  510(A0)
                ROXL.W  480(A0)
                ROXL.W  450(A0)
                ROXL.W  420(A0)
                ROXL.W  390(A0)
                ROXL.W  360(A0)
                ROXL.W  330(A0)
                ROXL.W  300(A0)
                ROXL.W  270(A0)
                ROXL.W  240(A0)
                ROXL.W  210(A0)
                ROXL.W  180(A0)
                ROXL.W  150(A0)
                ROXL.W  120(A0)
                ROXL.W  90(A0)
                ROXL.W  60(A0)
                ROXL.W  30(A0)
                ROXL.W  (A0)
		LSL.W  2(A1)
                ROXL.W  (A1)   ; the letters are 32 pixels wide
                ROXL.W  570(A0) ; scroll the screen
                ROXL.W  540(A0) 
                ROXL.W  510(A0)
                ROXL.W  480(A0)
                ROXL.W  450(A0)
                ROXL.W  420(A0)
                ROXL.W  390(A0)
                ROXL.W  360(A0)
                ROXL.W  330(A0)
                ROXL.W  300(A0)
                ROXL.W  270(A0)
                ROXL.W  240(A0)
                ROXL.W  210(A0)
                ROXL.W  180(A0)
                ROXL.W  150(A0)
                ROXL.W  120(A0)
                ROXL.W  90(A0)
                ROXL.W  60(A0)
                ROXL.W  30(A0)
                ROXL.W  (A0)
		LEA 4(A1),A1
		LEA 2(A0),A0
                DBRA    D0,DOSY1 ; do the next screen line

***********************
* NIBBLING ROUTINE STARTS
***********************

		ADD.L #4,TABPOS		ADD ONE TO THE CURVE
		MOVE.L TABPOS,D0
		CMP.L CURTABEND,D0	END OF SINE TABLE
		BNE.S LETSGO		NO THEN GO 
		MOVE.L CURTAB,TABPOS	YES PUT IT BACK IN
LETSGO
		MOVE.L TABPOS,A0	GET TABLE
		LEA SCROLLBUFFER,A1	SCROLLBUFFER
		MOVE.L LOGBASE,A4	SCREEN ADDRESS
		LEA 2(A4),A4
			
		MOVEQ #19,D7		DO 20 WORDS
NIBLOOP1	
		MOVE.L A4,A2
		LEA 32000(A2),A3
		LEA 8(A4),A4
		MOVE.W (A0)+,D4		GET TABLE ADDITIONS
		ADD.W D4,A2		ADD THEM TO THE 4 REGS
		SUB.W D4,A3

		MOVEQ #0,D5

		MOVE.W D5,-480(A2)
		MOVE.W D5,-320(A2)
		MOVE.W D5,-160(A2)
		MOVE.W D5,(A2)

		MOVE.W D5,480(A3)
		MOVE.W D5,320(A3)
		MOVE.W D5,160(A3)
		MOVE.W D5,(A3)

		MOVE.W D5,2560(A2)
		MOVE.W D5,2720(A2)
		MOVE.W D5,2880(A2)
		MOVE.W D5,3040(A2)

		MOVE.W D5,-2560(A3)
		MOVE.W D5,-2720(A3)
		MOVE.W D5,-2880(A3)
		MOVE.W D5,-3040(A3)

******************************
* TO IMPROVE EFFICIENCY A LONG ROUTINE IS USED
******************************

ADDIT		SET 160
ADDIT1		SET -160
		REPT 15
		MOVE.W (A1),ADDIT(A2)
		MOVE.W (A1)+,ADDIT1(A3)
ADDIT		SET ADDIT+160
ADDIT1		SET ADDIT1-160
		ENDR

		DBF D7,NIBLOOP1
		RTS


WRAPOFF		MOVE.B #$20,D0		PUT SCROLL IN AGAIN
		LEA WIBREP(PC),A0
		MOVE.L A0,12(A2)
		BRA MOVLET
WAVEFORM
		MOVEQ #0,D0
		MOVE.B (A0)+,D0
HEG		MULU #640,D0
		LEA TABLE(PC),A1
		ADD.L D0,A1
		MOVE.L A1,4(A2)
		MOVE.L A1,(A2)
		LEA 320(A1),A1
		MOVE.L A1,8(A2)
		MOVE.L A0,12(A2)
		BRA MOVLET

*****************************
*	TABLE
***************************

TABPOS	DC.L TABLE
CURTAB	DC.L TABLE
CURTABEND	DC.L TABLEEND
STORE		DC.L WIBSCROLLINE

TABLE	
	INCBIN "\SCROLL\NIBBLE.DAT"		CONSISTS OF 160 WORDS *160
TABLEEND EQU TABLE+320
TABLE1	
	INCBIN "\SCROLL\NIBBLE1.DAT"		CONSISTS OF 160 WORDS *160
TABLEEND1 EQU TABLE1+320

DRAWPOS		DC.L $70000
COUNT1		DC.W 1
WIBSCROLLINE	DC.B $FE,0,"                                 OH YES, I NEARLY FORGOT THERE ARE ALSO THESE SCROLLINES!!"
WIBREP		DC.B  "          ",$FE,1,"THE ALL SINGING AND ALL DANCING           ",$FE,0," WIBBLY WOBBLY SCROLLINE           ",$FE,$1,"CODED BY MANIKIN ON 19-04-89.... (YEP ITS THAT OLD!!)           ",$FE,1
		DC.B "  I'M JUST GLAD THAT I FINALLY FOUND A USE FOR THIS BLOODY SCROLL, WAS WONDERING IF THERE WAS EVER GOING TO BE SPACE ON A SCREEN FOR IT.  FUNNY I'VE GOT A LOT OF ROUTINES LIKE THAT!!!!             "
		DC.B $FE,0," MAYBE I'LL WRITE AN ODDMENTS SCREEN ONE OF THESE DAYS. ANYWAY THATS ABOUT ALL I HAVE TO SAY FOR THIS SCROLLINE. BYE FOR NOW!!!                "
		DC.B $FF
	EVEN
WIBFONT	INCBIN "\SCROLL\lost16.fon"
DATA	DS.B 4096
SCROLLBUFFER	EQU	DATA+1000

***********************************
* THE SCROLLINE
**********************************

BIGSCROLLINE
	DC.B "                                                                                                                                                                                       "
	DC.B " AND FINALLY HERE IS THE FINALE FOR THIS SCREEN.  I THINK THAT THIS IS QUITE ENOUGH SCROLLS DO YOU NOT?  "
BIGREP	DC.B "  THIS IS THE DID YOU KNOW THAT? SCROLLINE.   IT CONTAINS STUPID FACTS AND FIGURES AND USELESS IN FORMATION ABOUT THIS MAMMOTH DEMO AND ITS PRODUCTION TEAM."
	DC.B " FIRST OF ALL THE LOST BOYS HAVE THREE MEMBERS.   MANIKIN.  WHO DOES ALL THE CODING AND SHIT.   SPAZ WHO DOES MOST OF THE GRAPHICS. AND SAMMY JOE WHO DOES MOST OF THE SELLING AND LETTER WRITING AND BASICALLY KEEPS THE LOST BOYS RUNNING!"
	DC.B "  THIS DISK IS THE BIGGEST DEMO OF ITS KIND EVER CODED ON THE ST.  THIS DISK CONTAINS OVER TWO MEGABYTES CODE AND SCREENS PACKED ONTO A STANDARD TEN SECTOR FORMATTED DISK.  ITS TAKEN US OVER ONE YEAR TO COMPLETE THIS ENORMOUS DEMO "
	DC.B "ALTHOUGH NONE OF THE ORIGINAL SCREENS WRITTEN ARE NOW INCLUDED ON THIS DISK. THE OLDEST SCREEN IS THE LANDSCAPE SCREEN AND THIS WAS FINISHED IN EARLY JUNE LAST YEAR. THE NEWEST SCREEN ON THIS DISK IS THE DIGISYNTH SCREEN AND THIS WAS "
	DC.B "CODED AT THE VERY END OF MARCH NINETEEN NINETY. THE PROGRAMMING TOOLS USED ON TO CREATE THIS DEMO WERE DEVPAC ST FOR ALL ASSEMBLER CODING. DEGAS ELITE FOR ALL GRAPHICS AND GFA BASIC FOR THE MANY AND VARIED WAVES AND DATA. "
	DC.B " ALL MEMBERS OF THE LOST BOYS ARE UNDER TWENTY YEARS OF AGE AND WE THINK THIS PROBALY MAKES US ONE OF THE YOUNGEST ACTIVE CREWS ON THE ST. MANIKIN IS NINETEEN AND CURRENTLY STUDYING SOFTWARE ENGINEERING AT MANCHESTER UNIVERSITY. "
	DC.B " SAMMY JOE IS SIXTEEN AND CURRENTLY DOING HIS OBERSTUFE AT THE GERMAN SCHOOL IN LONDON. SPAZ IS ALSO SIXTEEN AND CURRENTLY STUDYING FOR HIS GCSE EXAMS AT A SECONDARY SCHOOL IN TEDDINGTON. "
	DC.B " SAMMY JOE AND SPAZ LOVE HEAVY AND SPEED METAL MUSIC. MANIKIN HATES HEAVY METAL AND LIKES ALMOST EVERYTHING ELSE. WE ALL HATE ANYTHING PRODUCED BY STOCK AITKEN OR WATERMAN AND WOULD GLADLY PUKE ON JASON DONAVANS HEAD. "
	DC.B " WE HAVE ALSO HEARD THAT KYLIE MINOUGUE GIVES GOOD HEAD AND WOULD THEREFORE LIKE TO MEET HER! SNAKE HAS A BIG NOSE. CHUCK OF FOXX TOLD ME THIS AND SAID THAT I SHOULD TYPE IT SOMEWHERE!. ONE OF OUR BEST CONTACTS FOR HACKED SOFTWARE IS A "
	DC.B "PRIEST. NO KIDDING! REALLY!  IS THE COPYING OF SOFTWARE ILLEGAL IN THE EYES OF GOD WE ASK? COKE IS ONE OF THE NICEST DRINK IN THE WORLDS BUT NEWCASTLE BROWN ALE IS BETTER. SPAZ HAS LONG HAIR AND LOOKS LIKE A WOMBLE. SAMMY JOE IS GERMAN BUT"
	DC.B " ITS NOT HIS FAULT! MANIKIN HAS GREY HAIR AND HENCE IS KNOWN AS AN OLD MAN!  WE ONCE HAD A LETTER FROM A LITTLE KID WHO WANTED A SIGNED PHOTOGRAPH OF US. WE WERE IMPRESSED BY HIS GOOD TASTE BUT I DO NOT THINK THAT HE GOT THE PHOTO! "
	DC.B " THE STRANGEST PLACE THAT WE HAVE YET RECIEVED A LETTER FROM IS      WAIT FOR IT!          MOSCOW IN RUSSIA FROM A DENNIS ZUBCHOW!  YO GUY!     WE HAVE ALSO HAD LETTERS FROM EVERY COUNTRY IN EUROPE WITHOUT EXCEPTION AND THE FURTHEST LETTER"
	DC.B " WE HAVE HAD IS FROM SEWERSOFT IN AUSTRALIA AND I DOUBT IF WE WILL EVER BEAT THAT! RICHARD KARSMAKERS LOOKS EXTREMELY SILLY IN A SUIT!    STEFAN POSTHUMA IS TWENTY THREE YEARS OLD ON APRIL FOURTEENTH AND I AM GOING TO HIS BIRTHDAY PARTY IN"
	DC.B " UTRECHT.  THIS DEMO WAS FINALLY COMPLETED AT THALION SOFTWARE IN THE COMPANY OF TCB AND TEX.    I AM RUNNING OUT OF THINGS TO SAY VERY RAPIDLY!         WE ARE GOING TO SELL THE SOURCE LISTINGS FOR SCREENS IN THIS DEMO AGAIN.   MANY PEOPLE"
	DC.B " WILL PROBABLY THINK WE ARE EXTREMELY MAD TO DO THIS BUT WE ARE IN BAD NEED OF SOME MONEY AND IT WORKED REALLY WELL LAST TIME SO WE DECIDED TO DO IT AGAIN!  EACH INDIVIDUAL SCREEN WILL BE AVAILABLE FROM THE LOST BOYS AT THE "
	DC.B " BARGAIN PRICE OF TEN POUNDS STERLING EACH. UNFORTUNATELY WE WILL NOT BE SELLING THE SOURCE FOR THE MAIN MENU OR THE SOURCE FOR OUR DIGISYNTH AS THEY ARE TOO VALUABLE TO US. IF YOU WANT TO BUY A SCREEN THEN WRITE TO US AT THE ADDRESS "
	DC.B " ELSEWHERE IN THIS DEMO. CHEQUES SHOULD BE MADE PAYABLE TO DAVID MOSS. SPAZ.   IF ANYONE ELSE IS INTERESTED MANIKINS NAME IS TIM MOSS. WE ARE BROTHERS SURPRISINGLY ENOUGH AND SAMMY JOES NAME IS MICHAEL SHUESSLER. WE ARE VERY PROUD OF THIS"
	DC.B " DEMO AND HAVE PUT AN EXTREMELY LARGE AMOUNT OF HARD WORK INTO IT. IF YOU FEEL LIKE DONATING MONEY TO US THEN THIS WOULD BE VERY WELL RECIEVED AND YOU WOULD FOREVER HAVE OUR GRATITUDE.  AS YOU WILL ALREADY KNOW THIS DEMO IS NOT PUBLIC "
	DC.B "DOMAIN AND IS LICENSED TO BUDGIE UK. YOU MUST THEREFORE HAVE AN AGREEMENT WITH BUDGIE UK OR LOST BOYS BEFORE YOU SELL OUR DEMOS OR WE PROMISE THAT YOU WILL HAVE THE FULL WAIT OF  F.A.S.T. DOWN ON YOUR HEAD FOR DEFRAUDING US!! "
	DC.B " THIS THEN CONCLUDES OUR SCROLLTEXT FOR THIS SCREEN. LETS WRAP!!!!!!!!             "
	DC.B $FF

 	EVEN
	
BIGSCROLLPOINT	DC.L BIGSCROLLINE

***************************
* VARIABLES AND ALL SORTS OF OTHER SHIT
***************************

COUNT		DC.W 1
CHARPOS1	DC.L FONT2
CHARPOS2	DC.L FONT1
IND		DC.W 1

MUSIC	INCBIN "MAD_MUS.DAT"

***************************
* the font
****************************
SCROLL	INCBIN "SCROLL.DAT"
SCROLLEND
DATA16	INCBIN "16X16.DAT"
FONT INCBIN "8X8_FONT.DAT"
BUFFER
BIGFONT	INCBIN	"THE_BIG.FON"	
SCROLLS	EQU BUFFER+2400
WAVES	EQU SCROLLS+38600
WAVESEND	EQU WAVES+9600
VERTSCROLL	EQU WAVESEND

