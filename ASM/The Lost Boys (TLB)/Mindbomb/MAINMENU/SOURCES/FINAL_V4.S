NUMBLOCKS	EQU 	83		NUMBER OF GRAPHIC ITEMS FOR SCREEN MAP
SCREEN1		EQU 	$5EC00+$80000	SCREEN ADDRESSES
SCREEN2		EQU 	$55C00+$80000
SCREEN3		EQU	$4CC00+$80000
SCREEN4		EQU	$43C00+$80000

**********************************************
* NOTE:- IF YOU HAVE A HALF MEG REMOVE THE   *
* PLUS $80000 FROM THE ABOVE FIGURES.        *
* UNFORTUNATELY BECAUSE OF THE SIZE OF THE   *
* SCREEN IT WILL NOT WORK PROPERLY AS A      *
* PROGRAM FILE ON A HALF MEG ST. SOME OF THE *
* GRAPHICS WILL APPEAR CORRUPTED. IN MINDBOMB*
* IT WAS LOADED TO A MUCH LOWER ADDRESS AND  *
* HENCE WORKED PERFECTLY......               *
**********************************************

**********************************************
* THE MAIN MENU FOR THE LOST BOYS MIND BOMB  *
* STARTED ON 23RD NOVEMBER 1989.	     *
* MINI-GAME WITH GRAPHICS BY SPAZ AND USING  *
* THE SYNC SCROLLING TECHNIQUE.              *
**********************************************
* THIS SCREEN REALLY REQUIRES SOME INFORMATION TO HELP YOU ALONG THE WAY
* IT USES THE INFAMOUS SYNC SCROLLING TECHNIQUE TO ACHIEVE ITS SMOOTH
* MOVEMENT. VERTICAL SCROLLING IS DONE BY SIMPLY INCREMENTING THE SCREEN
* ADDRESS BY 160 BYTES PER LINE TO SCROLL. HORIZONTAL SCROLLING IS DONE
* BY A COMBINATION OF SCREEN FLIPPING AND CHANGING OF THE SCREEN ADDRESS
* THE COMPUTER HOLDS 4 SCREENS IN ITS MEMORY, EACH BEING 4 PIXELS 
* DIFFERERNT FROM THE PREVIOUS ONE. THUS BY FLIPPING BETWEEN SCREENS
* SMOOTH MOVEMENT CAN BE PRODUCED.
*
* SYNC SCROLLING ITS SELF: - THIS WORKS BY ENABLING THE USER TO CHANGE THE 
* PHYSICAL BASE OF THE SCREEN TO 8 BYTE INTERVALS (USUALLY ITS ONLY 
* POSSIBLE TO CHANGE IT TO 256 BYTE INTERVALS. 
* IT WORKS BY KNOWING THE FACT THAT EVRY NORMAL SCAN LINE IS 160 BYTES LONG
* A SCAN LINE WITH NO RIGHT BORDER IS (I THINK ) 192 BYTES LONG AND A LINE
* WITH NO LEFT OR RIGHT BORDER IS 230 BYTES LONG. BY PLAYING AROUND WITH ALL 
* THESE NUMBERS 160,192,230,256 IT IS POSSIBLE TO MAKE THE SCREEN START AT
* 8 BYTE INTERVALS ON A LATER SCAN LINE!!!

	CLR.L -(SP)			SET SUPERVISOR
	MOVE.W #$20,-(SP)
	TRAP #1
	ADD.L #6,SP
	MOVE.L D0,OLDSSP		PRESERVE STACK
	MOVE.L	$FFFF8200.W,OLDPHYS
	MOVE.W #$2700,SR
	MOVEM.L BLANK,D0-D7		BLACK OUT !
	MOVEM.L D0-D7,$FFFF8240.W
	LEA OURSTACK,A7			PUT IN OURS

	BSR SHIFTBLOCKS			PRESHIFT GRAPHICS
	JSR DO_SCROLLTEXT		ADJUST CHARACTER CODES TO SUIT FONT
	BSR PREMULTMAP			MULTIPLY UP MAP BLOCKS
	BSR SHIFTER			PRE SHIFT FONT
	BSR MAKEUPMEN			MAKE UP MASKS FOR THE MAN
	BSR DO_SPRITES
	MOVEQ #0,D0
	JSR L0069			INITIALIZE 'MUSIC
	MOVE.W #$2300,SR
	MOVE.W #$12,D0			TURN OFF MOUSE
	BSR IKBD
	MOVE.W #$1A,D0			JOYSTICK AUTO RETURN
	BSR IKBD	
	MOVE.L $118.W,OLDKEY		PRESERVE OLD KEY VECTOR

	BCLR #6,$FFFFFA09.W		PUT IN NEW KEYVECTOR
	MOVE.L #KEYVECTOR,$118
	BSET #6,$FFFFFA09.W

	MOVE.B $FFFFFA07.W,OLD07	PRESERVE INTERRUPT SHIT
	MOVE.B $FFFFFA09.W,OLD09
	MOVE.B $FFFFFA13.W,OLD13
	MOVE.B $FFFFFA21.W,OLD21
	MOVE.B $FFFFFA1B.W,OLD1B
	MOVE.L $70.W,OLDVBL
	MOVE.L $120.W,OLDTIMERB
	BCLR #5,$FFFFFA15.W		TURN OFF TIMER C

	CLR.B $FFFFFA07.W		HALT ALL INTERRUPTS
	CLR.B $FFFFFA09.W

	CLR.W PREPFIN
	MOVE.W L1D02,L1D10		GET SYNC POINT
	SUBQ.W #3,L1D10
	BCLR #6,$FFFFFA09.W		KEY BOARD AGAIN
	MOVE.L #KEYVECTOR,$118
	BSET #6,$FFFFFA09.W
	OR.B #1,$FFFFFA07.W		START UP TIMERB
	OR.B #1,$FFFFFA13.W
	MOVE.L #NEW4,$70.W		PUT IN NEW INTERRUPTS
	MOVE.L #SYNCBOTTOM,$120.W
	MOVE.W #$2300,SR	

****************************************************
* UNFORTUNATELY THERE ARE TWO DIFFERENT TYPES OF   *
* MMU IN THE ST WHICH LEADS TO THE OCCURENCE THAT  *
* THE TOP BORDER OPENS IN A DIFFERENT PLACE ON     *
* CERTAIN STS. THEREFORE A LITTLE CHECK PROGRAM IS *
* RU FIRST (SEE NEW4 AND SYNCBOTTOM) WHICH DECIDES *
* WHICH MMUS IS PRESENT AND ADJUSTS THE GRAPHICS   *
* ACCORDINGLY!!					   *
****************************************************

	CLR.W PREPFIN
KLOP	TST.W PREPFIN			FINISHED MMU CHECK?
	BEQ.S KLOP

	MOVE.W #$2700,SR
	BSR PREPARESCREENS		OK DRAW OUT THE SCREENS (4 COPIES)

	MOVE.L #DUMMYTB,$120.W		RIGHT START UP INTS
	MOVE.L #DUMMYVBL,$70.W
BYPASS2
	MOVE.W #$2300,SR	
	MOVE.L #SCREEN1,BASE		SET THE SCREEN ADDRESS
	MOVE.L BASEADD,D0
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	CLR.B VBLIND			VSYNC
LOP1B
	TST.B VBLIND
	BEQ LOP1B

	BSET #6,$FFFFFA09.W
	MOVE.L BASE,SCROLLBASE		ADDRESS FOR THE SCROLLINE TO BE DRAWN
	BSR MOVEMAN			OK DRAW THE MAN
	BSR DO_SCROLL			DRAW THE SCROLL
	BSR DO_LOGO			DRAW THE LOGO!
	
	MOVE.L ADDOFF,D0		SET THE SYNC SCROLL PHYSBASE
	ADD.L D0,BASE
	MOVE.L BASE,D0
	MOVE.L D0,D1
	ANDI.W #$FF00,D0
	ANDI.W #$FF,D1
	LSR.W #3,D1
	MOVE.W D1,L11CE4
	ADD.W D1,D1
	LEA TABLE2,A0
	MOVE.W 0(A0,D1.W),D1
	LSL.L #8,D1
	SUB.L D1,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W

	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
LOP3	
LOP1
	TST.B VBLIND			VSYNC
	BEQ LOP1
	CLR.B VBLIND

FLUSH	BTST.B #0,$FFFFFC00.W		FLUSH KEYBOARD
	BEQ.S OK_LETSGO
	MOVE.B $FFFFFC02.W,D0
	BRA.S FLUSH
OK_LETSGO
	BSET #6,$FFFFFA09.W
	MOVE.L BASE,SCROLLBASE
	BSR MOVEMAN			DRAW MAN
	BSR JOY				CHECK KEYS
	BSR DO_SCROLL			DO SCROLL
	BSR DO_LOGO			DO THE LOGO
	BSR DO_TLB			DO THE LOST BOYS SPRITES
	
	MOVE.L ADDOFF,D0		SET SYNC SCROLL PHYSBASE
	ADD.L D0,BASE
	MOVE.L BASE,D0
	MOVE.L D0,D1
	ANDI.W #$FF00,D0
	ANDI.W #$FF,D1
	LSR.W #3,D1
	MOVE.W D1,L11CE4
	ADD.W D1,D1
	LEA TABLE2,A0
	MOVE.W 0(A0,D1.W),D1
	LSL.L #8,D1
	SUB.L D1,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BRA LOP3	

IKBD	LEA $FFFFFC00.W,A1		WRITE TO KEYBOARD PROCESSOR
IL	MOVE.B (A1),D1
	BTST #1,D1
	BEQ.S IL
	MOVE.B D0,2(A1)
	RTS

*********************************
* THE CUSTOMIZED KEY VECTOR     *
*********************************		

KEYVECTOR
	MOVE.W D2,-(SP)			THE KEYVECTOR ROUTINE
	MOVE.B $FFFFFC00.W,D2
	BTST #7,D2
	BEQ.S	VECTOREND
	MOVE.B $FFFFFC02.W,D2
	MOVE.B D2,KBUFF
WACIAS	BCLR #6,$FFFFFA11.W
VECTOREND
	MOVE.W (SP)+,D2
	RTE

JOY
	BSR 	DOWNCHECK		IS MAN FALLING
	MOVEQ #0,D0
	MOVE.B KBUFF,D1			
	CMP.B #$4D,D1			CHECK KEY BOARD
	BEQ RIGHT
	CMP.B #$4B,D1
	BEQ LEFT
	CMP.B #$48,D1
	BEQ UP
	CMP.B #$50,D1
	BEQ DOWN
	CMP.B #$39,D1			GOING THROUGH A DOOR?
	BEQ CHECKDOOR
	CMP.B #$1C,D1
	BEQ CHECKDOOR
NO_MOVE
	MOVEQ #0,D0			IS HE CLIMBING?
	CMP.W #1,UPDOWNIND
	BEQ.S CLIMB
	MOVE.L #STANDWALK,DIRSTORE
	MOVE.L #STANDWALK,CURMAN
	RTS
CLIMB
	MOVE.L #CLIMBWALK,DIRSTORE
	MOVE.L #CLIMBWALK,CURMAN
	RTS

MOVE_OK	DC.W 0

**********************************************
* HERE FOLLOW THE 4 SCROLL ROUTINES          *
* SEE IF YOU CAN GUESS WHICH ONE DOES WHICH  *
* DIRECTION!!!  			     *
**********************************************
*EACH DIRECTION HAS FOR ROUTINES (THE MAN ONLY WALKS IN MULTIPLES OF
*16 PIXELS SO EACH MOVEMENT TAKES 4 FRAMES. EACH ROUTINE REDRAWS ITS
* APPRORIATE SCREEN AND THEN DISPLAYS ITS. AT THE END OF THE 4 FRAMES
* IT GOES BACK AND CHECKS THE KEYBOARD AGAIN.

RIGHT	
	CMP.L #RIGHTWALK,DIRSTORE
	BEQ.S RIGHTON
	MOVE.L #RIGHTWALK,DIRSTORE
	MOVE.L #RIGHTWALK,CURMAN
RIGHTON
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 166(A1),D0
	MOVE.W 326(A1),D1
	LEA RIGHTTABLE,A2
RL
	CMP.W #-1,(A2)			CHECKS TO SEE IF HE'S OK TO 
	BEQ.S CONTR			WALK IN THIS DIRECTION
	CMP.W (A2),D0			(WALL IN THE WAY ETC)
	BEQ RIGHTEND
	CMP.W (A2)+,D1
	BEQ RIGHTEND
	BRA.S RL
CONTR
	CLR.W UPDOWNIND			
	MOVE.L BASEADD,D0
	ADD.L #8,D0
	MOVE.L #SCREEN4,BASE
	ADD.L D0,BASE
	MOVE.L D0,BASEADD
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	ADD.L #2,MAPPOINTER
	BSR RIGHT4
	BSR WAITVBL
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN3,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR RIGHT8
	BSR WAITVBL
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN2,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR RIGHT12
	BSR WAITVBL
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN1,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR RIGHT0
	BSR WAITVBL1
RIGHTEND
	RTS


WAITVBL
	BSR DO_SCROLL			DO SCROLLINE
	BSR DO_LOGO			LOGO
	BSR DO_TLB			SPRITES

	MOVE.L ADDOFF,D0
	ADD.L D0,BASE

	MOVE.L BASE,D0
	MOVE.L D0,D1
	ANDI.W #$FF00,D0
	ANDI.W #$FF,D1
	LSR.W #3,D1
	MOVE.W D1,L11CE4
	ADD.W D1,D1
	LEA TABLE2,A0
	MOVE.W 0(A0,D1.W),D1
	LSL.L #8,D1
	SUB.L D1,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	
WLOP1
	TST.B VBLIND
	BEQ WLOP1
	CLR.B VBLIND

FLUSH1	BTST.B #0,$FFFFFC00.W
	BEQ.S OK_LETSGO1
	MOVE.B $FFFFFC02.W,D0
	BRA.S FLUSH1
OK_LETSGO1
	BSET #6,$FFFFFA09.W

	MOVE.L BASE,SCROLLBASE
	BSR MOVEMAN

	RTS

WAITVBL1
	MOVE.L ADDOFF,D0
	ADD.L D0,BASE
	MOVE.L BASE,D0
	MOVE.L D0,D1
	ANDI.W #$FF00,D0
	ANDI.W #$FF,D1
	LSR.W #3,D1
	MOVE.W D1,L11CE4
	ADD.W D1,D1
	LEA TABLE2,A0
	MOVE.W 0(A0,D1.W),D1
	LSL.L #8,D1
	SUB.L D1,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE

	RTS

**************************************************
* WHEN A DOOR HAS BEEN SELECTED THIS IS WHERE THE*
* SCREEN GOES TO CHECK OUT THE DOOR NUMBER BEFORE*
* EXITING.				         *
**************************************************

CHECKDOOR
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 162(A1),D0
	LEA DOORTABLE,A2
DOORL
	CMP.W #-1,(A2)
	BEQ DOOREND
	CMP.W (A2)+,D0
	BEQ CONTDOOR
	BRA.S DOORL
CONTDOOR
	BSR GETDOOR
	MOVE.W #$2700,SR
	MOVE.B OLD07,$FFFFFA07.W	RETURN INTERRUPTS
	MOVE.B OLD09,$FFFFFA09.W
	MOVE.B OLD13,$FFFFFA13.W
	MOVE.B OLD21,$FFFFFA21.W
	MOVE.B OLD1B,$FFFFFA1B.W
	BSET #6,$FFFFFA15.W
	BSET #5,$FFFFFA15.W
	MOVE.L OLDVBL,$70.W
	MOVE.L OLDTIMERB,$120.W
	MOVE.L OLDKEY,$118.W
	MOVE.W #$2300,SR
	LEA $FFFF8800.W,A0
	MOVE.L #$8080000,(A0)
	MOVE.L #$9090000,(A0)
	MOVE.L #$A0A0000,(A0)
	MOVE.L	#$07770000,$FFFF8240.W
	MOVE.L	OLDPHYS(PC),$FFFF8200.W
	MOVE.W #$16,D0			TURN ON MOUSE
	BSR IKBD
	MOVE.W #$8,D0			JOYSTICK 
	BSR IKBD
	MOVEQ #0,D0
	MOVE.W SCNUM,D0
	MOVE.L	OLDSSP,-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADD.L	#6,SP
	CLR.W	-(SP)
	TRAP	#1

DOOREND	RTS

OLDPHYS	DC.L	0

GETDOOR
	MOVE.L MAPPOINTER,A1		FIND OUT WHICH DOOR ITS
	LEA 820(A1),A1			DOES THIS BY CHECKING
	CMP.L #SCREEN1B,A1		MAP POINTER REFERENCE
	BEQ SC1
	CMP.L #SCREEN2B,A1
	BEQ SC2
	CMP.L #SCREEN3B,A1
	BEQ SC3
	CMP.L #SCREEN4B,A1
	BEQ SC4
	CMP.L #SCREEN5,A1
	BEQ SC5
	CMP.L #SCREEN6,A1
	BEQ SC6
	CMP.L #SCREEN7,A1
	BEQ SC7
	CMP.L #SCREEN8,A1
	BEQ SC8
	CMP.L #SCREEN9,A1
	BEQ SC9
	CMP.L #SCREEN10,A1
	BEQ SC10
	CMP.L #SCREEN11,A1
	BEQ SC11
	CMP.L #SCREEN12,A1
	BEQ SC12
	CMP.L #SCRN13,A1
	BEQ SC13
	CMP.L #SCRN14,A1
	BEQ SC14
	CMP.L #SCRN15,A1
	BEQ SC15
	CMP.L #SCRN16,A1
	BEQ SC16
	CMP.L #SCRN17,A1
	BEQ SC17
	CMP.L #SCRN18,A1
	BRA SC18

SCNUM	DC.W 0

SC1	MOVE.W #1,SCNUM
	RTS
SC2	MOVE.W #2,SCNUM
	RTS
SC3	MOVE.W #3,SCNUM
	RTS
SC4	MOVE.W #4,SCNUM
	RTS
SC5	MOVE.W #5,SCNUM
	RTS
SC6	MOVE.W #6,SCNUM
	RTS
SC7	MOVE.W #7,SCNUM
	RTS
SC8	MOVE.W #8,SCNUM
	RTS
SC9	MOVE.W #9,SCNUM
	RTS
SC10	MOVE.W #10,SCNUM
	RTS
SC11	MOVE.W #11,SCNUM
	RTS
SC12	MOVE.W #12,SCNUM
	RTS
SC13	MOVE.W #13,SCNUM
	RTS
SC14	MOVE.W #14,SCNUM
	RTS
SC15	MOVE.W #15,SCNUM
	RTS
SC16	MOVE.W #16,SCNUM
	RTS
SC17	MOVE.W #17,SCNUM
	RTS
SC18	MOVE.W #18,SCNUM
	RTS

OLD07	DC.B 0
OLD09	DC.B 0
OLD21	DC.B 0
OLD1B	DC.B 0
OLD13	DC.W 0
OLDVBL	DC.L 0
OLDTIMERB	DC.L 0
OLDHBL	DC.L 0
OLDKEY	DC.L 0

*******************MOVEMENT ROUTINE CONTINUES HERE

RIGHT4
	MOVE.L BASE,A0
	LEA 5272(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA 38(A1),A1
	LEA GRAPHIX12,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
RIGHT4LOOP
	MOVE.L A2,A4
	MOVE.W (A1),D1
	ADD.L D1,A4
	BSR RIGHTDEF
	DBF D0,RIGHT4LOOP
	RTS

RIGHTDEF
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT+8(A4),ADDIT1(A0)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	MOVE.L A2,A4
	MOVE.W 2(A1),D1
	ADD.L D1,A4
ADDIT1	SET 0
	REPT 16
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	LEA 8(A4),A4
	OR.L D2,ADDIT1(A0)
	OR.L D3,ADDIT1+4(A0)
ADDIT1	SET ADDIT1+160
	ENDR
	LEA 2560(A0),A0
	LEA 160(A1),A1
	RTS

RIGHT8
	MOVE.L BASE,A0
	LEA 5272(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA 38(A1),A1
	LEA GRAPHIX8,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
RIGHT8LOOP
	MOVE.L A2,A4
	MOVE.W (A1),D1
	ADD.L D1,A4
	BSR RIGHTDEF
	DBF D0,RIGHT8LOOP
	RTS

RIGHT12
	MOVE.L BASE,A0
	LEA 5272(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA 38(A1),A1
	LEA GRAPHIX4,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
RIGHT12LOOP
	MOVE.L A2,A4
	MOVE.W (A1),D1
	ADD.L D1,A4
	BSR RIGHTDEF
	DBF D0,RIGHT12LOOP
	RTS

RIGHT0
	MOVE.L BASE,A0
	LEA 5272(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA 40(A1),A1
	LEA GRAPHIX0,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
RIGHT0LOOP
	MOVE.L A2,A4
	MOVE.W (A1),D1
	ADD.L D1,A4
	BSR ALLDEF
	DBF D0,RIGHT0LOOP
	RTS

****************NOW SAME BUT FOR MOVING LEFT

LEFT
	CMP.L #LEFTWALK,DIRSTORE
	BEQ.S LEFTTON
	MOVE.L #LEFTWALK,DIRSTORE
	MOVE.L #LEFTWALK,CURMAN
LEFTTON
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 160(A1),D0
	MOVE.W 320(A1),D1
	LEA LEFTTABLE,A2
LL
	CMP.W #-1,(A2)
	BEQ.S CONTL
	CMP.W (A2),D0
	BEQ LEFTEND
	CMP.W (A2)+,D1
	BEQ LEFTEND
	BRA.S LL
CONTL
	CLR.W UPDOWNIND
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN2,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR LEFT4
	BSR WAITVBL
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN3,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR LEFT8
	BSR WAITVBL
	MOVE.L BASEADD,D0
	MOVE.L #SCREEN4,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR LEFT12
	BSR WAITVBL
	MOVE.L BASEADD,D0
	SUB.L #8,D0
	SUB.L #2,MAPPOINTER
	MOVE.L D0,BASEADD
	MOVE.L #SCREEN1,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE

	BSR LEFT0
	BSR WAITVBL1
LEFTEND
	RTS



LEFT4
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX4,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
LEFT4LOOP
	MOVE.L A2,A4
	MOVE.W 2(A1),D1
	ADD.L D1,A4
	BSR LEFTDEF
	DBF D0,LEFT4LOOP
	RTS

LEFTDEF
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	MOVE.L A2,A4
	MOVE.W (A1),D1
	ADD.L D1,A4
ADDIT1	SET 0
	REPT 16
	LEA 8(A4),A4
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,ADDIT1(A0)
	OR.L D3,ADDIT1+4(A0)
ADDIT1	SET ADDIT1+160
	ENDR
	LEA 2560(A0),A0
	LEA 160(A1),A1
	RTS

LEFT8
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX8,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
LEFT8LOOP
	MOVE.L A2,A4
	MOVE.W 2(A1),D1
	ADD.L D1,A4
	BSR LEFTDEF
	DBF D0,LEFT8LOOP
	RTS

LEFT12
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX12,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
LEFT12LOOP
	MOVE.L A2,A4
	MOVE.W 2(A1),D1
	ADD.L D1,A4
	BSR LEFTDEF
	DBF D0,LEFT12LOOP
	RTS

LEFT0
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX0,A2
	MOVEQ #11,D0
	MOVEQ #0,D1
LEFT0LOOP
	MOVE.L A2,A4
	MOVE.W 2(A1),D1
	ADD.L D1,A4
	BSR ALLDEF
	DBF D0,LEFT0LOOP
	RTS

ALLDEF
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA 2560(A0),A0
	LEA 160(A1),A1
	RTS

*****************OK GOING UP!!

UP	
	CMP.L #UPWALK,DIRSTORE
	BEQ.S UPON
	MOVE.L #UPWALK,DIRSTORE
	MOVE.L #UPWALK,CURMAN
UPON
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 2(A1),D0
	MOVE.W 4(A1),D1
	LEA UPTABLE(PC),A2
UL
	CMP.W #-1,(A2)
	BEQ UPEND
	CMP.W (A2),D0
	BEQ CONTU
	CMP.W (A2)+,D1
	BEQ CONTU
	BRA.S UL
CONTU
	MOVE.W #1,UPDOWNIND
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	SUB.L #640,D0
	MOVE.L #SCREEN1,D1
	ADD.L D0,D1
	MOVE.L D0,(A0)
	MOVE.L ADDOFF,D0
	SUB.L D0,D1
	MOVE.L D1,BASE
	SUB.L #160,MAPPOINTER
	BSR UP4
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	SUB.L #640,D0
	MOVE.L D0,(A0)
	MOVE.L #SCREEN1,D1
	ADD.L D0,D1
	MOVE.L ADDOFF,D0
	SUB.L D0,D1
	MOVE.L D1,BASE
	BSR UP8
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	MOVE.L #SCREEN1,D1
	SUB.L #640,D0
	MOVE.L D0,(A0)
	ADD.L D0,D1
	MOVE.L ADDOFF,D0
	SUB.L D0,D1
	MOVE.L D1,BASE
	BSR UP12
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	MOVE.L #SCREEN1,D1
	SUB.L #640,D0
	MOVE.L D0,(A0)
	ADD.L D0,D1
	MOVE.L ADDOFF,D0
	SUB.L D0,D1
	MOVE.L D1,BASE
	BSR UP0
	BSR WAITVBL1
UPEND
	RTS

UP4
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX0,A2
	LEA 192(A2),A2
	BSR ROOT
	RTS

ROOT
	MOVEQ #18,D0
	MOVEQ #0,D1
	LEA (A2),A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT+8(A4),ADDIT1(A3)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A3)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT+8(A4),ADDIT1(A5)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A5)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT+8(A4),ADDIT1(A6)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A6)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
UP4LOOP
	LEA (A2),A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT1	SET 0
	REPT 4
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,(A3)+
	OR.L D3,(A3)+
	MOVE.L (A4)+,(A3)+
	MOVE.L (A4)+,(A3)+
	LEA 144(A3),A3
	ENDR
	LEA NUMBLOCKS*256-64(A4),A4
ADDIT1	SET 0
	REPT 4
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,(A5)+
	OR.L D3,(A5)+
	MOVE.L (A4)+,(A5)+
	MOVE.L (A4)+,(A5)+
	LEA 144(A5),A5
	ENDR
	LEA NUMBLOCKS*256-64(A4),A4
ADDIT1	SET 0
	REPT 4
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,(A6)+
	OR.L D3,(A6)+
	MOVE.L (A4)+,(A6)+
	MOVE.L (A4)+,(A6)+
	LEA 144(A6),A6
	ENDR

	LEA 8(A0),A0
	LEA -632(A3),A3
	LEA -632(A5),A5
	LEA -632(A6),A6
	DBF D0,UP4LOOP

	LEA (A2),A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A3)
	OR.L D3,ADDIT1+4(A3)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A5)
	OR.L D3,ADDIT1+4(A5)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 4
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A6)
	OR.L D3,ADDIT1+4(A6)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR

	RTS

UP8
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX0,A2
	LEA 128(A2),A2
	BSR ROOT
	RTS


UP12
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX0,A2
	LEA 64(A2),A2
	BSR ROOT
	RTS

UP0
	MOVE.L BASE,A0
	LEA 5120(A0),A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA GRAPHIX0,A2
	BSR ROOT
	RTS

**************AND GOING DOWN!!!

DOWNCHECK	
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 482(A1),D0
	MOVE.W 484(A1),D1
	LEA DOWNTABLE(PC),A2
DL
	CMP.W #-1,(A2)
	BEQ.S CONTD1
	CMP.W (A2),D0
	BEQ DOWNEND1
	CMP.W (A2)+,D1
	BEQ DOWNEND1
	BRA.S DL
DOWNEND1
	RTS
CONTD1
	LEA 4(A7),A7
	MOVE.L #FALL,DIRSTORE
	MOVE.L #FALL,CURMAN
	BRA CONTD

DOWN	
	CMP.L #UPWALK,DIRSTORE
	BEQ.S DOWNON
	MOVE.L #UPWALK,DIRSTORE
	MOVE.L #UPWALK,CURMAN
DOWNON
	MOVE.L MAPPOINTER,A1
	LEA 658(A1),A1
	MOVE.W 482(A1),D0
	MOVE.W 484(A1),D1
	LEA DOWNTABLE2,A2
DL1
	CMP.W #-1,(A2)
	BEQ.S CONTF
	CMP.W (A2),D0
	BEQ DOWNEND
	CMP.W (A2)+,D1
	BEQ DOWNEND
	BRA.S DL1 
CONTF
	MOVE.W #1,UPDOWNIND
CONTD
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	ADD.L #640,D0
	MOVE.L #SCREEN1,BASE
	ADD.L D0,BASE
	MOVE.L D0,(A0)
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	ADD.L #160,MAPPOINTER
	BSR DOWN4
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	ADD.L #640,D0
	MOVE.L D0,(A0)
	MOVE.L #SCREEN1,BASE
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR DOWN8
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	MOVE.L #SCREEN1,BASE
	ADD.L #640,D0
	MOVE.L D0,(A0)
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR DOWN12
	BSR WAITVBL
	LEA BASEADD(PC),A0
	MOVE.L (A0),D0
	MOVE.L #SCREEN1,BASE
	ADD.L #640,D0
	MOVE.L D0,(A0)
	ADD.L D0,BASE
	MOVE.L ADDOFF,D0
	SUB.L D0,BASE
	BSR DOWN0
	BSR WAITVBL1
DOWNEND
	RTS

DOWN4
	MOVE.L BASE,A0
	ADD.L #35200,A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA 1760(A1),A1
	LEA GRAPHIX0,A2
	BSR ROOT
	RTS

DOWN8
	MOVE.L BASE,A0
	ADD.L #35200,A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA 1760(A1),A1
	LEA GRAPHIX0,A2
	LEA 64(A2),A2
	BSR ROOT
	RTS


DOWN12
	MOVE.L BASE,A0
	ADD.L #35200,A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA 1760(A1),A1
	LEA GRAPHIX0,A2
	LEA 128(A2),A2
	BSR ROOT
	RTS

DOWN0
	MOVE.L BASE,A0
	ADD.L #35200,A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3
	SUB.L #$12000,A5
	SUB.L #$1B000,A6
	MOVE.L MAPPOINTER,A1
	LEA 1760(A1),A1
	LEA GRAPHIX0,A2
	LEA 192(A2),A2
	BSR ROOT
	RTS

***************************************************
* BEFOR THE SCREEN STARTS THE 4 WORK SCREENS MUST *
* BE DRAWN OUT IN THE MEMORY 			  *
***************************************************
* THERE ARE FOUR COPIES OF THE GRAPHICS EACH 4    *
* PIXELS SHIFTED FROM THE PREVIOUS. AND EACH ONE  *
* OF THE 4 WORK SCREENS USES ONE SET OF THESE GRFX*
***************************************************

PREPARESCREENS
	LEA SCREEN1,A0
	ADD.L BASEADD,A0
	LEA 5120(A0),A0
	SUB.L ADDOFF,A0
	MOVE.L A0,SAVESCREEN
	MOVE.L MAPPOINTER,SAVEMAP
	MOVE.W #11,D7
PREPLOOP
	MOVE.W D7,-(SP)
	MOVE.L SAVESCREEN,A0
	LEA (A0),A3
	LEA (A0),A5
	LEA (A0),A6
	SUB.L #$9000,A3			SCREEN2
	SUB.L #$12000,A5		SCREEN3
	SUB.L #$1B000,A6		SCREEN4
	MOVE.L SAVEMAP,A1
	LEA GRAPHIX0,A2
	BSR ROOT16
	ADD.L #2560,SAVESCREEN
	ADD.L #160,SAVEMAP
	MOVE.W (SP)+,D7
	DBF D7,PREPLOOP 
	RTS

SAVESCREEN	DC.L 0
SAVEMAP		DC.L 0

ROOT16
	MOVEQ #18,D0
	MOVEQ #0,D1
	LEA (A2),A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT+8(A4),ADDIT1(A3)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A3)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT+8(A4),ADDIT1(A5)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A5)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT+8(A4),ADDIT1(A6)
	MOVE.L ADDIT+12(A4),ADDIT1+4(A6)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
ROOT16LOOP
	MOVE.L A2,A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT1	SET 0
	REPT 16
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,ADDIT1(A3)
	OR.L D3,ADDIT1+4(A3)
	MOVE.L (A4)+,ADDIT1+8(A3)
	MOVE.L (A4)+,ADDIT1+12(A3)
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256-256(A4),A4
ADDIT1	SET 0
	REPT 16
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,ADDIT1(A5)
	OR.L D3,ADDIT1+4(A5)
	MOVE.L (A4)+,ADDIT1+8(A5)
	MOVE.L (A4)+,ADDIT1+12(A5)
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256-256(A4),A4
ADDIT1	SET 0
	REPT 16
	MOVE.L (A4)+,D2
	MOVE.L (A4)+,D3
	OR.L D2,ADDIT1(A6)
	OR.L D3,ADDIT1+4(A6)
	MOVE.L (A4)+,ADDIT1+8(A6)
	MOVE.L (A4)+,ADDIT1+12(A6)
ADDIT1	SET ADDIT1+160
	ENDR

	LEA 8(A0),A0
	LEA 8(A3),A3
	LEA 8(A5),A5
	LEA 8(A6),A6
	DBF D0,ROOT16LOOP

	MOVE.L A2,A4
	MOVE.W (A1)+,D1
	ADD.L D1,A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),ADDIT1(A0)
	MOVE.L ADDIT+4(A4),ADDIT1+4(A0)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A3)
	OR.L D3,ADDIT1+4(A3)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A5)
	OR.L D3,ADDIT1+4(A5)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR
	LEA NUMBLOCKS*256(A4),A4
ADDIT	SET 0
ADDIT1	SET 0
	REPT 16
	MOVE.L ADDIT(A4),D2
	MOVE.L ADDIT+4(A4),D3
	OR.L D2,ADDIT1(A6)
	OR.L D3,ADDIT1+4(A6)
ADDIT	SET ADDIT+16
ADDIT1	SET ADDIT1+160
	ENDR

	RTS


KBUFF	DS.W 1

BASEADD	DC.L 0

****************************************
* THESE FOLLOWING TABELS REFER TO WHICH BLOCKS THE CHARACTER
* CANNOT WALK THROUGH OR DROP THROUGH!!
******************************************

RIGHTTABLE
	DC.W 25*256,26*256,-1
LEFTTABLE
	DC.W 25*256,26*256,-1
UPTABLE
	DC.W 8*256,9*256,10*256,11*256,39*256,40*256,-1
DOWNTABLE
	DC.W 28*256,29*256,37*256,38*256,30*256,08*256,09*256,10*256,11*256,39*256,40*256,-1
DOWNTABLE2
	DC.W 28*256,29*256,37*256,38*256,30*256,-1
DOORTABLE
	DC.W 1*256,77*256,-1

	DC.B 	"WELL IF YOU ARE LOOKING AT THIS THEN YOU HAVE SUCCESSFULLY FOUND MY UNIVERSAL SYNC SCROLL ROUTINES A PRIZE INDEED. THEY ACTUALLY WORK ON ALL ST'S!!!"
 	DC.B 	" MAY YOU BE CURSED IN HELL AND YOUR GENITALIA SHRIVEL AND DROP OFF!!! "
	EVEN

****************************
* ALL TIMERS AND SYNC SCROLLROUTINES
****************************

TIMERB1E
	CLR.B $FFFFFA1B.W
	MOVE.B #138,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #TIMERBMUSIC,$120.W
	MOVE.L A0,-(A7)			SMALL DELAY FOR ACCURATE COLOR SWOP
	REPT 198
	NOP
	ENDR
	LEA PALETTE1(PC),A0
	MOVE.L (A0)+,$FFFF8240.W
	MOVE.L (A0)+,$FFFF8244.W
	MOVE.L (A0)+,$FFFF8248.W
	MOVE.L (A0)+,$FFFF824C.W
	MOVE.L (A0)+,$FFFF8250.W
	MOVE.L (A0)+,$FFFF8254.W
	MOVE.L (A0)+,$FFFF8258.W
	MOVE.L (A0)+,$FFFF825C.W
	MOVE.L (A7)+,A0
	BCLR #0,$FFFFFA0F.W
	RTE

PALETTE1
	DC.W $000,$100,$210,$320,$431,$542,$020,$130
	DC.W $240,$520,$630,$740,$111,$222,$333,$001

TIMERBMUSIC
	CLR.B $FFFFFA1B.W		
	MOVE.B #48,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #TIMERB2,$120.W
	MOVEM.L D0-D7/A0-A6,-(A7)
	JSR L006D			PLAY MUSIC
	MOVEM.L (A7)+,D0-D7/A0-A6
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERB2	MOVE.L D0,-(A7)			BLACKOUT
	MOVE.L A1,-(A7)
	MOVEQ #0,D0
	LEA $FFFF8240.W,A1
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L (A7)+,A1
	MOVE.L (A7)+,D0
	CLR.B $FFFFFA1B.W
	MOVE.B #4,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #NEWTB,$120.W
	ST POSITIONRIGHT
	BCLR #0,$FFFFFA0F.W
	RTE

TIMERB3	MOVE.L D0,-(A7)
	MOVE.L A1,-(A7)
	MOVEQ #0,D0
	LEA $FFFF8240.W,A1
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	MOVE.L D0,(A1)+
	CLR.B $FFFFFA1B.W		BOTTOM BORDER HBL
	MOVE.W #$FA21,A1
	MOVE.B #15,(A1)
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #NEWTB2,$120.W
	MOVE.L (A7)+,A1
	MOVE.L (A7)+,D0
	BCLR #0,$FFFFFA0F.W
	RTE


**************************
* MANIKINS SYNC SCROLL ROUTINES
**************************

NEW4	clr.b $fffffa1b.W
	move.b #199,$fffffa21.W
	move.b #8,$fffffa1b.W
	RTE

DUMMYVBL
	ST VBLIND
	clr.b $fffffa1b.W
	move.b #199,$fffffa21.W
	move.b #8,$fffffa1b.W
	MOVE.L #NEWTB,$120.W
	RTE
DUMMYVBL2
	ST VBLIND
	RTE

SYNCBOTTOM
	clr.b $fffffa1b			timer stop
	movem.l d0-d1/a0-a1,-(sp)
	move.w #$fa21,a1
	move.b #47,(a1)
	move.b #8,$fffffa1b
	move.b (a1),d0
wait	cmp.b (a1),d0			WAIT FOR END OF LAST LINE
	beq wait
*					OK IN THE RIGHT BORDER
	clr.b $ffff820a			60Hz
	
	moveq #2,d0
nopi2	nop				A LITTLE WAIT
	dbf d0,nopi2		
*					OK IN THE LEFT BORDER
	move.b #2,$ffff820a		50Hz
	movem.l (sp)+,d0-d1/a0-a1
	move.l #SYNCTOP,$120.W
	bclr #0,$fffffa0f.W		end of interrupt
	rte

NEWTB
	MOVE.L A0,-(A7)
	LEA SCROLLPALETTE,A0		PUT UP SCROLL PALETTE
	MOVE.L (A0)+,$FFFF8240.W
	MOVE.L (A0)+,$FFFF8244.W
	MOVE.L (A0)+,$FFFF8248.W
	MOVE.L (A0)+,$FFFF824C.W
	MOVE.L D0,-(A7)
	MOVE.L A1,-(A7)
	clr.b $fffffa1b			timer stop
	move.w #$fa21,a1
	move.b #32,(a1)
	move.b #8,$fffffa1b
	move.b (a1),d0
waitB	cmp.b (a1),d0			WAIT FOR END OF LAST LINE
	beq waitB
*					IN THE RIGHT BORDER
	clr.b $ffff820a			60Hz
	
	moveq #2,d0
nopi2B	nop				
	dbf d0,nopi2B		
*					IN THE LEFT BORDER
	move.b #2,$ffff820a		50Hz
	MOVE.L (A7)+,A1
	MOVE.L (A7)+,D0
	MOVE.L (A7)+,A0
	move.l #TIMERB3,$120.W
	bclr #0,$fffffa0f.W		end of interrupt
	rte

NEWTB2	clr.b $fffffa1b	.W		timer stop
	CLR.W POSITIONRIGHT
	movem.l d0-d7/a0-a6,-(sp)
	move.w #$fa21,a1
	move.b #200,(a1)
	move.b #8,$fffffa1b.W
	move.w #$60,d2
	moveq #4,d4
	MOVE.W L11CE4,LF096
	LEA LOGO,A0
	move.b (a1),d0
wait2	cmp.b (a1),d0			OK SYNC IN
	beq wait2
	
**********
	LEA LOGOBACK(PC),A3	8	THIS ROUTINE DRAWS THE SIGN AT THE TOP OF THE SCREEN
	MOVE.L (A3)+,A2		22
ADDIT	SET 0
	REPT 33

	MOVEM.L (A3)+,D1/D3/D5-D7/A4-A6		76
	MOVE.L D1,(A2)+
	MOVE.L D3,(A2)+
	MOVE.L D5,(A2)+
	MOVE.L D6,(A2)+
	MOVE.L D7,(A2)+
	MOVE.L A4,(A2)+
	MOVE.L A5,(A2)+
	MOVE.L A6,(A2)+				96
	LEA 128(A2),A2				8
	ENDR
**********				5970 CYCLES

	LEA LOGOBACK+4,A3			12
	MOVE.L SAVEBASE(PC),A2			16

**********
	REPT 33
	MOVEM.L (A2),D1/D3/D5-D7/A4-A6		76 cycles
	MOVE.L D1,(A3)+
	MOVE.L D3,(A3)+
	MOVE.L D5,(A3)+
	MOVE.L D6,(A3)+
	MOVE.L D7,(A3)+
	MOVE.L A4,(A3)+
	MOVE.L A5,(A3)+
	MOVE.L A6,(A3)+				96
	MOVEM.L (A0)+,D1/D3/D5-D7/A4-A6		76 cycles
	MOVE.L D1,(A2)+
	MOVE.L D3,(A2)+
	MOVE.L D5,(A2)+
	MOVE.L D6,(A2)+
	MOVE.L D7,(A2)+
	MOVE.L A4,(A2)+
	MOVE.L A5,(A2)+
	MOVE.L A6,(A2)+				96
	LEA 128(A2),A2				8
	ENDR

*****************			11616 CYCLES
	REPT 212
	NOP
	ENDR

	MOVE.W #$2700,SR
	LEA TABLE1(PC),A3
	MOVE.W LF096(PC),D0
	ADD.W D0,D0
	ADDA.W D0,A3
	ADDA.W D0,A3
	ADDA.W D0,A3
	MOVEQ #0,D0
	LEA $FFFF8209.W,A0

	moveq #24,d0
wait3	nop
	dbf d0,wait3
*					FIRST OPENING OF THE TOP BORDER
	clr.b $ffff820a			60Hz
	moveq #2,d0
nopi3	nop
	dbf d0,nopi3			warten
*					IN THE LEFT BORDER
	move.b #2,$ffff820a		50Hz
	REPT	8
	NOP
	ENDR
	moveq #14,d0	
scandelay2
	REPT 125
	NOP
	ENDR
	dbf d0,scandelay2
	
	moveq #23,d0
wait4	nop
	dbf d0,wait4
*					SECOND OPENING OF TOP BORDER
	clr.b $ffff820a			60Hz
	moveq #2,d0
nopi4	nop				warten
	dbf d0,nopi4
*					wir sind im linken rand
	move.b #2,$ffff820a.W		50Hz
	nop
	nop
	nop 
*	nop

******************** OK THE NEXT BIT IS THE ACTUAL SYNC SCROLL ROUTINE
	CLR.B $FFFFFA1B.W
	MOVE.B #199+13,$FFFFFA21.W
	
LOOP13	MOVE.B (A0),D0
	CMP.B #$40,D0
	BGT.S SYNCIN
	DBF D4,LOOP13
SYNCIN	SUB.W D0,D2
	LSL.W D2,D0
	MOVE.B #8,$FFFFFA1B.W
	MOVEQ #0,D2
	LEA $FFFF8240.W,A1
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.L D2,(A1)+
	MOVE.W (A3),D1
	MOVE.W 2(A3),D2
	LEA $FFFF820A.W,A1
	LEA $FFFF8260.W,A2
	MOVEQ #2,D3
	MOVEQ #0,D4
	MOVE.W #$13,D0
LOOP15	CMPI.W #0,D1
	BEQ RIGHT2
	SUBQ.W #1,D1
	NOP
	NOP
	NOP
	MOVE.B D3,(A2)
	NOP
	MOVE.B D4,(A2)

	REPT 89
	NOP
	ENDR

	MOVE.B D4,(A1)
	MOVE.B D3,(A1)

	REPT 13
	NOP
	ENDR

	MOVE.B D3,(A2)
	NOP
	MOVE.B D4,(A2)
	DBF D0,LOOP15
LOOP16	NOP
	NOP
	NOP
	NOP
	NOP
RIGHT2	CMPI.W #0,D2
	BEQ ENDING
	MOVE.B D4,(A2)
	MOVE.B D4,(A2)
	SUBQ.W #1,D2

	REPT 88
	NOP
	ENDR

	MOVE.B D4,(A1)
	MOVE.B D3,(A1)

	REPT 13
	NOP
	ENDR

	MOVE.B D4,(A2)
	NOP
	MOVE.B D4,(A2)
	DBF D0,LOOP16
ENDING


	MOVE.W #$2300,SR
	move.w (a3),d0
	add.w 2(a3),d0
	move.w #21,d1
	sub.w d0,d1
	clr.b $fffffa1b			timer stop
	move.b d1,$fffffa21
	move.b #8,$fffffa1b
	move.l #TIMERB1E,$120
	MOVE.L #DUMMYVBL2,$70.W
	LEA LOGOBACK,A0
	MOVE.L SAVEBASE(PC),(A0)
	movem.l (sp)+,d0-d7/a0-a6
	bclr #0,$fffffa0f		end of interrupt
	rte

SYNCTOP
	clr.b $fffffa1b			timer stop
	movem.l d0-d4/a0-a3,-(sp)
	move.w #$fa21,a1
	move.b #200,(a1)
	move.b #8,$fffffa1b
	move.b (a1),d0
wait2B	cmp.b (a1),d0			auf ende der zeile warten
	beq wait2B

	moveq #35,d0
scandelayB
	REPT 125
	NOP
	ENDR
	dbf d0,scandelayB

	moveq #29,d0
wait3B	nop
	dbf d0,wait3B

	clr.b $ffff820a			60Hz
	moveq #3,d0
nopi3B	nop
	dbf d0,nopi3B			warten

	move.b #2,$ffff820a		50Hz
	lea $ffff8209.w,a0
	moveq #0,d1
looping
	move.b (a0),d0
	bne.s finished
	add.w #1,d1
	bra.s looping
finished
	cmp.w #20,d1
	blt.s ADD16LINES
	MOVE.L #160*16,ADDOFF
	CLR.B $FFFFFA1B.W
	MOVE.B #255,$FFFFFA21.W
	
	MOVE.B #8,$FFFFFA1B.W
	MOVE.W #$2300,SR

	move.l #DUMMYTB,$120
	movem.l (sp)+,d0-d4/a0-a3
	MOVE.W #1,PREPFIN
	bclr #0,$fffffa0f		end of interrupt
	rte

PREPFIN	DC.W 0

ADD16LINES
	MOVE.L #0*16,ADDOFF
	CLR.B $FFFFFA1B.W
	MOVE.B #255,$FFFFFA21.W
	
	MOVE.B #8,$FFFFFA1B.W
	MOVE.W #$2300,SR

	move.l #DUMMYTB,$120
	movem.l (sp)+,d0-d4/a0-a3
	MOVE.W #1,PREPFIN
	bclr #0,$fffffa0f		end of interrupt
	rte

DUMMYTB	BCLR #0,$FFFFFA0F.W
	RTE

***************************
* SYNC TABLES
***************************

TABLE1	DC.W 0,0,0,0
	DC.W 6,1,2,3
	DC.W 1,4,0,1
	DC.W 4,6,2,6
	DC.W 3,2,8,0
	DC.W 2,8,6,3
	DC.W $A,3,3,$C
	DC.W 0,3,$C,6
	DC.W 4,0,2,0
	DC.W 0,8,1,2
	DC.W 5,1,4,2
	DC.W 1,4,8,2
	DC.W 6,5,2,8
	DC.W 2,2,8,8
	DC.W 3,$A,5,3
	DC.W $C,2,3,$C
	DC.W 8,4,0,4
	DC.W 0,2,1,0
	DC.W 2,7,1,4
	DC.W 4,1,6,1
	DC.W 1,6,7,2
	DC.W 8,4,2,$A
	DC.W 1,2,$A,7
	DC.W 3,$C,4,3
	DC.W 0,0,$FFFF,0
	DC.W 6,0,2,3
	DC.W 0,4,0,0
	DC.W 4,6,1,6
	DC.W 3,1,8,0
	DC.W 1,8,6,2

TABLE2	DC.W 0,1,1,1
	DC.W 2,2,2,3
	DC.W 3,3,4,0
	DC.W 1,1,1,2
	DC.W 2,2,3,3
	DC.W 3,4,0,0
	DC.W 1,1,1,2
	DC.W 2,2,3,3
LF096	DC.W 0
L11CE4	DC.W 4

***************************
* DRAW GRAPHIX
***************************
* THIS PRESHIFTS ALL THE GRAPHICS FOR THE MAP

SHIFTBLOCKS
	LEA GRAPHIX0,A0
	LEA GRAPHIX4,A1
	LEA GRAPHIX8,A2
	LEA GRAPHIX12,A3
	MOVE.W #NUMBLOCKS*256/4-1,D0
SLOOP
	MOVE.L (A0),(A1)+
	MOVE.L (A0),(A2)+
	MOVE.L (A0)+,(A3)+
	DBF D0,SLOOP

	LEA GRAPHIX0,A0
	MOVE.W #NUMBLOCKS-1,D1
G0	
	LEA BACK,A1
	MOVE.W #15,D7
G00
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	DBF D7,G00
	DBF D1,G0
	
	MOVE.W #3,D0
SLOOP1	
	LEA GRAPHIX4,A0
	MOVE.W #NUMBLOCKS*16-1,D1
SLOOP2
	ROXR.W (A0)
	ROXR.W 8(A0)
	ROXR.W 2(A0)
	ROXR.W 10(A0)
	ROXR.W 4(A0)
	ROXR.W 12(A0)
	ROXR.W 6(A0)
	ROXR.W 14(A0)
	LEA 16(A0),A0
	DBF D1,SLOOP2
	DBF D0,SLOOP1

	LEA GRAPHIX4,A0
	MOVE.W #NUMBLOCKS-1,D1
G4	
	LEA BACK+256,A1
	MOVE.W #15,D7
G44
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	DBF D7,G44
	DBF D1,G4


	MOVE.W #7,D0
SLOOP3	
	LEA GRAPHIX8,A0
	MOVE.W #NUMBLOCKS*16-1,D1
SLOOP4
	ROXR.W (A0)
	ROXR.W 8(A0)
	ROXR.W 2(A0)
	ROXR.W 10(A0)
	ROXR.W 4(A0)
	ROXR.W 12(A0)
	ROXR.W 6(A0)
	ROXR.W 14(A0)
	LEA 16(A0),A0
	DBF D1,SLOOP4
	DBF D0,SLOOP3

	LEA GRAPHIX8,A0
	MOVE.W #NUMBLOCKS-1,D1
G8	
	LEA BACK+512,A1
	MOVE.W #15,D7
G88
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	DBF D7,G88
	DBF D1,G8

	MOVE.W #11,D0
SLOOP5	
	LEA GRAPHIX12,A0
	MOVE.W #NUMBLOCKS*16-1,D1
SLOOP6
	ROXR.W (A0)
	ROXR.W 8(A0)
	ROXR.W 2(A0)
	ROXR.W 10(A0)
	ROXR.W 4(A0)
	ROXR.W 12(A0)
	ROXR.W 6(A0)
	ROXR.W 14(A0)
	LEA 16(A0),A0
	DBF D1,SLOOP6
	DBF D0,SLOOP5

	LEA GRAPHIX12,A0
	MOVE.W #NUMBLOCKS-1,D1
G12	
	LEA BACK+768,A1
	MOVE.W #15,D7
G1212
	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+

	MOVEM.W (A0),D2-D5
	MOVE.W D5,D6
	OR.W D2,D6
	OR.W D3,D6
	OR.W D4,D6
	NOT.W D6
	MOVE.L (A1)+,(A0)
	MOVE.L (A1)+,4(A0)
	AND.W D6,(A0)
	AND.W D6,2(A0)
	AND.W D6,4(A0)
	AND.W D6,6(A0)
	OR.W D2,(A0)+
	OR.W D3,(A0)+
	OR.W D4,(A0)+
	OR.W D5,(A0)+
	DBF D7,G1212
	DBF D1,G12

	RTS

PREMULTMAP
	LEA MAPSTART,A0
	LEA MAPEND,A1
MLOOP
	MOVE.W (A0),D0
	LSL.W #8,D0
	MOVE.W D0,(A0)+
	CMP.L A1,A0
	BNE.S MLOOP
	RTS

SCROLLPALETTE
	DC.W $000,$300,$400,$510,$520,$630,$640,$750

********************************
* THE MAN
*******************************
UPDOWNIND	DC.W 0
OLDPOS	DC.L $7EC00
OLDSTORE	DS.B 512
DIRSTORE	DC.L STANDWALK
CURMAN
	DC.L STANDWALK
UPWALK
	DC.L MAN+16*512,MANMASK+16*256
	DC.L MAN+17*512,MANMASK+17*256
	DC.L MAN+18*512,MANMASK+18*256
	DC.L MAN+19*512,MANMASK+19*256
	DC.L MAN+18*512,MANMASK+18*256
	DC.L MAN+17*512,MANMASK+17*256
	DC.L MAN+16*512,MANMASK+16*256
	DC.L MAN+20*512,MANMASK+20*256
	DC.L MAN+21*512,MANMASK+21*256
	DC.L MAN+22*512,MANMASK+22*256
	DC.L MAN+21*512,MANMASK+21*256
	DC.L MAN+20*512,MANMASK+20*256
	DC.L -1,-1
STANDWALK
	DC.L MAN+15*512,MANMASK+15*256
	DC.L -1,-1
CLIMBWALK
	DC.L MAN+14*512,MANMASK+14*256
	DC.L -1,-1
FALL	DC.L MAN+23*512,MANMASK+23*256
	DC.L -1,-1
LEFTWALK
	DC.L MAN+10*512,MANMASK+10*256
	DC.L MAN+9*512,MANMASK+9*256
	DC.L MAN+8*512,MANMASK+8*256
	DC.L MAN+7*512,MANMASK+7*256
	DC.L MAN+8*512,MANMASK+8*256
	DC.L MAN+9*512,MANMASK+9*256
	DC.L MAN+10*512,MANMASK+10*256
	DC.L MAN+13*512,MANMASK+13*256
	DC.L MAN+12*512,MANMASK+12*256
	DC.L MAN+11*512,MANMASK+11*256
	DC.L MAN+12*512,MANMASK+12*256
	DC.L MAN+13*512,MANMASK+13*256
	DC.L -1,-1
RIGHTWALK
	DC.L MAN+0*512,MANMASK+0*256
	DC.L MAN+1*512,MANMASK+1*256
	DC.L MAN+2*512,MANMASK+2*256
	DC.L MAN+3*512,MANMASK+3*256
	DC.L MAN+2*512,MANMASK+2*256
	DC.L MAN+1*512,MANMASK+1*256
	DC.L MAN+0*512,MANMASK+0*256
	DC.L MAN+4*512,MANMASK+4*256
	DC.L MAN+5*512,MANMASK+5*256
	DC.L MAN+6*512,MANMASK+6*256
	DC.L MAN+5*512,MANMASK+5*256
	DC.L MAN+4*512,MANMASK+4*256
	DC.L -1,-1

MOVEMAN
	MOVE.L OLDPOS,A0
	LEA OLDSTORE,A1
ADDIT	SET 0
	REPT 32
	MOVEM.L (A1)+,D0-D3
	MOVEM.L D0-D3,ADDIT(A0)
ADDIT	SET ADDIT+160
	ENDR

	MOVE.L CURMAN(PC),A0
	MOVE.L (A0),D0
	CMP.L #-1,D0
	BNE.S CONTMOVE
	MOVE.L DIRSTORE(PC),A0
CONTMOVE
	MOVE.L (A0)+,A1
	MOVE.L (A0)+,A2
	MOVE.L A0,CURMAN

	MOVE.L SCROLLBASE,A3
	LEA OLDSTORE,A4	
	LEA 17992(A3),A3
	MOVE.L A3,OLDPOS
ADDIT	SET 0
ADDIT1	SET 0
	REPT 32
	MOVEM.L ADDIT(A3),D0-D3
	MOVEM.L D0-D3,ADDIT1(A4)
	AND.L (A2),D0
	AND.L (A2)+,D1
	AND.L (A2),D2
	AND.L (A2)+,D3
	OR.L (A1)+,D0
	OR.L (A1)+,D1
	OR.L (A1)+,D2
	OR.L (A1)+,D3
	MOVEM.L D0-D3,ADDIT(A3)
ADDIT1	SET ADDIT1+16
ADDIT	SET ADDIT+160
	ENDR
	RTS

**********************************
* THE SCROLL ROUTINES
* FAST 3 PLANE AND UNBUFFERED!!
*********************************

WRAP
	CLR.W COUNT
	MOVE.L #SCROLLINE,SCROLLPOINT

DO_SCROLL
	MOVE.W COUNT,D0
	ADDQ.W #1,D0
	CMP.W #4,D0
	BNE.S BYPASS22
	CLR.W D0
	ADD.L #1,SCROLLPOINT
	MOVE.L SCROLLPOINT,A0
	MOVE.B 21(A0),D1
	CMP.B #$FF,D1
	BEQ WRAP
BYPASS22
	MOVE.W D0,COUNT
	CMP.W #1,D0
	BEQ ROOT1
	CMP.W #2,D0
	BEQ ROOT2
	CMP.W #3,D0
	BEQ ROOT3

ROOT0
	CLR.W MOVE_OK
	MOVE.L SCROLLBASE,A0
	ADD.L #36480,A0

	MOVE.L SCROLLPOINT,A1

	REPT 10
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #512,D0
	LEA FONT1,A2
	ADD.L D0,A2
	BSR ROOT0LOOP
	ENDR
	RTS

ROOT0LOOP
ADDIT	SET 0

	REPT 10	
	MOVEM.L (A2)+,D0-D7/A3-A6
	MOVEM.L D0-D3,ADDIT(A0)
	MOVEM.L D4-D7,ADDIT+160(A0)
	MOVEM.L A3-A6,ADDIT+320(A0)
ADDIT	SET ADDIT+480
	ENDR
	MOVEM.L (A2)+,D0-D7
	MOVEM.L D0-D3,ADDIT(A0)
	MOVEM.L D4-D7,ADDIT+160(A0)
	LEA 16(A0),A0
	RTS

ROOT1
	ST MOVE_OK
	MOVEQ #0,D0
	MOVE.L SCROLLBASE,A0
	ADD.L #36480,A0
	MOVE.L SCROLLPOINT,A1

	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
ADDIT	SET 0
	REPT 32
	LEA 8(A2),A2
	MOVEM.L (A2)+,D0-D3
	MOVEM.L D0-D3,ADDIT(A0)
ADDIT	SET ADDIT+160
	ENDR
	LEA 8(A0),A0

	REPT 9
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
	BSR ROOT1LOOP
	ENDR

	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
ADDIT	SET 0
	REPT 32	
	MOVE.L (A2)+,D0
	MOVE.L (A2)+,D1
	OR.L D0,ADDIT(A0)	
	OR.L D1,ADDIT+4(A0)
	LEA 16(A2),A2
ADDIT	SET ADDIT+160
	ENDR

	RTS

ROOT1LOOP
ADDIT	SET 0

	REPT 16	
	MOVEM.L (A2)+,D0-D7/A3-A6
	OR.L D0,ADDIT(A0)	
	OR.L D1,ADDIT+4(A0)
	MOVEM.L D2-D5,ADDIT+8(A0)
	OR.L D6,ADDIT+160(A0)	
	OR.L D7,ADDIT+164(A0)
	MOVEM.L A3-A6,ADDIT+168(A0)
ADDIT	SET ADDIT+320
	ENDR
	LEA 16(A0),A0

	RTS

ROOT2
	CLR.W MOVE_OK
	MOVEQ #0,D0
	MOVE.L SCROLLBASE,A0
	ADD.L #36480,A0
	MOVE.L SCROLLPOINT,A1

	MOVE.B (A1)+,D0
	MULU #512,D0
	LEA FONT1,A2
	ADD.L D0,A2
ADDIT	SET 0
	REPT 32	
	LEA 8(A2),A2
	MOVE.L (A2)+,ADDIT(A0)
	MOVE.L (A2)+,ADDIT+4(A0)
ADDIT	SET ADDIT+160
	ENDR
	LEA 8(A0),A0

	REPT 9
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #512,D0
	LEA FONT1,A2
	ADD.L D0,A2
	BSR ROOT0LOOP
	ENDR

	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #512,D0
	LEA FONT1,A2
	ADD.L D0,A2
ADDIT	SET 0
	REPT 32	
	MOVE.L (A2)+,ADDIT(A0)
	MOVE.L (A2)+,ADDIT+4(A0)
	LEA 8(A2),A2

ADDIT	SET ADDIT+160
	ENDR

	RTS

ROOT3
	ST MOVE_OK
	MOVEQ #0,D0
	MOVE.L SCROLLBASE,A0
	ADD.L #36480,A0
	MOVE.L SCROLLPOINT,A1

	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
ADDIT	SET 0

	REPT 32
	LEA 16(A2),A2
	MOVE.L (A2)+,ADDIT(A0)
	MOVE.L (A2)+,ADDIT+4(A0)
ADDIT	SET ADDIT+160
	ENDR

	REPT 9
	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
	BSR ROOT1LOOP
	ENDR

	MOVEQ #0,D0
	MOVE.B (A1)+,D0
	MULU #768,D0
	LEA FONT2,A2
	ADD.L D0,A2
ADDIT	SET 0
	REPT 32	
	MOVEM.L (A2)+,D0-D3
	OR.L D0,ADDIT(A0)	
	OR.L D1,ADDIT+4(A0)
	MOVE.L D2,ADDIT+8(A0)
	MOVE.L D3,ADDIT+12(A0)
	LEA 8(A2),A2
ADDIT	SET ADDIT+160
	ENDR

	RTS


************************************
* ROUTINE TO PRE SHIFT THE FONT
***********************************

SHIFTER
	LEA FONT1,A0
	LEA FONT2,A1

	MOVE.W #1471,D0
LOOP
	MOVE.B (A0),1(A1)
	MOVE.B 1(A0),8(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 3(A0),10(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 5(A0),12(A1)
	MOVE.B 6(A0),7(A1)
	MOVE.B 7(A0),14(A1)

	MOVE.B 8(A0),9(A1)
	MOVE.B 9(A0),16(A1)
	MOVE.B 10(A0),11(A1)
	MOVE.B 11(A0),18(A1)
	MOVE.B 12(A0),13(A1)
	MOVE.B 13(A0),20(A1)
	MOVE.B 14(A0),15(A1)
	MOVE.B 15(A0),24(A1)
	LEA 24(A1),A1
	LEA 16(A0),A0
	DBF D0,LOOP

	RTS


MAKEUPMEN
	LEA MAN,A0
	LEA MANMASK,A1
	MOVE.W #767,D0
MAKEUPLOOP
	MOVEM.W (A0)+,D1-D4
	OR.W D1,D4
	OR.W D2,D4
	OR.W D3,D4
	NOT.W D4
	MOVE.W D4,(A1)+
	MOVE.W D4,(A1)+
	MOVEM.W (A0)+,D1-D4
	OR.W D1,D4
	OR.W D2,D4
	OR.W D3,D4
	NOT.W D4
	MOVE.W D4,(A1)+
	MOVE.W D4,(A1)+
	DBF D0,MAKEUPLOOP
	RTS

DO_LOGO
	LEA LOGO,A0
	MOVE.L BASE,A2
	LEA 6784(A2),A2
	MOVE.L A2,SAVEBASE

	RTS
MANPOSRIGHT	DC.W 0
POSITIONRIGHT	DC.W 0

DO_SPRITES
	LEA SP_DATA(PC),A0
	MOVE.W #175,D0
SP_LOOP
	MOVE.L (A0),D1
	MOVE.L 4(A0),D2
	MOVE.L D2,(A0)+
	MOVE.L D1,(A0)+
	DBF D0,SP_LOOP
	RTS


DO_TLB
	TST.W POSITIONRIGHT
	BEQ.S DO_TLB
	CLR.W POSITIONRIGHT
	LEA BACKSAVE(PC),A0
	LEA SAVE(PC),A1
	REPT 8
ADDIT	SET 0
	MOVE.L (A1)+,A2
	MOVEM.L (A0)+,D0-D7/A3-A6
	MOVE.L D0,ADDIT(A2)
	MOVE.L D1,ADDIT+4(A2)
	MOVE.L D2,ADDIT+160(A2)
	MOVE.L D3,ADDIT+164(A2)
	MOVE.L D4,ADDIT+320(A2)
	MOVE.L D5,ADDIT+324(A2)
	MOVE.L D6,ADDIT+480(A2)
	MOVE.L D7,ADDIT+484(A2)
	MOVE.L A3,ADDIT+640(A2)
	MOVE.L A4,ADDIT+644(A2)
	MOVE.L A5,ADDIT+800(A2)
	MOVE.L A6,ADDIT+804(A2)
ADDIT	SET ADDIT+960
	MOVEM.L (A0)+,D0-D7/A3-A6
	MOVE.L D0,ADDIT(A2)
	MOVE.L D1,ADDIT+4(A2)
	MOVE.L D2,ADDIT+160(A2)
	MOVE.L D3,ADDIT+164(A2)
	MOVE.L D4,ADDIT+320(A2)
	MOVE.L D5,ADDIT+324(A2)
	MOVE.L D6,ADDIT+480(A2)
	MOVE.L D7,ADDIT+484(A2)
	MOVE.L A3,ADDIT+640(A2)
	MOVE.L A4,ADDIT+644(A2)
	MOVE.L A5,ADDIT+800(A2)
	MOVE.L A6,ADDIT+804(A2)
ADDIT	SET ADDIT+960
	MOVEM.L (A0)+,D0-D3
	MOVE.L D0,ADDIT(A2)
	MOVE.L D1,ADDIT+4(A2)
	MOVE.L D2,ADDIT+160(A2)
	MOVE.L D3,ADDIT+164(A2)
ADDIT	SET ADDIT+960
	ENDR
	
	LEA SPRITEPOS(PC),A0
	LEA BACKSAVE(PC),A3
	LEA SAVE(PC),A6
	LEA LITTLECIRCEND(PC),A5
	MOVE.L BASE(PC),A4
	LEA 22440(A4),A4

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT
	LEA LITTLE_CIRC(PC),A1
NEXTBIT
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+384(PC),A2
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT1
	LEA LITTLE_CIRC(PC),A1
NEXTBIT1
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+512(PC),A2
	LEA 8(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT2
	LEA LITTLE_CIRC(PC),A1
NEXTBIT2
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+640(PC),A2
	LEA 16(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR
	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT3
	LEA LITTLE_CIRC(PC),A1
NEXTBIT3
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+768(PC),A2
	LEA 24(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT4
	LEA LITTLE_CIRC(PC),A1
NEXTBIT4
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+896(PC),A2
	LEA 48(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT5
	LEA LITTLE_CIRC(PC),A1
NEXTBIT5
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+1024(PC),A2
	LEA 56(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT6
	LEA LITTLE_CIRC(PC),A1
NEXTBIT6
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+1152(PC),A2
	LEA 64(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	MOVE.L (A0),A1
	CMP.L A5,A1
	BNE.S NEXTBIT7
	LEA LITTLE_CIRC(PC),A1
NEXTBIT7
	MOVEQ #0,D1
	MOVE.W (A1)+,D1		BIG X
	MOVE.L A1,(A0)+

	LEA (A4,D1.W),A1
	LEA SP_DATA+1280(PC),A2
	LEA 72(A1),A1
	MOVE.L A1,(A6)+
	REPT 14
	MOVE.L (A1)+,(A3)+
	MOVE.L (A1),(A3)+
	MOVE.L (A2)+,(A1)
	MOVE.L (A2)+,-(A1)
	LEA 160(A1),A1
	ENDR

	RTS

SAVE
	REPT 11
	DC.L $7F400
	ENDR

SPRITEPOS
	DC.L LITTLE_CIRC+178
	DC.L LITTLE_CIRC+10
	DC.L LITTLE_CIRC+20
	DC.L LITTLE_CIRC+30
	DC.L LITTLE_CIRC+40
	DC.L LITTLE_CIRC+50
	DC.L LITTLE_CIRC+60
	DC.L LITTLE_CIRC+70
	DC.L LITTLE_CIRC+80
	DC.L LITTLE_CIRC+90
	DC.L LITTLE_CIRC+100

SAVEBASE	DC.L 0
SP_DATA		INCBIN "A:\DATA\TLB_SP.DAT"
BACKSAVE	DS.B 1408
LITTLE	INCBIN "A:\DATA\LITTLE.DAT"
LITTLE_CIRC	EQU LITTLE+2
LITTLECIRCEND	EQU LITTLE_CIRC+180
LOGO	INCBIN "A:\DATA\LOGO.DAT"

LOGOBACK	DC.L $7Eb40
		DS.B 1056

DO_SCROLLTEXT
	LEA SCROLLINE,A0
	LEA KEYTAB,A1
SCLOOP
	MOVEQ #0,D0
	MOVE.B (A0),D0
	CMP.W #$FF,D0
	BEQ.S SCROLLTEXTEND
	SUB.W #32,D0
	MOVE.B (A1,D0.W),D0
	MOVE.B D0,(A0)+
	BRA.S SCLOOP

SCROLLTEXTEND
	RTS

KEYTAB	DC.B	0,1,0,0,0,0,0,2,3,4,0,0,5,6,7,0
	DC.B 	8,9,10,11,12,13,14,15,16,17,18,0,0,0,0,19
	DC.B 	0,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35
	DC.B 	36,37,38,39,40,41,42,43,44,45,0,0,0,0,0,0,0,0,0,0

***********************************
* THE SCROLLINE
**********************************

SCROLLINE
	DC.B "                        WHO SAID MEGA DEMO?   WHERE I CAN'T SEE IT!   THE LOST BOYS IN A STATE OF IMMENSE PROUDNESS (LOOK AT THAT ILLITERATE ENGLISH!) PRESENT THEIR MIND BOMB DEMO!!!"
	DC.B " THIS DEMO WAS COMPLETED ON THE 18TH APRIL 1990 IN DEN BOSCH HOLLAND BY MANIKIN OF THE LOST BOYS AIDED AND ABBETTED BY THE DIGITAL INSANITY CORPORATION!!. FIRST AN IMMENSE APOLOGY TO AENIGMATICA. I AM REALLY SORRY BUT A COMBINATION "
	DC.B "OF LACK OF SPACE AND TIME MEANT THAT I COULDN'T GET YOUR SCREENS ONTO THE DEMO! I AM INCREDIBLY SORRY!. AND NOW THE SCROLL WRITTEN AT AN EARLIER DATE IN MANCHESTER ENGLAND!!! "
	DC.B " THE TIME IS 12:33AM ON THE 18TH FEBRUARY 1990 AND NOW THAT WE ARE THOROUGHLY PISSED OFF WITH PLAYING CHAOS STRIKES BACK WE DECIDED TO GET OFF OUR ARSES AND WRITE THE MAIN MENU SCROLL. "
	DC.B " THIS IS MANIKIN, SAMMY JOE WITH 2 TOTAL WEIRDO FRIENDS WHO LIVE WITH MANIKIN IN MANCHESTER (IAN AND SIMON!!). WE HAVE SPENT THE LAST EVENING (DAY!) PLAYING THAT FUCKING GAME AND WE ARE NOW HALF DRUNK (!!) AND IN THE MOOD FOR SPURIOUS "
	DC.B " BULLSHIT (MANIKIN BEING AN EXPERT AT THIS!). THE ONLY REASON THAT THE OTHER TWO NON LOST BOYS ARE HERE IS THAT THEY HAVE HAD TO SPEND THE LAST 4 MONTHS LISTENING TO THE ST KEYCLICK SO I GUESS THEY DESERVE SOME INVOLVMENT!"
	DC.B " (HAVE YOU EVER TRIED GETTING TO SLEEP AT 3AM, WHEN ALL YOU CAN HEAR IS BEEP, BEEP, FUCKING BEEP ?). ANYWAY NOW SOME MORE SERIOUS SHIT. THE DEMO IS PROBABLY THE BIGGEST EVER PRODUCED ON THE ST. IT HAS AT LEAST 20 SCREENS, MOSTLY BY THE "
	DC.B "LOST BOYS, WITH SPECIAL GUEST SCREENS BY DIGITAL INSANITY, FOXX AND ANDY THE ARFLING (BBC). SPECIAL THANKS MUST GO TO IAN, PHIL AND SIMON (THEY'RE PESTERING ME TO PUT THIS IN!) FOR INVALUABLE CONSTRUCTIVE CRITISM" "
	DC.B " (OH TIM THATS FUCKING CRAP THAT IS!! DO IT LIKE THIS). WE ARE CURRENTLY HALF WAY THROUGH A BOTTLE OF VODKA (WODKA IF YOUR GERMAN!) SO IF THE SPELLING DETERIORATES DURING THE SCROLL DON'T BLAM MEE ...???! I GUESS WE SHOULD BE DOING THE "
	DC.B " GREETINGS ABOUT NOW BUT THATS BLOODY BORING SO YOU'LL HAVE TO WAIT A BIT. WE SHOULD ACTUALLY HAVE BEEN AT THE NIGHTBREED COPY PARTY BUT THEY CANCELLED IT SO WE DECIDED TO GET PISSED INSTEAD (PRIORITIES RIGHT THERE I THINK!).  "
	DC.B " WELL TOMORROW (19TH) IS MY (MANIKIN'S) BIRTHDAY (19 AT LAST!) AT THIS MOMENT IT IS SPAZ'S BIRTHDAY (HE IS 16 NOW!) AND AT THIS VERY MOMENT HE IS PROBABLY ROLLING AROUND IN A DRUNKEN STUPOR AT HIS PARTY (AFTER HALF A PINT OF TIZER!!) "
	DC.B ", (DOGCOCK) THAT FOR THE LESS WELL EDUCATED WAS A COMMENT FROM THE NORTHERN TWATLANDS (LUV MANIKIN). (BETTER THAN BEING A SOUTHERN, SHANDY DRINKIN PIECE OF SHITE. LUV IAN ...) (THIS IS GETTING A BIT AREAIST ISN'T IT,  LUV SIMON,"
	DC.B " ALTHOUGH I HAVE TO AGREE BEING A PROFESSIONAL NORTHERNER MYSELF)  (DEUTSCHLAND UBER ALLES, LUV SAMMY JOE)  WHO WON THE WAR SHITBREATH, LUV MANIKIN, IAN AND SIMON. END OF CONVERSATION!!!!!! "
	DC.B " OK ENOUGH OF THAT SHIT, THE LOST BOYS ARE NOW ONLY A 3 MEMBER CREW, THAT BEING SAMMY JOE, SPAZ AND MANIKIN, SPROG HAS NOW LEFT THE LOST BOYS TO PERSUE THE FULL TIME JOB OF BEING A SMALL LONG HAIRED HEAVY METAL FREAK!!! ( HE ACTUALLY DIED"
	DC.B " IN A CAR CRASH IN SWEDEN, LIKE CLIFF BURTON??? ). SPAZ HAS DONE MOST OF THE GRAPHICS IN THIS DEMO, ALL CODING ON ALL LOST BOYS SCREENS IS BY MANIKIN, SAMMY JOE LOOKED AFTER ALL THE OTHER INTERESTS OF "
	DC.B " THE LOST BOYS CORPORATION ( SOUNDS GOOD HUH!!). THAT BEING THE LOST BOYS PUBLIC DOMAIN LIBRARY (ADDRESS ELSEWHERE!!) "
	DC.B " WELL I GUESS THAT YOU HAVE NOW WAITED LONG ENOUGH SO NOW IT IS TIME FOR THE GREETINGS:- "
	DC.B " WELL ALMOST TIME FOR THE GREETINGS FIRST WE HAVE AN APPEAL TO MAKE. THIS GOES TO ALL DEMO WRITERS, IF IN STOS, ASSEMBLER, GFA, OR ANY OTHER LANGUAGE. WE WANT YOUR DEMOS!!!  IT SOMETIMES SEEMS TO TAKE US MONTHS TO GET HOLD OF DEMOS. "
	DC.B " WE ALWAYS RETURN DISKS USUALLY WITH SOMETHING NICE ON THEM AND WE WILL ALSO SPREAD YOUR PRODUCTS FURTHER AS WELL, SO PLEASE LET US HAVE THE FRUITS OF YOUR LOINS ( OR EVEN YOUR COMPUTERS!!!)   AND NOW BY POPULAR DEMAND. "
	DC.B " FIRST OF ALL THE VERY SPECIAL GREETINGS. MEGA GREETING AND MEGA THANKS GO TO CIA OF GALTAN 6 FOR SAVING MY LIFE AND MY MENU AND FOR AIDING AND ABETTING THE CRIME OF THE CENTURY!!!, "
	DC.B "HOMEBOY (S.T.M. A VERY GOOD SOFTWARE SUPPLIER!!)"
	DC.B ", STEFAN POSTHUMA AND RICHARD KARSMAKERS ( 2 OF THE ZANIEST GUYS EVER TO GRACE THE EARTH. SEE YOU SOON GUYS, WE ARE LOOKING FORWARD TO IT!!)  (FOR A SPECIAL LITTLE MESSAGE FROM RICK THE DICK LOOK AT TRACK 81 WITH DISK MONITOR!!)"
	DC.B ", TEX (THE OLD MEN OF THE DEMO WORLD!"
	DC.B " QUITE AN ACHIEVMENT WHEN YOUR ALL UNDER 25! A SPECIAL GREETING TO THE INCREDIBLY BIG ONE! HI ES!), THE CAREBEARS (YOUR CUDDLY DEMOS WERE THE BEST, BUT WE THINK THAT WE HAVE BEATEN YOU, UNLESS YOU KNOW BETTER!"
	DC.B " AND OF COURSE YOU DO SO NOW I WAIT WITH BAITED BREATH FOR YOUR NEXT DEMO. ALSO MANY THANKS FOR YOUR HELP NICK!!!),"
	DC.B " PETER NEWCOMBE ( FOR SUPPORT BEYOND THE CALL OF DUTY, IE THE PC 	SHOW STAND, AND FOR BEING ONE OF THE MOST GENUINELY NICE GUYS WE HAVE EVER HAD THE PLEASURE OF MEETING!)"
	DC.B ", CAMY MAERTENS AND SIMON RUSH AT BUDGIE UK (GREAT IDEA GUYS, MAKING MONEY FROM DEMOS, WE BELIEVE IT CAN BE DONE!!!)"
	DC.B ", ALL THE GUYS AT THALION SOFTWARE ESPECIALLY HOLGER (SEE YOU SOON, AND THANKS FOR THE JOB ,IT IS A CHANCE IN A MILLION!!), MUG (MIKE YOU TOO ARE ONE OF THE NICEST BLOKES WE HAVE EVER MET, THANKS FOR YOUR FRIENDSHIP!!)"
	DC.B ", THE REPLICANTS (WE BELIVE THAT YOUR DISK SPREADING METHOD IS THE FUNNIEST EVER, MAYBE YOU SHOULD BE THE TRANS-GRANDE-VITESSE CREW!!!), FOXX ( YET ANOTHER PERSON WITH WHOM I AM GREATLY LOOKING FORWARD TO MEETING"
	DC.B " UP WITH!!), ANDY THE ARFLING , PHIL AND CRISPY NOODLE ( YOU ARE THE ONLY OTHER LONDON CREW WITH ANY STYLE, THANKS (ANDY) FOR THE SCREEN AND CRISPY FOR THE WICKED MUSIC!! AND PHIL FOR THE WICKED WIT. BY THE WAY WHAT IS YOUR "
	DC.B " CREW TOTAL FOR WRITTEN OFF CARS NOW!!!), SEWER RAT OF SEWERSOFT ( THE FURTHEST CONTACT WE GOT FROM THE DEF DEMO!! I THINK AUSTRALIA IS ABOUT AS FAR AS IT IS LIKELY TO GET!!!), OVERLANDERS ( YOUR DEMO MENUS ARE VERY GOOD, )"
	DC.B " BUT WE TRUST THAT THIS WILL NOT BE APPEARING IN THEM !!!), AUTOMATION ( FOR THE BEST GAMES COMPACTS ON THE ST, IN PARTICULAR TO VAPOUR FOR HACKING CHAOS AND HENCE ALMOST CAUSING THE DOWNFALL OF CIVILIZATION AS WE KNOW IT!), "
	DC.B " NEWLINE ( WHEN IS YOUR BIG ALLIANCE DEMO COMING OUT??), TREVOR 'THE PERVE' ( THE DREAM WEAVERS ), HACKATARIMAN (ANOTHER MEGA SOFTWARE SUPPLIER FROM ENGLAND! I THINK YOU SHOULD BE NEAR THE START OF THIS LIST OOOPS! ),"
	DC.B " SOME OF THE INNER CIRCLE (ST SQUAD, NICE TWISTER! DYNAMIC DUO, NICE DEMOS, GIZMO OF ELECTRONIC IMAGES, LONG TIME NO HEAR GUY!) "
	DC.B ", HARVEY LODDER ( GOOD PD DEMOS.), THE SKUNK (THANKS FOR THE DISKS AND THE USE OF THE MEGA ST AT 16 BIT FAIR!! AND FOR ALL YOUR SUPPORT, HOPE THIS SELLS WELL FOR BOTH OUR SAKES!), 16-32 BIT PD LIBRARY (THANKS FOR THE "
	DC.B " DISKS AND THE SUPPORT!), PAGE 6 (LES ELLINGHAM AND YOUR CHARMING WIFE FOR PUTTING UP WITH OUR CONSTANT USE OF YOUR ST AT THE 16 BIT FAIR!), SOUTH WEST SOFTWARE LIBRARY, ROUND TABLE PD, ST CLUB, OLIVER (FROM GENEVA, NICE HOLIDAY"
	DC.B " LAST SUMMER, THANKS LUV SAMMY JOE!), DYLAN, MATTY, DEREK ( YOU HAVE THE BEST DOPE DEREK THANKS FOR MAKING MY BIRTHDAY A HIGH POINT!)"
	DC.B ", VOLKER (AMIGA GUYS ARE NOT ALL BAD!), HENNING (THE GUARDIAN ANGEL AND ALL HIS FRIENDS), N.HAAS (SHADOW FAX), OBERJE (NICE NEW YEAR DEMO GUY!!), LES PLAYER ( FROM GFA DATA MEDIA UK, THANKS FOR THE TRANSLATION JOBS! YOU MAKE GREAT "
	DC.B " PRODUCTS!), MICRODEAL (IN PARTICULAR JOHN SYMES AND ROB POVEY, QUARTET IS SIMPLY THE BEST 4 TRACK WE HAVE EVER SEEN!!!), MJS, THE GARLIC EATERS (GOOD DEMO), NIGHTBREED (SHAME YOU PARTY DID NOT COME OFF BUT WE DID AT LEAST GET OUR MAIN "
	DC.B " SCROLL WRITTEN INSTEAD!!), THE BATS CREW (LATEST CONTACTS IN ISRAEL, GOOD DEMO!), KRUZ CREW (YEAH, THE FINS!!!), THE EQUALIZER, PIXEL TWINS, MPH, PREDATORS, JOHN PASS (DEMO CLUB!), WHACK, S.C.WEDGE, THE CONSTELLATIONS (THANKS FOR ALL"
	DC.B " THE FRENCH DEMOS ANDROMEDA.), AENIGMATICA (AGAIN I AM REALLY SORRY!),"
	DC.B ", DAD AND FRIENDS (NO NOT MY FATHER, THERE FROM FRANCE!!), THE ALIENS, MAX HEADROOM (LADDIE!!), AXESS, ALEX NGUYEN, AGGRESSION (XENIT AND LANCELOT!), WATCHMAN, POMPEY PIRATES  " 
	DC.B "     WELL THAT JUST ABOUT COVERS ALL OF OUR IMMEDIATE FRIENDS AND CONTACTS (I'M PRAYING WE HAVE NOT FORGOTTEN ANYONE!!) NOW SOME GREETINGS TO PEOPLE WE DON'T (IN ALL CASES) KNOW, BUT DO GREATLY ADMIRE!  " 
	DC.B "      SYNC (GREAT SCREEN ON SOWATT), OMEGA (ANOTHER GREAT SCREEN ON SOWATT, BEST SINUS DOTS I HAVE SEEN!, AND NEW YEAR DEMO 2 IS EXCELLENT!), MEDWAY BOYS (NICE COMPACTS, I AM GLAD YOU LIKE OUR ONE PLANE SCROLLER FONT OMEN!!), "
	DC.B " ALL MEMBERS OF THE UNION NOT COVERED IN THE BIT ABOVE (LEVEL 16, DELTAFORCE, SOFTRUNNER GROUP ETC ), XXX INTERNATIONAL, FLEXIBLE FRONT, 2 LIFE CREW, NO CREW, VISION, NORDIC CODERS, FUSION, BLACK MONOLITH CREW, GIGABYTE CREW, "
	DC.B " BOSS, COPY SERVICE STUTTGART (SORRY WE COULD NOT MAKE YOUR COPY PARTY LAST YEAR, IT SOUNDED FUN!), TNT CREW (EXCELLENT DEMOS AND AS FOR NO SECOND PRIZE WELL YOU NEARLY BLEW MY HEAD OFF!), PAULO SIMOES (NICE DEMO, HAVE YOU DONE ANY "
	DC.B "MORE!), THE ART MACHINE, STCS,  MCA,  STEVE BAK, JOHN M PHILLIPS, ALEX HERBERT, THE BULLFROG TEAM, THE SAN DIEGO COMPUTER CLUB           WELL I THINK THAT JUST ABOUT COVERS EVERY OWNER OF AN ST IN THE WORLD!!"
	DC.B " IF YOUR NOT HERE PARTICULARLY IF YOU THINK YOU SHOULD BE THEN I AM REALLY SORRY BUT DON'T BLAME ME I HAVE JUST SPENT OVER AN HOUR TRYING TO REMEMBER EVERYONE!! "
	DC.B " WE HAVE HAD A REQUEST FROM A GOOD FRIEND OF OURS (S.T.M.) TO GREET A FEW OF HIS FRIENDS SO HERE GOES...-  ALLAN IN SUFFOLK, MARG AND BILLY BIZ, ROBBIE G!, PAUL RENE AND LYNDA DUBOIS    HOPE THATS OK STAN!!!   "
	DC.B " AND NOW FOR THAT OTHER OLD FAVOURITE THE FUCKING GREETINGS, THEY GO TO   GRIFF OF THE RESISTANCE, FOR SOMEONE WHO'S BALLS HAVEN'T DROPPED YET YOU SURE ARE A LITTLE WANKER, YOUR SCREEN WAS SUCH A TOTAL PIECE OF RIPPED SHIT THAT WE DECIDED "
	DC.B "NOT TO INCLUDE IT, I DON'T LIKE BEING SLAGGED OFF PARTICULARLY BY SOMEONE WHO HAS NO ORIGINAL IDEAS AND A TOTAL LACK OF STYLE AND I ALSO DON'T LIKE PEOPLE WHO SPREAD UNFINISHED COPIES OF MY SCREENS WHEN SPECIFICALLY ASKED NOT TOO, YOU "
	DC.B " REALLY ARE THE SHITTIEST LITTLE KID I HAVE EVER MET."
	DC.B "   MORE FUCKS GO TO THE PHANTOM, THE PROFESSIONAL DEMO WRITER!!, JOHN SYMES CAN'T HAVE SEEN YOUR DEMO BEFORE HE "
	DC.B "PAID YOU BECAUSE IF HE HAD THEN HE WOULD PROBABLY HAVE DIED LAUGHING JUST LIKE WE DID! AS FOR YOUR CLAIM TO HAVE GOT SYNC SCROLLING WORKING IN GFA BASIC, ANDY THE ARFLING AND I NEARLY DIED LAUGHING AT YOU!. GO ON A DIET YOU FAT BASTARD!! "
	DC.B " LOVE MANIKIN, SAMMY JOE AND SPAZ OF THE LOST BOYS!!!       AND THAT COVERS THE FUCKING GREETINGS, BELIEVE ME THESE 2 GUYS REALLY DESERVE EVERYTHING THEY GET, I QUITE LOOK FORWARD TO SEEING WHAT THEY HAVE TO SAY TO US IN THEIR NEXT 'DEMOS'."
	DC.B "   WELL THAT WAS PROBABLY THE LONGEST GREETINGS LIST YET SEEN IN A DEMO, SOME 8K OR DO I THINK!!!"
	DC.B "      IF YOU WISH TO CONTACT THE LOST BOYS ABOUT PD OR ANYTHING ELSE THEN OUR ADDRESS IS AS FOLLOWS   THE LOST BOYS,   22 O X F O R D   R O A D,   T E D D I N G T O N,  M I D D X,  T W 1 1   O P Z,  ENGLAND THIS WILL NOW BE REPEATED AGAIN."
	DC.B "     THE LOST BOYS,   22 O X F O R D   R O A D,   T E D D I N G T O N,  M I D D X,  T W 1 1   O P Z,  ENGLAND.    IF YOU WANT MORE INFORMATION ABOUT THE LOST BOYS PD LIBRARY THEN READ ALL ABOUT IT IN THE LOST BOYS PD SCREEN ON THIS DEMO!!"
	DC.B " AND NOW A LITTLE ADDED EXTRA, WE RECENTLY RECEIVED A LETTER FROM JUST ABOUT THE MOST UNBELIEVABLE PLACE EVER. JUST TAKE A GUESS WHERE IT CAME FROM.     SPAIN          NO, RUN OF THE MILL           INDIA        BORING IN COMPARISON "
	DC.B "        NO THE LETTER CAME FROM OF ALL PLACES   MOSCOW IN THE U.S.S.R.  WE WERE SO TOTALLY FLABBERGASTED BY THIS THAT WE ALL SIMULTANEOUSLY FELL OFF OUR CHAIRS. SO AN ABSOLUTELY ENORMOUS MEGA- GIGA GREETING GOES TO DENIS ZUBKOW. "
	DC.B " WE REALLY COULD NOR HAVE BEEN MORE SURPRISED IF YOU HAD TRIED. IT MADE OUR YEAR!!! "
	DC.B "    WELL NOW AFTER A SHORT BREAK ( ABOUT 2 MONTHS!!) THE DATE IS NOW FRIDAY 13TH APRIL 1990, THE MINDBOMB DEMO IS ALL BUT FINISHED AND TOMORROW I (MANIKIN) AM GOING TO HOLLAND TO VISIT STEFAN POSTHUMA (DIGITAL INSANITY) AND TOGETHER "
	DC.B " WE WILL GO TO THALION SOFTWARE WHERE THIS DEMO WILL BE WELL AND TRULY FINISHED AMIDST MUCH DRINKING AND BEING MERRY IN MY PART!!  ALSO AT THALION THIS WEEK ARE ALL MEMBERS OF TCB AND TEX PLUS VARIOUS OTHER PERSONS OF DISTINCTION IN THE "
	DC.B "DEMO WORLD SO I THINK THIS IS A VERY GOOD PLACE TO COMPLETE THIS PROJECT. "
	DC.B " AND NOW A SMALL ANNOUNCEMENT ON BEHALF OF THE DELTA FORCE. THERE WILL BE A COPY PARTY AT THE BEGINNING OF JUNE NEAR STUTTGART IN WEST GERMANY. CONTACT THEM IF YOU WANT DETAILS!!! "
	DC.B " WELL DUE TO THE FACT THAT WE HAVE ALMOST NO MEMORY LEFT AT ALL THIS MAIN SCROLL TEXT WILL HAVE TO END JUST ABOUT NOW, THE SPURIOUS BULLSHIT WILL HOWEVER BE CONTINUING IN THE OTHER SCREENS ON THIS DEMO SO IF YOU LIKE READING THIS KIND "
	DC.B " OF CRAP THEN YOU'L HAVE TO SWAP SCREENS AND READ IT SOMEWHERE ELSE.   LETS WRAP!!!       "
	DC.B	"                      ",$FF
	EVEN

SCROLLPOINT	DC.L SCROLLINE
ADDOFF	DC.L 0
***************************
* VARIABLES AND ALL SORTS OF OTHER SHIT
***************************

COUNT		DC.W -1

***************************************************
* THIS IS THE MAP FOR THE MAIN MENU.		  *
* EACH NUMBER REFERS TO A PRESHIFTED BLOCK OF     *
* GRAPHIX.					  *
***************************************************
	DS.W 320

MAPSTART
	*      1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32    33    34    35    36    37    38    39    40
  
	DC.W 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,36,36,00,36,00,00,36,36,36,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,36,36,36,00,00,00,36,36,00,36,36,00,36,36,00,00,00,00,00,00,00,00,00,00,00,00,00
	DC.W 00,00,00,00,00,00,00,00,00,00,00,00,00,36,36,36,00,36,36,36,36,00,36,36,00,00,00,00,00,00,00,00,00,00,07,05,05,05,05,05,06,00,00,00,00,00,00,00,00,00,00,00,00,17,36,17,00,00,00,00,36,00,36,00,00,36,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	DC.W 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,36,36,36,36,36,36,36,36,00,00,00,00,00,00,00,00,00,00,07,05,71,72,05,67,68,05,06,00,00,00,00,00,00,00,00,00,00,00,18,36,18,00,00,00,00,36,36,36,00,36,36,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	DC.W 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,36,36,36,36,36,00,00,00,00,00,00,00,00,00,00,00,07,05
SCRN15	DC.W 01,02,05
SCRN14	DC.W 01,02,05,06,08,09,00,00,00,00,00,00,00,00,00,19,36,19,00,00,00,00,00,36,36,36,36,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	DC.W 20,21,20,21,20,21,20,21,20,21,00,00,00,00,00,00,36,36,20,21,00,36,36,00,00,00,00,00,00,00,00,00,00,07,05,03,04,05,03,04,05,06,10,11,00,31,00,00,00,00,07,05,05,05,05,05,05,05,05,06,00,36,36,36,00,00,20,21,20,21,20,21,20,21,20,21,20,21,20,21
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,36,36,36,36,00,25,26,00,00,00,00,00,00,00,00,00,00,13,14,00,37,28,28,28,28,28,28,28,28,39,40,38,31,00,00,00,07,05,53,54,05,73,74,05,55,56,05,06,00,36,00,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,36,36,36,36,00,25,26,00,00,00,00,00,00,00,00,00,00,15,16,00,00,00,00,00,00,00,00,00,00,08,09,00,31,08,09,00,07,05
SCREEN7	DC.W 01,02,05
SCRN17	DC.W 01,02,05
SCREEN8	DC.W 01,02,05,06,36,36,00,00,00,25,26,22,23,22,23,22,23,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,37,28,28,38,36,36,36,00,25,26,08,09,00,00,00,00,00,00,00,00,32,33,00,00,00,00,00,00,00,00,00,00,10,11,00,31,10,11,00,07,05,03,04,05,03,04,05,03,04,05,06,36,00,00,00,00,25,26,24,65,66,24,00,00,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,37,28,28,38,36,00,00,00,25,26,10,11,00,00,00,00,00,00,00,31,34,35,31,00,00,00,00,00,00,00,00,37,28,28,28,28,39,40,28,28,28,28,28,28,28,28,28,28,28,28,28,28,38,00,00,00,25,26,24
SCRN13	DC.W 01,02,24,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,37,28,28,38,00,00,00,25,26,08,09,00,00,00,08,09,00,32,33,32,33,32,33,00,00,00,00,00,00,00,00,00,00,00,00,08,09,20,21,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,26,24,03,04,24,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,37,28,28,38,00,00,00,00,25,26,10,11,00,00,00,10,11,31,34,35,34,35,34,35,31,00,00,00,00,00,00,00,00,00,00,00,10,11,25,26,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,26,37,28,28,38,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,37,28,28,38,00,00,37,28,28,39,40,28,28,28,39,40,28,28,28,28,28,28,28,38,00,00,00,00,00,00,07,05,05,06,00,08,09,25,26,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,26,20,21,20,21,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,37,28,28,38,00,00,00,00,00,00,10,11,00,00,00,10,11,00,00,00,00,00,00,00,00,00,00,00,00,00,07,05,51,52,05,06,10,11,25,26,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,26,25,26,25,26,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,37,28,28,38,00,00,00,00,00,08,09,00,00,00,08,09,00,00,00,00,08,09,00,00,00,00,00,00,00,07,05
SCREEN6	DC.W 01,02,05,06,08,09,25,26,00,00,00,00,37,28,28,38,00,00,07,05,05,06,00,00,22,23,22,23,22,23,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,37,28,28,38,00,00,00,10,11,00,00,00,10,11,00,00,00,00,10,11,00,00,00,00,00,00,00,07,05,03,04,05,06,10,11,25,26,00,00,20,21,00,37,28,38,00,07,05,57,58,05,06,00,00,00,00,00,00,00,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,07,05,05,06,00,00,00,08,09,00,00,00,08,09,00,00,00,37,39,40,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,38,07,69,70,06,00,31,00,00,07,05
SCREEN9	DC.W 01,02,05,06,00,00,00,00,00,00,00,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05,45,46,05,06,00,00,10,11,00,00,00,10,11,00,00,00,00,10,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,07,05
SCRN16	DC.W 01,02,05,06,31,00,00,07,05,03,04,05,06,00,00,00,00,00,00,00,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05
SCREEN3B
	DC.W 01,02,05,06,00,00,08,09,00,00,00,08,09,00,00,00,00,08,09,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,07,05,03,04,05,06,31,00,00,37,28,28,28,28,28,28,28,28,28,28,28,38,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05,03,04,05,06,00,00,10,11,00,00,00,10,11,00,00,00,00,10,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,37,28,28,38,00,31,00,00,00,00,00,00,00,00,00,20,21,20,21,20,21,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,37,28,28,28,28,28,28,28,28,28,28,38,00,00,08,09,00,00,00,37,39,40,28,28,28,28,28,28,28,28,28,38,00,00,00,00,00,00,00,00,00,00,00,00,00,31,00,00,00,00,00,00,00,00,00,25,26,25,26,25,26,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,10,11,00,00,00,00,10,11,00,00,00,00,12,00,00,12,00,00,00,32,33,00,00,00,12,00,00,00,12,12,12,12,00,00,00,07,05,05,06,00,00,25,26,25,26,25,26,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,07,05,05,06,00,00,00,00,00,00,37,28,28,28,28,28,28,28,39,40,38,00,00,12,12,12,12,12,12,00,00,34,35,00,12,12,12,12,00,00,12,12,12,12,12,00,07,05,59,60,05,06,00,25,26,25,26,25,26,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05,43,44,05,06,08,09,00,00,00,00,00,00,00,00,00,00,00,10,11,00,00,12,12,00,12,12,00,12,12,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,07,05
SCREEN10	
	DC.W 01,02,05,06,00,25,26,25,26,25,26,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05
SCREEN2B
	DC.W 01,02,05,06,10,11,00,00,00,00,00,00,00,00,00,00,00,08,09,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,07,05,03,04,05,06,00,25,26,25,26,25,26,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,07,05,03,04,05,06,08,09,00,00,00,00,00,00,00,00,00,00,00,10,11,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,37,28,28,28,28,38,00,00,25,26,25,26,25,26,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,37,28,28,28,28,28,39,40,28,28,38,00,00,00,00,00,00,00,00,08,09,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,00,00,00,00,00,00,00,25,26,25,26,25,26,08,09,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,08,09,00,00,00,00,00,00,00,00,00,00,00,10,11,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,32,33,00,00,00,00,00,25,26,25,26,25,26,10,11,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,10,11,00,00,00,00,00,00,00,00,00,00,00,08,09,00,00,12,12,00,12,12,00,12,12,05,63,64,05,12,12,00,12,12,00,12,12,00,12,12,00,34,35,00,00,00,00,00,25,26,22,23,22,23,08,09,22,23,22,23,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,08,09,00,00,00,00,00,00,00,00,00,00,00,10,11,00,00,12,12,00,12,12,00,12,12,05
SCREEN12
	DC.W 01,02,05,12,12,00,12,12,00,12,12,12,12,12,00,13,14,00,10,11,00,00,25,26,07,05,05,06,10,11,00,00,00,00,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,10,11,00,00,00,07,05,05,06,00,00,00,00,08,09,00,00,12,12,00,12,12,00,12,12,05,03,04,05,12,12,00,12,12,00,12,12,12,12,00,00,15,16,00,08,09,00,00,25,26,05,61,62,05,08,09,00,00,00,17,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,08,09,00,00,07,05,47,48,05,06,00,00,00,10,11,00,00,37,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,39,40,38,00,25,26,05
SCREEN11
	DC.W 01,02,05,10,11,00,32,33,18,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,00,00,00,00,00,10,11,00,00,07,05
SCREEN4B
	DC.W 01,02,05,06,00,00,00,08,09,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,08,09,00,00,25,26,05,03,04,05,08,09,00,34,35,19,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,27,00,00,00,00,08,09,00,00,07,05,03,04,05,06,00,27,00,10,11,00,00,12,12,12,12,00,00,00,12,12,12,00,00,00,00,12,00,00,12,00,00,00,12,12,12,12,00,00,10,11,00,00,25,26,37,28,28,28,28,28,28,28,28,38,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,37,28,28,28,28,28,28,39,40,28,28,28,28,28,28,28,28,28,28,28,28,28,28,38,12,12,12,12,12,00,12,12,12,12,12,00,00,12,12,12,12,12,12,00,00,12,12,12,12,12,00,08,09,00,00,25,26,20,21,20,21,20,21,20,21,20,21,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,20,21,20,21,00,08,09,00,00,00,00,00,00,00,24,00,00,00,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,10,11,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,25,26,25,26,00,10,11,00,00,00,00,00,00,00,24,00,00,00,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,08,09,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,00,00,00,25,26,25,26,00,08,09,00,00,00,00,00,00,00,24,00,00,00,00,00,00,00,12,12,12,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,12,12,00,00,10,11,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,31,00,00,25,26,25,26,00,10,11,00,00,00,00,00,00,00,24,00,00,00,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,08,09,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,31,00,00,25,26,25,26,00,08,09,00,00,07,05,05,06,00,24,00,00,00,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,00,10,11,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,31,00,00,20,41,42,21,00,10,11,00,07,05,49,50,05,06,24,00,00,00,00,00,00,00,12,12,00,12,12,00,12,12,00,12,12,00,12,12,25,75,76,26,12,12,00,12,12,00,12,12,00,08,09,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 25,26,25,26,25,26,25,26,25,26,32,33,00,24
SCREEN1B
	DC.W 01,02,24,00,08,09,00,07,05
SCREEN5	DC.W 01,02,05,06,24,00,00,00,00,00,00,00,12,12,12,12,12,00,12,12,00,12,12,00,12,12,05
SCRN18	DC.W 77,78,05,12,12,00,12,12,12,12,12,00,10,11,00,00,25,26,25,26,25,26,25,26,25,26,25,26,25,26
	DC.W 22,23,22,23,22,23,22,23,22,23,34,35,31,24,03,04,24,00,10,11,00,07,05,03,04,05,06,24,00,00,27,27,00,00,00,12,12,12,12,00,00,00,12,12,12,00,00,12,12,05,79,80,05,12,12,00,12,12,12,12,00,00,08,09,00,00,22,23,22,23,22,23,22,23,22,23,22,23,22,23
	DC.W 29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29
	DC.W 30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,81,82,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
	REPT 6
	DC.W 30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30
	ENDR
MAPEND

MAPPOINTER	DC.L MAPSTART

BLANK	DS.L 8


***********************
* VARIABLES
***********************

SCROLLBASE	DC.L $70000
BASE	DC.L $70000
DIR	DC.L 160
VBLIND	DC.B 0
HBLIND	DC.B 0
OLDSSP	DC.L 0
L1D00	DC.W 0
L1D02	DC.W $21
L1D04	DC.W 0
L1D06	DC.W 0
L1D08	DC.L 0

L1D10	DC.W 0

LF536	DC.W 0
LF53A	DC.W 0
LF53C	DC.W 0

	DS.L 100
OURSTACK	
MUSIC	INCLUDE "A:\MUSIC\MUSIC.S"
MAN	INCBIN "A:\DATA\MAN.DAT"
MANMASK	DS.B 6144
BACK	INCBIN "A:\DATA\BACK.DAT"
FONT1	INCBIN "A:\SCROLLIN.ES\MEGADETH.FON"
GRAPHIX0	INCBIN "A:\DATA\BLOCKS.DAT"
GRAPHIX4
GRAPHIX8 	EQU GRAPHIX4+NUMBLOCKS*256
GRAPHIX12	EQU GRAPHIX8+NUMBLOCKS*256
FONT2		EQU GRAPHIX12+NUMBLOCKS*256


