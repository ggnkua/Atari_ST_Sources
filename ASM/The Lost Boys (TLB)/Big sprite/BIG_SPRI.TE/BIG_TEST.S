******************************************************
* THIS IS THE NEW BIGSPRITE SCREEN, DESIGNED AND     *
* IMPLEMENTED BY MANIKIN BECAUSE SPROG IS A LITTLE   *
* ASSHOLE AND WOULDN'T GIVE ME THE CODE THAT HE HAD  *
* ALREADY WRITTEN.                                   *
******************************************************

SCREEN1		EQU $6E800	TWO SCREEN ADDRESSES
SCREEN2		EQU $77400
FONT2		EQU $5F800+$80000
FONT1		EQU $4CC00+$80000
SPRITEL		EQU $47C00+$80000
SPRITEO		EQU SPRITEL+128
SPRITES		EQU SPRITEO+128
SPRITET		EQU SPRITES+128
SPRITEB		EQU SPRITET+128
SPRITEY		EQU SPRITEB+128
SPRITEM		EQU SPRITEY+128
SPRITEI		EQU SPRITEM+128
SPRITEN		EQU SPRITEI+128
SPRITED		EQU SPRITEN+128
*************CURRENTLY CONFIGURED TO RUN ON 1 MEG MACHINE!!!!!!!

	CLR.L	-(SP)			SET SUPER VISOR
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADD.L	#6,SP

	MOVE.L D0,OLDSSP		PRESERVE STACK
	LEA OURSTACK,A7
	

FLUSH
	BTST.B #0,$FFFFFC00.W		FLUSH KEYBOARD PROCESSOR
	BEQ.S LETSGOF
	MOVE.B $FFFFFC02.W,D0
	BRA.S FLUSH
LETSGOF
	MOVEQ #$12,D0			TURN OFF MOUSE
	BSR IKBDS
	MOVEQ #$1A,D0			TURN OF JOYSTICKS
	BSR IKBDS


	LEA SCREEN1,A0			CLEAR SCREEN AREA
	MOVE.W #20479,D0
CL	CLR.L (A0)+
	DBF D0,CL

	MOVE.L #SCREEN2,D0		SET PHYSBASE
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
		
	MOVEQ #1,D0
	JSR 	MUSIC			INITIALIZE MUSIC
	BSR 	SORT_SCROLL		ARRANGE SCROLL TO MATCH FONT
	BSR	SHIFTER			SHIFT FONTS
	JSR 	SPRITEPRESHIFT		PRE SHIFT SPRITES
	BSR 	SHIFTIT			SHIFT GRAPHICS
	BSR 	MAKEUPSTARS		CREATE STARFIELD
	BSR 	HBLON			TURN ON HBLS

LOOP4	
	MOVE.W VP,D0			WAIT FOR VSYNC
LO	CMP.W VP,D0
	BEQ.S LO
	
	MOVE.L #SCREEN2,LOGBASE		SET PHYS
	MOVE.L LOGBASE,D0
	LSR.W #8,D0
	MOVE.L #OLD1,OLDSPRITE
	MOVE.L D0,$FFFF8200.W
	MOVE.L #OLDSTARS,OLDSTARPOINT
	BSR 	ERASESUB		
	JSR 	REPSPRITE
	BSR 	SCROLL1
	BSR 	DOSIGN			SIGN
	BSR 	STARSSUB
	JSR 	DOSPRITE

*	MOVE.W #$700,$FFFF8240.W
	MOVE.W VP,D0			VSYNC
LO1	CMP.W VP,D0
	BEQ.S LO1
	
	MOVE.L #SCREEN1,LOGBASE		SET PHYS
	MOVE.L LOGBASE,D0
	LSR.W #8,D0
	MOVE.L D0,$FFFF8200.W
	MOVE.L #OLDSTARS1,OLDSTARPOINT
	MOVE.L #OLD2,OLDSPRITE
	BSR 	ERASESUB
	JSR 	REPSPRITE
	BSR 	SCROLL1
	BSR 	DOSIGN			SIGN
	BSR 	STARSSUB
	JSR 	DOSPRITE

	CMP.B #$39,KBUFF		CHECK FOR SPACE BAR
	BEQ.S ENDROUTINE		END IF PRESSED

	BRA LOOP4

***********************************
* THIS IS WHERE IT GOES WHEN THEY *
* GET BORED.                      *
***********************************

ENDROUTINE
	MOVEQ #$16,D0			TURN JOYS BACK ON
	BSR IKBDS
	MOVEQ #8,D0			TURN MOUSE BACK ON
	BSR IKBDS
	BSR HBLOFF			TURN OFF HBLS
	MOVEQ #0,D0
	JSR 	MUSIC
	MOVEQ #$16,D0			TURN JOYS BACK ON
	BSR IKBDS
	MOVEQ #8,D0			TURN MOUSE BACK ON
	BSR IKBDS
	MOVE.L OLDSSP,-(SP)		OLD STACK
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADD.L	#6,SP
	CLR.W	-(SP)
	TRAP	#1

*********************************
* NO BOTTOM BORDER ROUTINE      *
*********************************

VP	DC.W 0

HBLON
	MOVE.L $118.W,OLDKEY
	BCLR #6,$FFFFFA09.W			PUT IN OUR NEW 
	MOVE.L #KEYVEC,$118.W		KEY VECTOR
	BSET #6,$FFFFFA09.W
	MOVE.L $120.W,OLDTB		SAVE INTERRUPTS
	MOVE.L $70.W,OLDVBL
	MOVE.B $FFFFFA13.W,OLD13
	MOVE.B $FFFFFA07.W,OLD07
	MOVE.B $FFFFFA09.W,OLD09
	MOVE.B $FFFFFA0F.W,OLD0F
	MOVE.B $FFFFFA11.W,OLD11
	MOVE.B $FFFFFA1B.W,OLD1B
	AND.B #$DF,$FFFFFA09.W		THEN SET UP OURS
	AND.B #$FE,$FFFFFA07.W
	MOVE.L #BOTTOM,$120.W
	MOVE.L #NEWVBL,$70.W
	OR.B #1,$FFFFFA07.W
	OR.B #1,$FFFFFA13.W
	RTS

HBLOFF	MOVE.W SR,-(SP)			TAKE OUT ALL OF OUR INTS
	MOVE.W #$2700,SR
	MOVE.B OLD07,$FFFFFA07.W
	MOVE.B OLD09,$FFFFFA09.W
	MOVE.B OLD0F,$FFFFFA0F.W
	MOVE.B OLD11,$FFFFFA11.W
	MOVE.B OLD1B,$FFFFFA1B.W
	MOVE.B OLD13,$FFFFFA13.W
	MOVE.L OLDTB,$120.W
	MOVE.L OLDVBL,$70.W
	MOVE.L OLDKEY,$118.W
	MOVE.W (SP)+,SR
	RTS

LOGBASE	DC.L 0
OLDSSP	DC.L 0				ALL THE VARIOUS
OLDPHYS	DC.L 0				THINGS TO BE SAVED
OLDVBL	DC.L 0
OLDTB	DC.L 0
OLDKEY	DC.L 0
KBUFF	DC.W 0
OLD07	DC.B 0
OLD09	DC.B 0
OLD0F	DC.B 0
OLD11	DC.B 0
OLD1B   DC.B 0
OLD13   DC.B 0
	even

KEYVEC	
	MOVE.W D2,-(SP)
	MOVE.B $FFFFFC00.W,D2
	BTST #7,D2
	BEQ.S VECTOREND
	MOVE.B $FFFFFC02.W,D2
	MOVE.B D2,KBUFF
	BCLR #6,$FFFFFA11.W
VECTOREND
	MOVE.W (SP)+,D2
	RTE

NEWVBL
	MOVEM.L A0-A6/D0-D7,-(SP)	VBL ROUTINE
	CLR.B $FFFFFA1B	.W		SET UP TB DATA
	MOVE.B #159,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #SCROLLCOL,$120.W
	LEA $FFFF8240.W,A0			RESET COLORS
	MOVEM.L COLORS,D0-D7
	MOVEM.L D0-D7,$FFFF8240.W
	ADDQ.W #1,VP			DO VSYNC
	JSR MUSIC+8
	MOVEM.L (A7)+,A0-A6/D0-D7
	RTE
COLORS
	DC.L $00000777
	DC.L $05550050
	DC.L $03330700
	DC.L $07210500
	DC.L $02220044
	DC.L $00550066
	DC.L $00330600
	DC.L $04000300

SCROLLCOL
	CLR.B $FFFFFA1B.W
	MOVE.B #40,$FFFFFA21.W
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #BOTTOM,$120.W
	MOVE.L #$00000300,$FFFF8240.W	SET PALETTE
	MOVE.L #$04000510,$FFFF8244.W
	MOVE.L #$00000000,$FFFF8248.W
	MOVE.L #$00000000,$FFFF824C.W
	MOVE.L #$05200630,$FFFF8250.W   SET PALETTE
	MOVE.L #$06400750,$FFFF8254.W
	MOVE.L #$05550000,$FFFF8258.W
	MOVE.L #$00000000,$FFFF825C.W
	BCLR #0,$FFFFFA0F.W
	RTE

BOTTOM	CLR.B $FFFFFA1B.W			BOTTOM BORDER HBL
	MOVEM.L D0/A1,-(SP)
	MOVE.W #$FA21,A1
	MOVE.B #24,(A1)
	MOVE.B #8,$FFFFFA1B.W
	MOVE.L #TURNOFFHBL,$120.W
	MOVE.B (A1),D0
WAIT	CMP.B (A1),D0
	BEQ WAIT
	CLR.B $FF820A			60 HZ
	
	MOVEQ #2,D0			WAIT A BIT
NOPI2	NOP
	DBF D0,NOPI2	
	MOVE.B #2,$FFFF820A.W		THEN BACK TO 50HZ
	MOVEM.L (SP)+,D0/A1
	BCLR #0,$FFFFFA0F.W
	RTE

TURNOFFHBL
	CLR.L $FFFF8240.W
	CLR.L $FFFF8244.W
	CLR.L $FFFF8248.W
	CLR.L $FFFF824C.W
	CLR.L $FFFF8250.W
	CLR.L $FFFF8254.W
	CLR.L $FFFF8258.W
	CLR.L $FFFF825C.W

	BCLR #0,$FFFFFA0F.W
	RTE

***************************************
* IKBD	STRING SENDER		      *
***************************************

IKBDS	LEA $FFFFFC00.W,A1	
IKLOOP	MOVE.B (A1),D2
	BTST #1,D2
	BEQ.S IKLOOP
	MOVE.B D0,2(A1)
	RTS

	

**************************************
* ROUTINE FOR PUTTING THE SIGN ON    *
* THE SCREEN.			     *
**************************************
 
DOSIGN
	MOVE.L LOGBASE,A0
	MOVE.L TABPOINT,A1
	MOVE.W (A1)+,D0
	ADD.W (A1)+,A0
	CMP.L #XTABEND,A1
	BNE.S SJUMP
	LEA XTAB,A1
SJUMP	MOVE.L A1,TABPOINT

	MOVE.W D0,D1
	AND.L #15,D1			FIND FRAME
	MULU #10560,D1
	LEA LOGODAT,A1
	ADD.L D1,A1

	AND.W #$FFF0,D0			FIND WORD ON LINE
	LSR.W #1,D0
	ADD.W D0,A0
	MOVEQ #0,D0

	LEA -624(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 96(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 96(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 96(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 80(A0),A0

	LEA 16(A1),A1
ADDIT	SET 0
	REPT 6
	MOVEM.L (A1)+,D5-D7/A2-A6
	MOVEM.L D5-D7/A2-A6,ADDIT+16(A0)
	MOVEM.L (A1)+,D1-D7/A2
	MOVEM.L D1-D7/A2,ADDIT+48(A0)
	LEA 32(A1),A1
ADDIT	SET ADDIT+160
	ENDR

	REPT 10
	MOVEM.L (A1)+,D5-D7/A2-A6
	MOVEM.L D5-D7/A2-A6,ADDIT+16(A0)
	MOVEM.L (A1)+,D1-D6
	MOVEM.L D1-D6,ADDIT+48(A0)
	LEA 40(A1),A1
ADDIT	SET ADDIT+160
	ENDR
	MOVEM.L (A1)+,D5-D7/A2-A6
	MOVEM.L D5-D7/A2-A6,ADDIT+16(A0)
	MOVEM.L (A1)+,D1-D6
	MOVEM.L D1-D6,ADDIT+48(A0)
	LEA 24(A1),A1
ADDIT	SET ADDIT+160

	REPT 39
	MOVE.L D0,ADDIT-8(A0)
	MOVE.L D0,ADDIT-4(A0)
	MOVE.L D0,ADDIT+96(A0)
	MOVE.L D0,ADDIT+100(A0)
	MOVEM.L (A1)+,D1-D7/A2-A6
	MOVEM.L D1-D7/A2-A6,ADDIT(A0)
	MOVEM.L (A1)+,D1-D7/A2-A6
	MOVEM.L D1-D7/A2-A6,ADDIT+48(A0)
ADDIT	SET ADDIT+160
	ENDR
	LEA 8(A1),A1
	REPT 32
	MOVEM.L (A1)+,D3-D7/A2-A6
	MOVEM.L D3-D7/A2-A6,ADDIT+8(A0)
	MOVEM.L (A1)+,D1-D7/A2-A4
	MOVEM.L D1-D7/A2-A4,ADDIT+48(A0)
	LEA 16(A1),A1
ADDIT	SET ADDIT+160
	ENDR
	MOVEM.L (A1)+,D3-D7/A2-A6
	MOVEM.L D3-D7/A2-A6,ADDIT+8(A0)
	MOVEM.L (A1)+,D1-D7/A2
	MOVEM.L D1-D7/A2,ADDIT+48(A0)
ADDIT	SET ADDIT+160
	LEA 40(A1),A1
	REPT 20
	MOVEM.L (A1)+,D1-D7/A2-A4
	MOVEM.L D1-D7/A2-A4,ADDIT+24(A0)
	LEA 56(A1),A1
ADDIT	SET ADDIT+160
	ENDR

	LEA 17480(A0),A0

	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 144(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 144(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	LEA 144(A0),A0
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+
	MOVE.L D0,(A0)+

	RTS

SHIFTIT
	MOVE.W #14,D0
	LEA LOGODAT1,A1
	LEA LOGODAT,A0
LOOPS
	MOVE.W #109,D1
LOOP1S	
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+

	DBF D1,LOOP1S

	MOVE.L A0,A1
	MOVE.W #109,D1
LOOP2S
	ROXR.W (A1)
	ROXR.W 8(A1)
	ROXR.W 16(A1)
	ROXR.W 24(A1)
	ROXR.W 32(A1)
	ROXR.W 40(A1)
	ROXR.W 48(A1)
	ROXR.W 56(A1)
	ROXR.W 64(A1)
	ROXR.W 72(A1)
	ROXR.W 80(A1)
	ROXR.W 88(A1)
	LEA 2(A1),A1
	ROXR.W (A1)
	ROXR.W 8(A1)
	ROXR.W 16(A1)
	ROXR.W 24(A1)
	ROXR.W 32(A1)
	ROXR.W 40(A1)
	ROXR.W 48(A1)
	ROXR.W 56(A1)
	ROXR.W 64(A1)
	ROXR.W 72(A1)
	ROXR.W 80(A1)
	ROXR.W 88(A1)
	LEA 2(A1),A1
	ROXR.W (A1)
	ROXR.W 8(A1)
	ROXR.W 16(A1)
	ROXR.W 24(A1)
	ROXR.W 32(A1)
	ROXR.W 40(A1)
	ROXR.W 48(A1)
	ROXR.W 56(A1)
	ROXR.W 64(A1)
	ROXR.W 72(A1)
	ROXR.W 80(A1)
	ROXR.W 88(A1)
	LEA 2(A1),A1
	ROXR.W (A1)
	ROXR.W 8(A1)
	ROXR.W 16(A1)
	ROXR.W 24(A1)
	ROXR.W 32(A1)
	ROXR.W 40(A1)
	ROXR.W 48(A1)
	ROXR.W 56(A1)
	ROXR.W 64(A1)
	ROXR.W 72(A1)
	ROXR.W 80(A1)
	ROXR.W 88(A1)
	LEA 90(A1),A1

	DBF D1,LOOP2S

	DBF D0,LOOPS
	RTS


**********************************
* THE SCROLL ROUTINES
*********************************

SCROLL1
	SUBQ.W #1,COUNT			
	BEQ NEWLET			GET NEW LETTER
	NOT.W IND			
	CMP.W #1,IND			ROUTINE 1 OR 2
	BNE SCROLL2

	LEA SCREEN1+25608,A1		MOVE BY ONE WORD (16 PIXELS)

	BSR STANDARD

	MOVE.L CHARPOS1,A0
	LEA SCREEN1+25752,A1
	BSR STANDARD2
	MOVE.L A0,CHARPOS1
	RTS

SCROLL2
	LEA SCREEN2+25608,A1

	BSR STANDARD

	MOVE.L CHARPOS2,A0
	LEA SCREEN2+25752,A1
	BSR STANDARD2
	MOVE.L A0,CHARPOS2
	RTS
STANDARD2
ADDIT	SET 0
	REPT 63
	MOVE.L (A0)+,ADDIT(A1)
	MOVE.L (A0)+,ADDIT+4(A1)
ADDIT	SET ADDIT+160
	ENDR
	LEA 8(A0),A0
	RTS

STANDARD
	REPT 63	
	MOVEM.L (A1)+,D0-D7/A2-A6
	MOVEM.L D0-D7/A2-A6,-60(A1)
	MOVEM.L (A1)+,D0-D7/A2-A6
	MOVEM.L D0-D7/A2-A6,-60(A1)
	MOVEM.L (A1)+,D0-D7/A2-A5
	MOVEM.L D0-D7/A2-A5,-56(A1)
	LEA 8(A1),A1
	ENDR
	RTS

NEWLET
	LEA SCREEN2+25608,A1

	BSR STANDARD

	MOVE.L CHARPOS2,A0
	LEA SCREEN2+25752,A1
	BSR STANDARD2
	MOVEQ #0,D7
	MOVEQ #0,D6
	MOVE.L SCROLLPOINT,A0

NEWLETTER
	MOVE.B (A0)+,D7
	MOVE.L A0,SCROLLPOINT
	CMPI.W #$FF,D7
	BEQ WRAP
	SUB.W #64,D7
	MOVE.B D7,D6
	LSL.W	#8,D6
	LSL.W 	#3,D6
	MULU #2560,D7
	LEA FONT2,A0
	LEA FONT1,A1
	ADD.L D6,A0
	ADD.L D7,A1
	MOVE.L A0,CHARPOS1

	LEA SCREEN2+25752,A0
ADDIT	SET 0
	REPT 15
	MOVEM.L (A1)+,D0-D7
	OR.L D0,ADDIT(A0)
	OR.L D1,ADDIT+4(A0)
	OR.L D2,ADDIT+160(A0)
	OR.L D3,ADDIT+164(A0)
	OR.L D4,ADDIT+320(A0)
	OR.L D5,ADDIT+324(A0)
	OR.L D6,ADDIT+480(A0)
	OR.L D7,ADDIT+484(A0)
ADDIT	SET ADDIT+640
	ENDR
	MOVEM.L (A1)+,D0-D5
	OR.L D0,ADDIT(A0)
	OR.L D1,ADDIT+4(A0)
	OR.L D2,ADDIT+160(A0)
	OR.L D3,ADDIT+164(A0)
	OR.L D4,ADDIT+320(A0)
	OR.L D5,ADDIT+324(A0)
	LEA 8(A1),A1
	MOVE.L A1,CHARPOS2
	MOVE.W #8,COUNT
	NOT.W IND

	RTS

WRAP	LEA SCROLLINE,A0
	BRA NEWLETTER	

************************************
* ROUTINE TO PRE SHIFT THE FONT
***********************************

SHIFTER
	LEA FONT,A0
	LEA FONT1,A1
	LEA FONT1,A2

	MOVE.W #29,D0
LOOP
	MOVE.W #63,D1
LOOP3
	MOVE.L A2,A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 512(A1),A1
	MOVE.B (A0),1(A1)
	MOVE.B 2(A0),3(A1)
	MOVE.B 4(A0),5(A1)
	MOVE.B 6(A0),7(A1)

	MOVE.B 1(A0),512(A1)
	MOVE.B 3(A0),514(A1)
	MOVE.B 5(A0),516(A1)
	MOVE.B 7(A0),518(A1)
	LEA 8(A0),A0
	LEA 8(A2),A2
	DBF D1,LOOP3
	LEA 2048(A2),A2
	DBF D0,LOOP

	LEA FONT,A0
	LEA FONT2,A1
	MOVE.W #29,D0
LOOP2	
	MOVE.W #63,D1
LOOP5
	MOVE.L (A0)+,(A1)
	MOVE.L (A0)+,4(A1)
	MOVE.L (A0)+,512(A1)
	MOVE.L (A0)+,516(A1)
	MOVE.L (A0)+,1024(A1)
	MOVE.L (A0)+,1028(A1)
	MOVE.L (A0)+,1536(A1)
	MOVE.L (A0)+,1540(A1)
	LEA 8(A1),A1
	DBF D1,LOOP5
	LEA 1536(A1),A1
	DBF D0,LOOP2
	RTS

SORT_SCROLL
	LEA SCROLLINE,A0
SLOOP
	MOVE.B (A0),D0
	CMP.B #$FF,D0
	BEQ.S SEND
	CMP.B #' ',D0
	BNE.S SJ1
	MOVE.B #'@',D0
SJ1	CMP.B #'.',D0
	BNE.S SJ2
	MOVE.B #91,D0
SJ2	CMP.B #'!',D0
	BNE.S SJ3
	MOVE.B #92,D0
SJ3	CMP.B #'?',D0
	BNE.S SJ4
	MOVE.B #93,D0
SJ4	MOVE.B D0,(A0)+
	BRA	SLOOP
SEND	RTS

ERASESUB

	MOVE.L OLDSTARPOINT,A0
	MOVEQ #0,D1
	REPT 100
	MOVE.L (A0)+,A6		GET POSITION
	MOVE.W D1,(A6)		WIPE EM OUT
	ENDR
	RTS

STARSSUB
	LEA STARS(PC),A0
	MOVE.L LOGBASE(PC),A1
	MOVE.L OLDSTARPOINT(PC),A5
	MOVE.W #99,D0
	MOVE.W #$FFFF,D1
DRAWLOOP
	MOVE.L (A0)+,A2
	MOVE.W (A2)+,D2
	CMP.W D1,D2
	BNE.S CONT
	MOVE.L (A0),-(A0)
	BRA.S DRAWLOOP
CONT
	MOVE.W (A2)+,D3
	MOVE.L A2,-(A0)
	LEA 8(A0),A0
	LEA (A1,D3.W),A3
	MOVE.W (A3),D3
	TST.W D3
	BNE.S MISSIT
	OR.W D2,(A3)
MISSIT
	MOVE.L A3,(A5)+
	DBF D0,DRAWLOOP
	RTS

MAKEUPSTARS
	LEA STARS(PC),A0
	MOVEQ #0,D0
	MOVE.W #85,D1
CVLOOP
	MOVE.L (A0),A1
	ADD.L D0,A1
	MOVE.L A1,(A0)
	LEA 8(A0),A0
	ADD.L #4,D0
	DBF D1,CVLOOP

	MOVEQ #0,D0
	RTS


*************************************
* VARIABLES ETC FOR THE STARS
*************************************

OLDSTARPOINT	DC.L 0

OLDSTARS	
	REPT 100
	DC.L $78000
	ENDR

OLDSTARS1
	REPT 100
	DC.L $78000
	ENDR

STARS	
ADDIT	SET 0
	REPT 100
	DC.L DEFSTARS+ADDIT,DEFSTARS+ADDIT
ADDIT	SET ADDIT+360
	ENDR
	
DEFSTARS	INCBIN "STARS\STARS.DAT"

**************************************
* SPRITE ROUTINE
**************************************

REPSPRITE

	MOVE.L OLDSPRITE,A4
	MOVEQ #0,D0

	REPT 16
	MOVE.L (A4)+,A3
ADDIT	SET 0
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	MOVE.L D0,ADDIT(A3)
	MOVE.L D0,ADDIT+8(A3)
ADDIT	SET ADDIT+160
	ENDR

	RTS

DOSPRITE
	MOVE.L OLDSPRITE,A4
	LEA WAVEPOINT,A5
	LEA SPRITELIST,A0
	MOVEQ.W #15,D7
SS_LOOP
	MOVE.W D7,-(SP)
	MOVE.L (A5),A3
	MOVE.W (A3)+,D0
	MOVE.W (A3)+,D6
	CMP.L #WAVEND,A3
	BNE.S SJUMP7
	LEA WAVE,A3
SJUMP7	MOVE.L A3,(A5)+

	MOVE.L (A5),A3
	ADD.W (A3)+,D0
	CMP.L #XEND,A3
	BNE.S SJUMP1
	LEA XADD,A3
SJUMP1	MOVE.L A3,(A5)+

	MOVE.L (A5),A3
	ADD.W (A3)+,D6
	CMP.L #YEND,A3
	BNE.S SJUMP2
	LEA YADD,A3
SJUMP2	MOVE.L A3,(A5)+

	MOVE.L LOGBASE,A3
	MOVE.W D0,D1
	AND.L #15,D1			FIND FRAME
	MULU #1280,D1
	MOVE.L (A0)+,A2
	ADD.L D1,A2
	AND.W #$FFF0,D0			FIND WORD ON LINE
	LSR.W #1,D0
	ADD.W D0,D6
	ADD.W D6,A3
	MOVE.L A3,(A4)+

	REPT 8
	MOVEM.L (A3)+,D0-D3

	MOVEM.L (A2)+,D4-D7
	AND.L D6,D0
	AND.L D6,D1
	AND.L D7,D2
	AND.L D7,D3
	OR.L D4,D0
	OR.L D5,D2
	MOVEM.L D0-D3,-16(A3)
	LEA 144(A3),A3
	ENDR

	MOVE.W (SP)+,D7
	DBF D7,SS_LOOP
	RTS

SPRITEPRESHIFT
	LEA GRAPH,A2
	LEA MASK,A3
	MOVE.W #79,D5
LOOP4S
	MOVEM.W (A2)+,D1-D2
	OR.W D1,D2
	NOT.W D2
	MOVE.W D2,(A3)+
	MOVE.W D2,(A3)+
	MOVEM.W (A2)+,D1-D2
	OR.W D1,D2
	NOT.W D2
	MOVE.W D2,(A3)+
	MOVE.W D2,(A3)+
	DBF D5,LOOP4S

	MOVE.W #15,D0
	LEA SPRITEL,A1
LOOPS7
	LEA GRAPH,A0
	LEA MASK,A2
	MOVE.W #79,D1
LOOP1S7	
	MOVE.L (A0)+,(A1)+
	MOVE.L (A0)+,(A1)+
	MOVE.L (A2)+,(A1)+
	MOVE.L (A2)+,(A1)+
	DBF D1,LOOP1S7

	LEA GRAPH,A0
	
	MOVE.W #79,D1
LOOP2S7
	ROXR.W (A0)
	ROXR.W 4(A0)
	ROXR.W 2(A0)
	ROXR.W 6(A0)
	LEA 8(A0),A0

	DBF D1,LOOP2S7

	LEA GRAPH,A2
	LEA MASK,A3
	MOVE.W #79,D5
LOOP47
	MOVEM.W (A2)+,D1-D2
	OR.W D1,D2
	NOT.W D2
	MOVE.W D2,(A3)+
	MOVE.W D2,(A3)+
	MOVEM.W (A2)+,D1-D2
	OR.W D1,D2
	NOT.W D2
	MOVE.W D2,(A3)+
	MOVE.W D2,(A3)+
	DBF D5,LOOP47
	DBF D0,LOOPS7
	RTS
***************************
* LOAD THE BIGFONT
***************************


****************************
* WAVES
****************************

WAVEPOINT
	DC.L WAVE+2908,XADD+138,YADD+46
	DC.L WAVE,XADD,YADD+52
	DC.L WAVE+16,XADD+6,YADD+58
	DC.L WAVE+32,XADD+12,YADD+64
	DC.L WAVE+48,XADD+18,YADD+70
	DC.L WAVE+64,XADD+24,YADD+76
	DC.L WAVE+80,XADD+30,YADD+82
	DC.L WAVE+96,XADD+36,YADD+88

	DC.L WAVE+128,XADD+48,YADD+94
	DC.L WAVE+144,XADD+54,YADD+100
	DC.L WAVE+160,XADD+60,YADD+106
	DC.L WAVE+176,XADD+66,YADD+112

	DC.L WAVE+208,XADD+78,YADD+118
	DC.L WAVE+224,XADD+84,YADD+124
	DC.L WAVE+240,XADD+90,YADD+130
	DC.L WAVE+256,XADD+96,YADD+136

SPRITELIST
	DC.L SPRITEB
	DC.L SPRITEM
	DC.L SPRITEO
	DC.L SPRITEB
	DC.L SPRITED
	DC.L SPRITEN
	DC.L SPRITEI
	DC.L SPRITEM
	DC.L SPRITES
	DC.L SPRITEY
	DC.L SPRITEO
	DC.L SPRITEB
	DC.L SPRITET
	DC.L SPRITES
	DC.L SPRITEO
	DC.L SPRITEL

XADD		INCBIN "\BIG_SPRI.TE\SMALL_CX.DAT"
XEND
YADD		INCBIN "\BIG_SPRI.TE\SMALL_CY.DAT"
YEND

WAVE		INCBIN "\BIG_SPRI.TE\TRACK.DAT"
WAVEND
WAVESTOREND	DC.L 0
OLDSPRITE	DC.L OLD1
OLD1		
		REPT 16
		DC.L $78000
		ENDR
OLD2		
		REPT 16
		DC.L $78000
		ENDR

***********************************
* THE SCROLLINE
**********************************

SCROLLINE
	DC.B "                                                                           "
	DC.B "     ONCE AGAIN THE LOST BOYS TAKE THE ST TO ITS LIMITS. THIS SCREEN IS NOT ONE OF THE BEST THAT I HAVE EVER WRITTEN BUT IT DOES TAKE UP JUST ABOUT EVERY AVAILABLE BYTE OF MEMORY ON A "
	DC.B "STANDARD HALF MEG MACHINE SO I DECIDED TO INCLUDE IT ANYWAY SINCE THERE IS SOME SPACE LEFT ON THE DISK.  THIS IS MY TENTH MINDBOMB SCREEN NOT INCLUDING THE INTRO THE RESET DEMO AND THE MAIN MENU."
	DC.B "  I THINK THAT THIS MUST BE THE FIRST EVER MEGA DEMO TO BE WRITTEN BY ONE PROGRAMMER!  I HAVE SPENT MORE TIME ON THIS DEMO THAN MOST PEOPLE SPEND ON CODING THEIR OWN GAMES. HENCE THIS IS WHAT I HAVE DECIDED TO DO"
	DC.B " AS MY NEXT PROJECT.  YES IN THE OLD AND TRUSTED FASHION MANIKIN OF THE LOST BOYS WILL NEXT BE WRITING A GAME WHICH WILL PROBABLY BE FINISHED BEFORE CHRISTMAS AND ALMOST CERTAINLY BE PUBLISHED BY THALION SOFTWARE."
	DC.B " OR GRANDSLAM IN BRITAIN.  SPAZ WILL BE DOING THE GRAPHICS FOR THIS GAME AND WITH LUCK IT WILL FEATURE MUSIC BY MAD MAX OF TEX.   ONCE THIS SCREEN HAS BEEN ADDED TO THE MINDBOMB DISK I WILL HAVE A GRAND TOTAL OF "
	DC.B " TWENTY FOUR TRACKS LEFT TO PLAY AROUND WITH. FOR ANYONE INTERESTED THE DATE TODAY IS SEVENTEENTH OF MARCH AND THE RELEASE DATE FOR THE MINDBOMB IS APRIL EIGHTEENTH SO I HAVE EXACTLY ONE MONTH MORE TO PLAY AROUND WITH "
	DC.B "MY CODE. ALL THE SCREENS WHICH I HAVE WRITTEN FOR MINDBOMB ARE NOW COMPLETELY FINISHED AND I SHALL PROBABLY WRITE ONE MORE SCREEN BEFORE I CALL IT A DAY. SO WITH LUCK THIS DEMO SHOULD FEATURE A GRAND TOTAL OF ABOUT TWENTY SCREENS"
	DC.B " MAKING IT BY FAR THE BIGGEST ALMOST SINGLE CREW DEMO EVER RELEASED. EVEN WITHOUT ANY OF OUR GUEST SCREENS WE WOULD STILL BEAT THE CUDDLY DEMOS FOR VOLUME OF SCREENS AND I ALSO BELIEVE THAT THE GENERAL QUALITY OF CODE IS BETTER AS WELL"
	DC.B " NOW. THERE ARE ONE OR TWO SCREENS ON CUDDLY DEMOS THAT ARE UNSURPASSABLY BRILLIANT SUCH AS THEIR FULLSCREEN BUT WE BELIVE THAT ALTHOUGH WE HAVE NOT EVEN ATTEMPTED TO MATCH THIS MEGA ACHIEVEMENT SOME OF OUR SCREENS ARE ALSO "
	DC.B " IN A CLASS OF THERE OWN.  WE DO HOPE THAT YOU AGREE.  IT SEEMS POSSIBLE THAT WE MAY GET TO INCLUDE A TCB SCREEN IN THIS DEMO BUT SINCE I WILL NOT KNOW THIS FOR DEFINITE UNTIL JUST BEFORE I RELEASE IT I GUESS YOU WILL JUST HAVE TO SEE."
	DC.B " THE DEMO WILL ACTUALLY BE RELEASED AT THALION SOFTWARE DURING MY VISIT THERE NEXT MONTH,  OTHER PEOPLE WHO WILL BE PRESENT AT THALION OVER EASTER ARE ALL MEMBERS OF TCB, ALL MEMBERS OF TEX, THE GIGABYTE CREW AND LEVEL SIXTEEN SO I WILL "
	DC.B " INDEED BE AMONG THE WORLDS FINEST DEMO AND GAME WRITERS!  THIS MAKES ME FEEL VERY HONOURED AND VERY LUCKY. I AM GOING TO THALION WITH STEFAN POSTHUMA, DIGITAL INSANITY, AND I THINK THAT WE ARE BOTH EQUALLY EXCITED AT THIS PROSPECT!!"
	DC.B " I AM HOPING THAT I WILL HAVE THE OPURTUNITY TO LEARN SOME NEW TRICKS FROM THESE VARIOUS PEOPLE WHO UNDOUBTEDLY WILL HAVE SOME IDEAS AND TRICKS THAT I HAVE NOT THOUGHT OF YET. NOW WE WOULD LIKE TO SAY A LITTLE ABOUT SOME OF THE VERY LATEST"
	DC.B " DEMOS THAT WE HAVE GOT OUR HANDS ON. FIRST COMES THE CAREBEARS SO WATT DEMO. THIS ONE WAS LONG OVERDUE AND I HAVE TO SAY A BIT OF A DISSAPOINTMENT. IT CERTAINLY HAD ITS HIGH POINTS  IN PARTICULAR THE OMEGA AND SYNC SCREENS AND TWO OF THE"
	DC.B " TCB SCREENS WERE EXCEPTIONALLY GOOD BUT UNFORTUNATELY ALL THE REST OF THE SCREENS WERE DECIDEDLY MEDIOCRE. THE BEST DEMO OF RECENT TIMES IN OUR OPINION WAS THE NEWYEAR DEMO TWO BY SYNC OMEGA AND TCB. ON OUR COPY ONE OF THE SCREENS "
	DC.B " DOES NOT WORK BUT THE OTHER SCREENS ARE ALL OUTSTANDING PARTICULARLY THE OMEGA SCREENS. THEIR MULTI DIRECTIONAL WOBBLING SPRITE IS A PIECE OF CODING BRILLIANCE. WE THOUROUGHLY RECOMMEND BOTH OF THESE DEMOS AS THE BEST OF RECENT TIMES"
	DC.B ".  WE DO NOT WISH TO SOUND PONCY BUT KEEP UP THE GOOD WORK GUYS ITS NICE TO BE AMAZED ON A REGULAR BASIS!!!  "
	DC.B " FINALLY WE WILL GIVE YOU ADVANCE WARNING OF ANOTHER DEMO IN THE PIPELINE. WE HAVE SEEN A FEW PREVIEW SCREENS FROM THIS DEMO AND HAVE SO FAR BEEN VERY IMPRESSED. THE DEMO WILL BE RELEASED BY THE INNER CIRCLE SOME OF WHOSE MEMBERS WE ARE "
	DC.B " NOT PARTICULARLY FOND OF AS YOU MAY HAVE READ ELSEWHERE. BUT WE BELIEVE IN GIVING CREDIT WHERE CREDIT IS DUE SO FOR THE SAKE OF THE INNER CIRCLES OTHER MEMBERS. ST SQUAD DYNAMIC DUO ETC WE SAY THAT THIS IS A DEMO TO LOOK OUT FOR!!!"
	DC.B " WELL I THINK THAT I SHALL LEAVE IT AT THAT FOR THIS SCROLLINE AS I REALLY AM JUST ABOUT AT THE END OF MY TETHER WHEN IT COMES TO WRITING SCROLLTEXTS. HOPEFULLY I SHALL GET SOME OF THE VARIOUS OTHER PEOPLE WHO HAVE BEEN INVOLVED IN CODING "
	DC.B "THIS MEGA PROJECT TO WRITE THEIR OWN SCROLLTEXTS FOR SOME OF THE OTHER SCREENS.  SO UNTIL NEXT TIME  WRAP!!!!!!!!!!             "
	DC.B $FF
	EVEN

SCROLLPOINT	DC.L SCROLLINE

***************************
* VARIABLES AND ALL SORTS OF OTHER SHIT
***************************

COUNT		DC.W 1
CHARPOS1	DC.L FONT2
CHARPOS2	DC.L FONT1
IND		DC.W 1

	DS.L 100
OURSTACK
MUSIC	INCBIN "\BIG_SPRI.TE\STORM.DAT"
TABPOINT	DC.L XTAB
XTAB	INCBIN "\BIG_SPRI.TE\XTAB.DAT"
XTABEND
LOGODAT	INCBIN "\BIG_SPRI.TE\LOGO.DAT"
LOGODAT1
MASK	DS.L 160
GRAPH	INCBIN "\BIG_SPRI.TE\SPRITE.DAT"
FONT	
	INCBIN	"BIG_SPRI.TE\THE_BIG.FON"
	