072010303050000144002006006010000
11
21
F0110000001
9[....................................................]0110
€‰DigitialSystemsLaboratoryProject-BarcodeReaderExperiment
€
     Thefirststageoftheexperimentwastodeterminethe
characteristicsofthebarcodereader.Thiswasdonebywritinga
smallmc68000programwhichtestedbit4ofport1andechoedthe
stateofthisbittothescreencontinuouslyi.e

!Testportandechostatetothescreen.

port1     equ$ff011b

forever:  btst #4,port1           !testbit4...
     beq.s.zero              !zero??
.one:     moveq#'1',d0            !outputa1
          trap#outchar           !
          bra.sforever            !continuously..
.zero:    moveq#'0',d0            !outputa0
          trap#outchar           !
          bra.sforever            !continuously..

     TheOutputwasfoundtobe"1"whenthebarcodereaderwas
heldinmidair,"0"whenonwhiteand"1"whenonblack.

     Noproblemswereencounteredindesigningthealgorithmfor
readingandtimingthetransitionsfromonestatetoanother.The
algorithmsynchronisesbywaitingforonequarterofasecondof
whiteandthenreadsandtimestransitions,recordingthesetimes
inanarray(buffer).Readingstopswhenatransitionhasnot
occuredforoveronequarterofasecond.Initiallytherecorded
transitiontimeswereechoedtothescreenafterbeingreadto
observediscrepanciesbetweenthepatternbeingreadandthe
recordedresults.Anexampleisshownbelow(withoutstart/stop
code)

     $510-1
     $5be-1
     $184-0
     $535-1
     $174-0
     $1c4-0
     $144-0
     $189 -0
     $1d1<{thesevaluesactualrepresenta"1"(bigbar)}
     $1c<1{howeverasmallglitchwascreptin}
     $1c8<
     $19b-0
     $205<
     $20<{severalglitchesinthemiddleofabigbar}
     $31<1
     $19<
     $252<
     $1a9<0

     Ingeneralthevastmajorityofthese"glitches"werefoundto
appearinthemiddleoflargebars,(particularinthelargebadly
photocopiedbarcodes!),asmallpercentageofreadscontained
glitchesatthestartorendofabar.
     Sothenextstageintheexperimentwastosortoutthis
glitchingproblemandtodesignsomekindofalgorithmtoremove
them.
ˆGlitchFiltering.

€     Itwasdecidedthat"onthefly"glitchfilteringwasnotbe
done,insteadglitchfilteringwouldbedoneaftertheentire
barcode(withglitches)hadbeenreadin.
     Iwroteseveralglitchfilteringalgorithmsandtestedeach
onthebarcodesofvarioussizes:-

     Thefirstsimplyignoredperiodvaluesbelowabout$60,this
wasOKbuthavingaconstantglitchvaluemeantthattheeffec
tivenessofthefilteringwasgovernedbyotherfactorssuchas
thesizeofthebarsandthespeedatwhichthepenwasmoved.
     AnImprovementonthis,wastofindtheaveragetimeofthe
bars(bytakingthetotaltimeanddividingbythenumberofbars!)
andignoreanyperiodvalueslessthanabout1/5thofthis.This
methodwasquiteeffective,butabetteralternativewastobe
found.
     Thefinalglitchfilteringalgorithm(theonethatwasbestand
isusedinthefinishedprogram)involvessearchingthroughthe
transitionarrayforthesmallestvalue,andthenaddingthetwo
valueseithersidetothis,thisnewvalueisthenplacedtoleft
inthearrayandthevaluestotherightareshifteduptwoplaces
left.Thisisthenrepeateduntilthereare17entriesinthe
table.(Thisglitchfilteringcan'fail'whenthereare18entries
leftinthearrayandtwovalueseithersidearemerged,however
thiscasecanbedealtwithsimplyaddingthesmallestvaluetothe
leftorrightandonlyshiftingtherestofthearrayoneplace
left).   Usingthefollowingseriesoftransitionstimesthe
algorithmprocedes:-

100010087971000;a"bigbar"withseveralglitches.
10002841000;87issmallest+twovaluesatsides.
2284;284wassmallest+twovaluesatsides.

     Therearetwoextracasestobedealtwithusingthis
algorithm:-
1.Whenthesmallestvalueisattheendofthearray.Thisis
solvedbysimplyaddingtheglitchtothearrayelementonthe
left(index-1)andremovingtheglitchvalue.
2.Whenthesmallestvalueisatthestartofthearray.Thevalue
totherightisaddedtotheglitchandtherestofthearray
shiftedjustoneplaceup.
     Overallthisglitchfilteringalgorithmworkedverywell
givingmeanover80%successratewhenreading.
     Afterglitchfilteringthetransitiontimesareconvertedto
theirbitcoderepresentationbyaveragingthetransitiontimesof
the17barsandclassifyinglargebars(1)asmorethanaverageand
smallbars(0)aslessthanaverage.

ˆReverseCodeReading.
€
     Sincethe2of5interleavedcodehasauniquestart/stop
sequenceitispossibletoreadthebarcodefromlefttorightOR
fromrighttoleft,thestartcodebeing0000andtheendcode100,
orwhenreversedthe"startcode"being001and"endcode"0000.
     Thefinalalgorithm dealswithbothcases,andreversesthe
bitpatternsofthetwodigitsifthe"start"codewasfound
actuallytobetheendcodereversed(i.ethefirstthreebits
were001thereforeitwasreadfromrighttoleft).

ˆConversionfrombarcodebitcoderepresentationtoanasciinumber
€
     Toconvertthetwo5bitnumberstoanasciirepresentationa
specialtablewasused.Sincethere2^5possiblecombinationsina
5bitrepresentationschemeandonly10actualdecimaldigits,
thereforeanycodethatisnotoneofthe10decimaldigitsmustbe
acodereadwithanincorrectparitybitorjustaplainbadread.
Theconversiontablewasmadeusingtheinformationprovidedandis
asfollows:-

conv_tab: dc.b-1,-1,-1,'7'!
          dc.b-1,'4','0',-1!
          dc.b-1,'2','9',-1!-1isusedtorepresentan
          dc.b'6',-1,-1,-1!usedentryi.eabadreador
          dc.b-1,'1','8',-1!acodewithaparityerror.
          dc.b'5',-1,-1,-1!
          dc.b'3',-1,-1,-1!
          dc.b-1,-1,-1,-1!
          
     Sotoconverta5bitnumbertoitsasciicodeafragmentof
codeliketheonethatfollowswasused:-     

!Convertcode.
!d0containscodetoconvert.

conv_code:leaconv_tab(pc),a0 !->a0toconversiontable
          moveq#0,d1!cleard1
         move.b(a0,d0.w),d1!lookupcode.
     tst.bd1            !->parityerrororbadcode?
          bmi.spar_error     !?
                              !no...
!d1.lcontainsasciicodeofnumber.
          rts

par_error :
!dealwitherrorinsomewayetc.

          rts


     ApsudeoPascal/Englishdefinitionfollows,wherelotsof
bitwiseoperationsaredone,orwhenaPascaldefintionwouldnot
giveagoodrepresentationoftheactualassemblylanguagean
Englishexplanationisgiveninstead.

     Themc68000listingthenfollowsintwoformats,thefirstis
inplanesourceforeasyreading,andthesecondistheassembler
listingoutput.






