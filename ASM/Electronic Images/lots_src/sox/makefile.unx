
# Sound Tools Makefile
# 	builds libst.a and sox

FSRC= raw.c voc.c au.c sf.c aiff.c hcom.c 8svx.c sndrtool.c wav.c \
	smp.c sbdsp.c auto.c
ESRC= copy.c avg.c pred.c stat.c vibro.c echo.c rate.c band.c lowp.c reverse.c
PSRC= sox.c

SOURCES   = $(PSRC) $(FSRC) $(ESRC) handlers.c libst.c misc.c getopt.c

HEADERS   = st.h libst.h sfheader.h patchlvl.h 

TESTS     = tests.sh monkey.au monkey.voc

MISC      = README INSTALL TODO sox.man sox.txt st.man Makefile.unx \
	    Makefile.bor sbprog.doc 

SKEL	  = skel.c skeleff.c

VMS       = descrip.mms sound2au.com sound2sun.c sound2sun.opt \
	    sox.opt tests.com vms.lis

AMIGA	  = Makefile.ami amiga.c amiga.h

FILES     = $(MISC) $(HEADERS) $(SOURCES) $(VMS) $(AMIGA) $(SKEL) $(TESTS)

FOBJ= raw.o voc.o au.o sf.o aiff.o hcom.o 8svx.o sndrtool.o wav.o \
	smp.o sbdsp.o auto.o
EOBJ= copy.o avg.o pred.o stat.o vibro.o echo.o rate.o band.o lowp.o reverse.o

SOUNDLIB  = libst.a
LIBOBJS   = $(FOBJ) $(EOBJ) handlers.o libst.o misc.o getopt.o

#
# System dependency parameters
# 	not many, we don't mess with devices
#
# include -DSYSV for AT&T Unix System V

# define -DBLASTER to use the Sound Blaster device driver
# on a 386 AT&T Unix with it installed

# define -DSBLAST to use Steve Haenichen's SBLAST
# driver on any BSD-derived Unix for 386/486 PC's
# BSDI's BSD386, Jolitz 386BSD, or Mt Xinu's Mach-386

# define -DDOS  to compile on PC
# defines .snd to mean a DOS soundtool file (starts with SOUND)

# define -DNeXT on a NeXT workstation
# defines .snd to mean a NeXT sound format file
#  	only knows a few real sound formats.

# define -DMAC on a MacIntosh
# defines .snd to mean a Mac-style headerless unsigned byte
#  	sample, probably at 11050 hertz.  You'll have to set 
#	the speed on the command line.


# My AT&T System V/386 development parameters

O=-g		# optimization flags

CFLAGS    = $O -DSYSV -DBLASTER
CC        = gcc -fpcc-struct-return
CC	  = cc
AR        = ar r
RANLIB    = ar ts

# AT&T System V

# CFLAGS    = $O -DSYSV 
# Gcc is better, of course, if you have it
# CC        = gcc -fpcc-struct-return	
# CC        = cc
# AR        = ar r
# RANLIB    = ar ts

# BSD-ish, salt to taste
# Sun, NeXT, Vax, Ultrix uses these

# CFLAGS    = $O 
# CC        = cc
# AR        = ar r
# RANLIB    = ranlib

# BSD-386, Mach 386, 386BSD, use for SBLAST driver

# CFLAGS    = $O -I/usr/src/sys -DSBLAST
# CC        = /usr/local/bin/gcc
# AR        = ar r
# RANLIB    = ranlib

all: sox

sox: sox.o $(SOUNDLIB)
	$(CC) $(CFLAGS) -o sox sox.o $(SOUNDLIB) -lm

$(SOUNDLIB): $(LIBOBJS)
	rm -f $(SOUNDLIB)
	$(AR) $(SOUNDLIB) $(LIBOBJS)
	$(RANLIB) $(SOUNDLIB)

sox.o:		sox.c st.h

$(LIBOBJS):	st.h

sox.txt: sox.man
	rm -f sox.txt
	nroff -man sox.man | col > sox.txt

clean:
	rm -f *.o
	rm -f *.raw
	rm -f *.sf
	rm -f core

# Shar: -F (prefix all lines with X), 
# 	-s addr (set return addr of poster)
shar: $(FILES)
	/usr2/tools/shar/shar -M -F -l 50 -o shar -n soundtools_v6 -s thinman@netcom.com $(FILES)
