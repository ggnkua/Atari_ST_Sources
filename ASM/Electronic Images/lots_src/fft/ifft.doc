NAME
	ifft - calculate inverse fast Fourier transform of frequency domain
	       function

SYNOPSIS
	ifft  [infile  [outfile]]  [options]

USAGE
	By default, input is from stdin and output is to stdout.  Times in
	the output file start with zero and are equally spaced.  Data
	is padded with zeros to the next power of two (max 2048
	frequencies).

OPTIONS
	-a  [step]  automatic abscissas - frequencies are omitted from
	            input file.
    -z  origin  subtract "origin"  from each abscissa value
                useful for eliminating phase wraps).  Values before
                time "origin" are wrapped to the end of the
                interval.

FILES
	IFFT reads an ASCII text file.  Blank lines are ignored.  Lines
	beginning with a semicolon are echoed to the output file. 
	Otherwise, each line has three real numbers representing a
	frequency and the real and imaginary part of the Fourier transform. 
	Text following the last number is ignored.  Frequencies must be
	equally spaced starting with zero.  If the number of frequencies is
	not one greater than a power of two, the data will be padded out by
	appending zeros.

	IFFT writes an ASCII text output file.  Each line has two real
	numbers representing a time and an amplitude.  The output file
	may be displayed by GRAPH.

METHOD
	An 8087 or 80287 numeric coprocessor is used if available.  64 or
	80 bit floating point arithmetic is performed (depending on whether
	an 8087 is present), but values are stored as 32 bit floating point
	numbers.  This allows up to 4096 point (i.e.  4096 time domain
	values) transforms.  IFFT uses the assumption that all time domain
	values are real to halve the size of the transform.  The method is
	described by Brigham [1].

REFERENCES
	[1]	Brigham, "Fast Fourier Transforms".

AUTHOR
	James R. Van Zandt, 27 Spencer Dr., Nashua NH 03062, jrv@mbunix.mitre.org.
