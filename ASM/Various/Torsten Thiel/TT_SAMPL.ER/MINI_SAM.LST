'  Listing 2: Mini-Stereo-Sampler
' (c)1992 by MAXON-Computer
' Autor: Torsten Thiel
' erfordert das Assemblerprogramm: SAM_ASM.PRG
'
RESERVE 49152 ! Speicher fÅr Variablen, Fileselectbox,
'      ! und Assemblerprogramm reservieren
speicher%=0
IF TT?        ! wenn TT, Speicher aus ST-Ram holen
  laenge%=GEMDOS(68,L:-1,0) ! lÑnge des grîûten Speicherblocks
  laenge%=laenge%-10240     ! und kleine Reserve fÅrs Assemblerprg.
  speicher%=GEMDOS(68,L:laenge%,0)! und diesen reservieren
ELSE          ! wenn STE, normal Speicher holen
  laenge%=MALLOC(-1)
  laenge%=laenge%-10240
  speicher%=MALLOC(laenge%)
ENDIF
RESERVE 40960        ! nochmal Reserve; Warum> ???
speicherb%=speicher% ! Blockstart ist Samplespeicherbeginn
laengeb%=laenge%     ! Blockende ist Samplespeicherende
'
a%=EXEC(3,"SAM_ASM.PRG","","")
'
IF a%>0 AND speicher%>0 AND STE?
  samtext%=LPEEK(a%+8)  ! Adresse des Textsegment
  samdata%=LPEEK(a%+16) ! Adresse des Datensegment
  samstart%=samdata%
  samanzahl%=samdata%+4
  samzaehl%=samdata%+8
  samvorteil%=samdata%+9
  '
  DMASOUND speicher%,speicher%+2,3,0 ! DMA-Sound init.
  REPEAT
    ALERT 0," STEREO-Sampler (mini)  |     A - Sampeln|     B - Anhîren|     C - Datei",0," A | B | C ",wahl%
    DMACONTROL 0   ! wird Grund-Menue angewÑhlt > Sound aus
    '
    IF wahl%=1
      ALERT 2," Mit welcher Frequenz? | | Aufnahme beginnt nach | Anwahl des Button",3,"12.5k|25k|50k",wahl%
      IF wahl%=1
        @sample(50,1,speicher%,laenge%)  ! Sample mit 12.5 kHz aufnehmen
      ELSE IF wahl%=2
        @sample(25,1,speicher%,laenge%)  ! Sample mit 25 kHz aufnehmen
      ELSE
        @sample(12,1,speicher%,laenge%)  ! Sample mit 50 kHz aufnehmen
      ENDIF
    ELSE IF wahl%=2
      ALERT 0," Hîrenmenue | A - Alles anhîhren | B - Block anhîhren | C - ZurÅck",0,"A|B|ZurÅck",wahl%
      IF wahl%=1
        ALERT 2," Mit welcher Frequenz? | | Wiedergabe beginnt nach | Anwahl des Button",3,"12.5k|25k|50k",wahl%
        IF wahl%=1
          DMASOUND speicher%,speicher%+laenge%,1
          tl%=200*laenge%/25000 ! tl% ist Laufzeit des gesammten Sample
        ELSE IF wahl%=2         ! in 1/200 Sekunde
          DMASOUND speicher%,speicher%+laenge%,2
          tl%=200*laenge%/50000
        ELSE
          DMASOUND speicher%,speicher%+laenge%,3
          tl%=200*laenge%/100000
        ENDIF
        ll%=laenge%/tl%  ! LÑnge/Laufzeit ist benîtigter Speicher
        b|=1             ! je 1/200 Sekunde
        DMACONTROL 1     ! Sound einmal abspielen
        t%=TIMER         ! und in t% Startzeit merken
        REPEAT
          a|=BIOS(11,-1) ! Status der Umschalttasten lesen
          IF a|=2 AND b| ! bei linker Shift-Taste > Blockstart
            speicherb%=speicher%+(TIMER-t%)*ll%
            laengeb%=laenge%-speicherb%+speicher%
          ENDIF
          IF a|=1        ! bei rechter Shifttaste > Blockende
            laengeb%=(TIMER-t%)*ll%-speicherb%+speicher%
            b|=0         ! ist Blockende gekennzeichnet, wird der
          ENDIF          ! Blockstart nicht mehr gekennzeichnet
        UNTIL TIMER>=t%+tl%   ! solange bis Laufzeit vorbei ist
      ELSE IF wahl%=2
        ALERT 2," Der Block ist "+STR$(INT(laengeb%/1024))+" kByte | lang.| A - einmal anhîren | B - endlos anhîhren",0," A | B ",a|
        ALERT 2," Mit welcher Frequenz? | | Wiedergabe beginnt nach | Anwahl des Button",3,"12.5k|25k|50k",wahl%
        IF wahl%=1
          DMASOUND speicherb%,speicherb%+laengeb%,1
        ELSE IF wahl%=2
          DMASOUND speicherb%,speicherb%+laengeb%,2
        ELSE
          DMASOUND speicherb%,speicherb%+laengeb%,3
        ENDIF
        IF a|=1
          DMACONTROL 1  ! Block einmal anhîren
        ELSE
          DMACONTROL 3  ! Block endlos anhîren
        ENDIF
      ENDIF
    ELSE
      ALERT 0," Dateimenue | A - Sample laden | B - Block sichern | C - Programmende ",0,"A|B|Ende",wahl%
      IF wahl%=1
        FILESELECT #"Sample laden","\*.SMP","",file$
        IF file$<>""
          OPEN "I",#1,file$
          a%=LOF(#1)
          IF a%>laenge%      ! ist Sample lÑnger als vorhandener
            laengeb%=laenge% ! Speicher > Sample kÅrzen
            BGET #1,speicher%,laenge%
          ELSE               ! sonst voll einladen und Blockende ist
            laengeb%=a%      ! SamplelÑnge
            BGET #1,speicher%,a%
          ENDIF
          CLOSE #1
        ENDIF
      ELSE IF wahl%=2
        FILESELECT #"Sampleblock sichern","\*.SMP",".SMP",file$
        IF file$<>""
          a$=LEFT$(file$,1)
          IF (a$>="A" OR a$<="P") AND MID$(file$,2,1)=":"
            a%=DFREE(ASC(a$)-64) ! wieviel Speicher auf Disk X frei
          ELSE
            a%=DFREE(0)          ! wieviel Speicher auf Disk frei
          ENDIF
          OPEN "O",#1,file$
          IF a%>laengeb%
            BPUT #1,speicherb%,laengeb%
          ELSE
            a$=STR$(INT((laengeb%-a%)/1024))
            ALERT 3," | Sample muûte um  | "+a$+" kB gekÅrzt werden. ",2,"OK|Abbruch",wahl%
            IF wahl%=1
              BPUT #1,speicherb%,a%
            ENDIF
          ENDIF
          CLOSE #1
        ENDIF
      ELSE
        ALERT 3," | Schon abbrechen? ",2,"Ja,Ja| Nein ",ende|
      ENDIF
    ENDIF
  UNTIL ende|=1
ELSE IF a%=-33
  ALERT 1," Die Systemdatei| 'SAM_ASM.PRG'| konnte nicht nach-  | geladen werden.",1,"Abbruch",dummy%
ELSE IF NOT (STE?)
  ALERT 1," Der Rechner verfÅgt  | Åber keinen| DMA-Sound-Chip.",1,"Schade",dummy%
ENDIF
IF speicher%>0
  ~MFREE(speicher%)
  RESERVE
ENDIF
END
'
'
'
PROCEDURE sample(a|,b|,VAR c%,d%)
  POKE samzaehl%,a|    ! ZÑhlerstand des TimerD
  POKE samvorteil%,b|  ! Vorteiler des TimerD
  LPOKE samstart%,c%   ! Samplestartadresse
  LPOKE samanzahl%,d%  ! Anzahl des Messungen (*2)
  @taus
  CALL samtext%        ! es wird Interrupt gesperrt
  @tein
RETURN
PROCEDURE taus
  a|=18
  ~XBIOS(25,0,L:VARPTR(a|))  ! schaltet die Maus aus
  a|=19
  ~XBIOS(25,0,L:VARPTR(a|))  ! schaltet die Tastatur aus
RETURN
PROCEDURE tein
  a|=8
  ~XBIOS(25,0,L:VARPTR(a|))  ! schaltet die Maus ein
  a|=17
  ~XBIOS(25,0,L:VARPTR(a|))  ! schaltet die Tastatur ein
RETURN
