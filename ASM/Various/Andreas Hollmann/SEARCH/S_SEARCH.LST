' *****************************************************************************
' *       'Single-Step'- und 'Boyer-Moore'-Algorithmus zur Stringsuche        *
' *  Autor:    Andreas Hollmann, Paderborn                                    *
' *            (c) MAXON Computer GmbH                                        *
' *  Sprache:  GFA-Basic                                                      *
' *****************************************************************************
RESERVE 16000                                 ! 16 kB sind genug
IF MALLOC(-1)>=128000 THEN                    ! genug Platz ?
  p_file%=MALLOC(128000)                      ! RAM fÅr skew-buffer und file
  p_buf%=p_file%+120000                       ! ab hier steht der skew-buffer
ELSE
  PRINT AT(1,1);"Nicht genug Speicher frei !"
  END
ENDIF
define_inl                                    ! Adressen der INLINEs holen
' -----------------------------------------------------------------------------
search$="Wer reitet so spÑt durch Nacht und Wind ?"  ! zu suchender String
search_len&=LEN(search$)                          ! StringlÑnge holen
search_cut$=LEFT$(search$,search_len&-1)          ! String ohne letztes Zeichen
' 100 kB mit dem String ohne das letzte Zeichen fÅllen (ui, wie gemein...):
FOR adr%=p_file% TO p_file%+99999 STEP search_len&
  CHAR{adr%}=search_cut$
NEXT adr%
' Ab der relativen Adresse 100000 steht endlich dann der gesuchte String:
CHAR{p_file%+100000}=search$
' jetzt kann die Zeit gemessen werden:
t1%=TIMER                                     ! Anfangszeit merken
' get_pos1(p_file%,100000,search$,pos%)       ! 'Single-Step' oder
get_pos2(p_file%,100000,search$,p_buf%,pos%)  ! 'Boyer-Moore' auswÑhlen
t2%=TIMER                                     ! Endzeit merken
PRINT AT(1,1);"Position: ";pos%,"Zeit: ";(t2%-t1%)/200;" s"
' -----------------------------------------------------------------------------
~MFREE(p_file%)                               ! Speicher an GEMDOS zurÅckgeben
RESERVE
END
' =============================================================================
PROCEDURE define_inl
  ' hier stehen die INLINE-Blîcke mit den Assembler-Routinen
  ' die Adressen sind GLOBAL !
  INLINE p_sng_step_inl%,64
  INLINE p_bo_moore_inl%,140
RETURN
' -----------------------------------------------------------------------------
PROCEDURE get_pos1(p_file%,file_len%,search$,VAR pos%)          ! Single-Step
  ' Stringsuche mit dem 'Single-Step'-Algorithmus:
  LOCAL search_len&,p_search%
  search_len&=LEN(search$)                 ! LÑnge des gesuchten Strings holen
  p_search%=LONG{ARRPTR(search$)}          ! Pointer auf gesuchten String holen
  pos%=C:p_sng_step_inl%(L:p_file%,L:file_len%,L:p_search%,W:search_len&)
RETURN
' -----------------------------------------------------------------------------
PROCEDURE get_pos2(p_file%,file_len%,search$,p_buf%,VAR pos%)   ! Boyer-Moore
  ' Stringsuche mit dem 'Boyer-Moore'-Algorithmus:
  LOCAL search_len&,p_search%
  search_len&=LEN(search$)                 ! LÑnge des gesuchten Strings holen
  p_search%=LONG{ARRPTR(search$)}          ! Pointer auf gesuchten String holen
  pos%=C:p_bo_moore_inl%(L:p_file%,L:file_len%,L:p_search%,W:search_len&,L:p_buf%)
RETURN
