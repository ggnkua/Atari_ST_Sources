*
* (C)1987 INNOVATED SOFTWARE
* PICTURE AND SAMPLED SOUND LOADER
*
* YOU CAN LOAD IN A NEO PICTURE AND SAMPLED SOUND USING THIS PROGRAM
* IF YOU USE THIS PROGRAM IN ANY PART OF YOUR OWN PROGRAM THEN PLEAE
* ACKNOWLEDGE INNOVATED SOFTWARE SOME WHERE ON THE TITLE PAGE.
*
* THE PICTURE FILE MUST BE CALLED DEMO.NEO
* THE SOUND FILE MUST BE          DEMO.SND
*
* REVISION 1.0					BY R.PERRY.
*

STARTIT		MOVEA.L 4(A7),A6		* BASE PAGE START
		MOVE.L 4(A6),D0
		SUBI.L #$1000,D0
		MOVE.L D0,MEMEND		* END OF MEMORY
		SUB.L (A6),D0
		MOVE.L D0,-(SP)
		MOVE.L A6,-(SP)
		CLR.W -(SP)
		MOVE.W #$4A,-(SP)
		TRAP #1
		ADDA.L #12,SP

		PEA STACKST		
		MOVE.W #$20,-(SP)		* DO SUPERVISOR STUFF
		TRAP #1
		ADDQ.L #6,SP
		MOVE.L D0,SAVE_SSP		* SAVE OLD STACK
		
		LEA FILE_PIC,A0
		BSR OPEN_FILE
		LEA PIC_BUFFER,A1
		MOVE.L #$7D42,A2		* NEO FILE SIZE
		BSR READ_FILE
		BSR CLOSE_FILE
		MOVE.B PIC_BUFFER+1,$FFFF8260	* SET SCREEN REZ.
		MOVE.L #PIC_BUFFER+2,-(SP)
		MOVE.W #6,-(SP)
		TRAP #14
		ADDQ.L #6,SP
		MOVE.W #3,-(SP)
		TRAP #14
		ADDQ.L #2,SP
		MOVEA.L D0,A1
		MOVE.L #PIC_BUFFER+34,A0	* START OF PICTURE 
		MOVE.W #$7FFF,D0
WRITE_PIC	MOVE.W (A0)+,(A1)+
		DBF D0,WRITE_PIC		* PUT PICTURE ON SCREEN

		LEA FILE_SND,A0
		BSR OPEN_FILE
		LEA PIC_BUFFER,A1
		MOVE.L MEMEND,A2	
		BSR READ_FILE
		MOVE.L D0,D6
		BSR CLOSE_FILE

		MOVE.W #$2F,D0
PAUSE		MOVE.W #-1,D1			* ALLOW TIME FOR
PAuSELP		DBF D1,PAUSELP			* DRIVE'S LIGHT TO
		DBF D0,PAUSE			* DISTINGUISH	


		ADD.L #PIC_BUFFER,D6
		LEA PIC_BUFFER,A4			
		MOVE.L A4,A5	
		MOVE.W #14,D5			* 16KHZ VALUE
		LEA TTP,A0
		MOVE.W D5,2(A0)			* SET DELAY LOOP VALUE
		MOVE.W SR,STATUS		* SAVE SR REGISTER

		MOVE.W SR,D3
		MOVE.W #$2700,SR		* KILL 'ALL' INTERUPTS
		MOVEQ #10,D0
SETREG		MOVE.B D0,$FFF8800		* SET SOUND AND FREQ
		CLR.B $FFF8802			* OF ALL USED CHANELS.
		DBF D0,SETREG
		CLR.B $FFF8800			* NOT FORGETING REG 0
		CLR.B $FFF8802
		MOVE.B #7,$FFF8800		* REG. 7 OF SND CHIP
		MOVE.B #$F8,$FFF8802		* ALL CHANELS ON
		LEA CHANEL_A,A3			* SET TABLES A,B,C
		LEA CHANEL_B,A2
		LEA CHANEL_C,A1
		MOVE.W D3,SR
		ANDI.W #$F8FF,SR
		ORI.W #$500,SR			* DO NOT DISTURB SOUND
		AND.W #$FD,$484

		MOVE.B SAMPLESPEED,D1
		LEA TTP,A6
		LEA FREQTABLE,A0

MUSICLP		BTST #0,$FFFC00			* KEY HIT YET?
		BEQ.S CONTIN			* NO,
		MOVE.B $FFFC02,D0		* LOOK AT KEYBOARD
		CMP.B #$39,D0			* SPACE BAR HIT?
		BEQ EXIT_TWO			* YEA HAA...
		CMP.B #$1F,D0			* 'S' KEY
		BNE.S CONTIN
		ADD.B #2,D1			* NEXT VALUE
		CMP.B #24,D1
		BLT.S NOTYET
		CLR.B D1
NOTYET		AND.W #$FF,D1
		MOVE.W 0(A0,D1.W),2(A6)		* SET NEW LOOP VALUE
		
CONTIN		MOVE.B (A4)+,D0			* GET SAMPLED DATA
		CMPA.L D6,A4			* END OF BUFFER
		BLT.S OUTPUT			* NO.
		MOVE.L A5,A4

OUTPUT		AND.W #$FF,D0
		MOVE.B #8,$FFFF8800
		MOVE.B 0(A3,D0.W),$FFFF8802	* CHANEL A NOTE
		MOVE.B #9,$FFFF8800
		MOVE.B 0(A2,D0.W),$FFFF8802	* B
		MOVE.B #10,$FFFF8800
		MOVE.B 0(A1,D0.W),$FFFF8802	* C

TTP		MOVE.W #0,D0			* DELAY LOOP
LOOPME		NOP				* NOT MUCH HERE
		DBF D0,LOOPME

		BRA.S MUSICLP			* KEEP IT UP

EXIT_TWO	CLR.B D5
EXIT		ORI.B #3,$484
		MOVE.W STATUS,SR
		MOVE.L SAVE_SSP,-(SP)
		MOVE.W #$20,-(SP)		* SET TO USER MODE
		TRAP #1
		ADDQ.L #6,SP

		CLR.W -(SP)
		TRAP #1				* BYE BYE...

CLOSE_FILE	MOVE.W HANDLE,-(SP)		* FILE HANDLE NO.
		MOVE.W #$3E,-(SP)
		TRAP #1
		ADDQ.L #4,SP
		TST.W D0			* IS IT AN ERROR
		BMI ERRORED
		RTS

OPEN_FILE	MOVE.W #2,-(SP)			* READ TYPE
		MOVE.L A0,-(SP)			* ADDRS OF TEXT NAME	
		MOVE.W #$3D,-(SP)
		TRAP #1
		ADDQ.L #8,SP
		TST.W D0
		BMI ERRORED			* IS IT AN ERROR
		MOVE.W D0,HANDLE
		RTS

READ_FILE	MOVE.L A1,-(SP)
		MOVE.L A2,-(SP)
		MOVE.W HANDLE,-(SP)
		MOVE.W #$3F,-(SP)
		TRAP #1
		ADDA.L #12,SP
		TST.W D0
		BMI ERRORED
		RTS		

ERRORED		CLR.W -(SP)			* GO BACK TO GEM
		TRAP #1

		EVEN

*
* SOUND CHANEL VOLUME DUMP TABLES
*

CHANEL_A 	DC.L    $00000000,$00000000,$00000000,$00000000
        	DC.L    $00010000,$00000001,$00000000,$00000001
        	DC.L    $02000000,$00010000,$01020001,$00010203
        	DC.L    $00010000,$00000100,$01020000,$00010203
        	DC.L    $00010204,$00000001,$02000100,$00010001
        	DC.L    $02030001,$00010200,$01020403,$03000102
        	DC.L    $06050300,$00010001,$02000000,$01020001
        	DC.L    $02000100,$01020000,$01020203,$00010204
        	DC.L    $05030001,$02060503,$00010200,$01020207
        	DC.L    $03030504,$04050000,$00010200,$01020001
        	DC.L    $00010203,$00010202,$04000102,$04000100
        	DC.L    $01020305,$03040404,$00010206,$07030304
        	DC.L    $04040505,$05060600,$00010207,$0B030309
        	DC.L    $04080001,$02020603,$03000001,$02020303
        	DC.L    $06080404,$05070706,$06060908,$07070707
        	DC.L    $0B0B0000,$00000102,$00010200,$01000100

CHANEL_B 	DC.L    $00000001,$02000102,$00010001,$02030001
        	DC.L    $02020400,$01020404,$03000102,$06050303
        	DC.L    $03040001,$02020703,$03030404,$05050504
        	DC.L    $06060001,$02070703,$03030408,$05050504
        	DC.L    $06060608,$00010202,$02030308,$04040505
        	DC.L    $05040606,$09090907,$07070607,$07080808
        	DC.L    $0607080A,$0A0A0909,$09000102,$02020303
        	DC.L    $03040405,$05050A06,$0606060A,$07070706
        	DC.L    $0A070808,$08060708,$0B0B0B09,$09090907
        	DC.L    $09090B09,$09090001,$02020203,$03030404
        	DC.L    $05050504,$06060606,$05070707,$060B0B08
        	DC.L    $08080B07,$080B0808,$0909090B,$07090909
        	DC.L    $09090909,$0909090A,$0A0A0A09,$0B0A0A0B
        	DC.L    $0A090C0C,$0C0C0A0C,$0C0B0B0B,$0B0B0B0B
        	DC.L    $0C0A0B0B,$0B0C0C0B,$0B0B0A0C,$0B0B0B0B
        	DC.L    $0B0B0000,$01020202,$03030304,$0405050C

CHANEL_C 	DC.L    $00010202,$02030303,$04040505,$05040606
        	DC.L    $06060507,$07070606,$07080808,$06070808
        	DC.L    $08080909,$09090709,$09090909,$09090909
        	DC.L    $09090A0A,$0A09090A,$0A0A0A09,$0A0A0A0A
        	DC.L    $0A0A0A09,$0B0B0B0B,$0B0B0B0A,$0B0B0B0B
        	DC.L    $0B0B0B0B,$0A0A0A0B,$0B0B0B0B,$0B0B0B0B
        	DC.L    $0B0B0B0A,$0A0A0B0B,$0B0C0C0C,$0C0C0C0C
        	DC.L    $0C0C0C0C,$0C0C0B0C,$0C0C0C0B,$0C0C0C0C
        	DC.L    $0B0C0C0C,$0C0C0C0C,$0B0B0B0C,$0C0C0C0C
        	DC.L    $0C0C0B0C,$0C0C0D0D,$0D0D0D0D,$0D0D0D0D
        	DC.L    $0D0D0D0D,$0D0D0D0D,$0D0D0D0D,$0D0C0C0D
        	DC.L    $0D0D0C0D,$0D0C0D0D,$0D0D0D0C,$0D0D0D0D
        	DC.L    $0D0D0D0D,$0D0D0D0D,$0D0D0D0D,$0B0D0D0C
        	DC.L    $0D0D0C0C,$0C0C0D0C,$0C0D0D0D,$0D0D0D0D
        	DC.L    $0C0D0D0D,$0D0C0C0D,$0D0D0D0C,$0D0D0D0D
        	DC.L    $0C0C0E0E,$0E0E0E0E,$0E0E0E0E,$0E0E0E0D

		EVEN

FREQTABLE	DC.W $0050
		DC.W $003C
		DC.W $0032
		DC.W $0023
		DC.W $0019
		DC.W $0012
		DC.W $000E
		DC.W $000A
		DC.W $0008
		DC.W $0006
		DC.W $0005
		DC.W $0002
*
* SYSTEM VARIABLES FOR ABOVE PROGRAM
*

SAMPLESPEED	DS.W 1

STATUS		DS.W 1
SAVE_SSP	DS.L 1

MEMEND		DS.L 1

HANDLE		DS.W 1

FILE_PIC	DC.B "DEMO.NEO",0
FILE_SND	DC.B "DEMO.SND",0

STACKEND	DS.L 512
STACKST		DS.W 10

PIC_BUFFER

* THIS IS THE END FOLKS.....