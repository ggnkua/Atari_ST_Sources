; ###############################################
; ##  *** KUCKUCK! ***                         ##
; ##  RESETFESTES DEMONSTRATIONSPROGRAMM       ##
; ##  by ROLAND NITZ  (c) 1992 MAXON Computer  ##
; ###############################################

         .TEXT 
START:   bra     MAIN       ;
; >> WEGEN RESIDENT-BLEIBEN... <<

; ** WIRD PER RESETVEKTOR ANGESPRUNGEN...***+
; KOPIERT "RESET-ROUTINE" AN EINGETRAGENE ADRESSE
; (SIEHE OBEN), SETZT PHYSTOP HERAB  UND KLINKT
; SICH DANN AUS EINER EVT. XBRA-KETTE WIEDER AUS.

         .DC.b "XBRA"       ; XBRA-PROTOKOLL
         .DC.b "KUCK"       ; PROGRAMMKENNUNG
OLDRV:   .DC.l 0 ;          ; ALTE ADRESSE
RESVEC:  movem.l d0-d2/a0-a2/a7,SAVREGS
         lea.l   MAIN+1052,sp ; STACK INIT.
         movea.l $42e,a2    ; PHYSTOP HOLEN
         suba.w  #((ERT-SRT+$1ff)&$200),a2
;                           ; VERSCHIEBUNG
         lea.l   SRT,a0     ; STARTADRESSE
         movea.l a2,a1      ; COPY-ADRESSE
         move.l  a1,$42e    ; NEUES PHYSTOP
         move.w  #(ERT-SRT)/4,d0
.COPY:   move.l  (a0)+,(a1)+ ; KOPIERE DATEN
         dbra    d0,.COPY   ; NŽCHSTEN...

; >> ADRESSE IM HANDLER EINTRAGEN
         lea.l   $680,a0    ; SPRUNGLISTE
         moveq.l #32-1,d0   ; MAX. 32 POS.
.TSTPOS: tst.l   (a0)+      ; IST 0?
         beq     .OKPOS     ; JA: OK!
         dbra    d0,.TSTPOS ; WEITERSUCHEN

         tst.w   d0         ; D0 NEGATIV?
         bmi     .FAILIT    ; JA: AUS.

.OKPOS:  move.l  a2,-4(a0)  ; ROUT. EINHŽNGEN
         bsr     CHCKSM     ; PRšFSUMME KORR.

.FAILIT: lea.l   $42a,a1    ; BASISADRESSE
.TST:    cmpi.l  #RESVEC,(a1) ; BIN DAS ICH?
         beq     .CPY       ; JA: KOPIERE...
         movea.l (a1),a2    ; ADR. HOLEN
         cmpi.l  #"XBRA",-12(a2) ; XBRA?
         bne     .REMOVE    ; NEIN: DANN CLR!!
         lea.l   -4(a2),a1  ; FšR NŽCHSTEN LAUF
         tst.l   (a1)       ; ADRESSE 0?
         bne     .TST       ; NEIN: WEITER
         bra     .EXIT      ; JA: RAUS (??!)
.CPY:    move.l  OLDRV,(a1) ; SONST SETZEN

         tst.l   $42a       ; RES_VECTOR=0?
         bne     .EXIT      ; NEIN: WEITER

.REMOVE: clr.l   $426       ; RESVALID=INVALID

.EXIT:   tst.l   OLDRV      ; NOCH EINE ROUTINE?
         beq     .CONT      ; NEIN: WEITER
         movem.l SAVREGS,d0-d2/a0-a2
         move.l  OLDRV,-(sp) ; ALTE ROUTINE
         rts                ; UND ZURšCK

.CONT:   cmpi.w  #$9bcd,(a6) ; FEHLERHAFTES TOS?
         bne     .GOON      ; NEIN: NORMAL WEITER
         lea.l   $24(a6),a6 ; SONST $24 ADDIEREN
.GOON:   movem.l SAVREGS,d0-d2/a0-a2/a7
;                           ; REGISTER RETTEN
         jmp     (a6)       ; UND WEITERMACHEN

;*** HANDLER ***
SHANDLER:        
         .DC.l $12123456    ; MAGIC NUMBER
         .DC.l $600         ; ZEIGER
         movem.l d0-d7/a0-a6,-(sp)
         movea.w #$680,a0   ; STARTADRESSE
         move.w  #16-1,d0   ; MAXIMAL 16 ROUTINEN
.EXEC:   tst.l   (a0)+      ; IST ADRESSE=0?
         beq     .CONT      ; JA: WEITER
         movea.l -4(a0),a1  ; SONST ADRESSE HOLEN
         movem.l d0/a0,-(sp) ; SAVE REGISTER
         jsr     (a1)       ; UND AUSFšHREN
         movem.l (sp)+,d0/a0 ; RESTORE REG.
.CONT:   dbra    d0,.EXEC   ; NŽCHSTE ADR
         movem.l (sp)+,d0-d7/a0-a6
         rts                ; ZURšCK
EHANDLER:        

; *** EIGENTLICHE ROUTINE, UM DIE ES GEHT... ***
SRT:     bra.s   .JMP       ; šBERSPRINGEN
         .DC.l "KUCK"       ; KENNUNG...
.JMP:    pea     RESTXT(pc) ; TEXT
         move.w  #9,-(sp)   ; F#9 : CCONWS
         trap    #1         ; GEMDOS
         addq.l  #6,sp      ; STACKKORREKTUR
W_KEY:   move.w  #7,-(sp)   ; FUNKTION #7
         trap    #1         ; GEMDOS: CRAWCIN
         addq.l  #2,sp      ; STACKKORREKTUR
         rts                ; ZURšCK
RESTXT:  .DC.b 27,"p KUCKUCK! "
         .DC.b 27,"q [TASTE]",13,10,0
         .EVEN 
ERT:             ; ENDE DER ROUTINE

; *** ROUTINE KORRIGIERT PRšFSUMME ***
CHCKSM:  moveq.l #0,d0      ; D0 L™SCHEN
         movea.w #$600,a0   ; SEITE LADEN
         move.w  #256-2,d1  ; 255 W™RTER TESTEN
.ADD:    add.w   (a0)+,d0   ; UND ADDIEREN
         dbra    d1,.ADD    ; NŽCHSTES WORT

         move.w  #$5678,d2  ; PRšFSUMME
         sub.w   d0,d2      ; AKT. PRšFSUMME -
         move.w  d2,(a0)+   ; NEUE EINTRAGEN

         rts                ; UND TSCHšSS..

;*** DIESER TEIL BLEIBT NICHT RESIDENT! ***
SAVREGS: 
MAIN:    clr.l   -(sp)      ; MODUS: SV
         move.w  #32,-(sp)  ; F# 32
         trap    #1         ; GEMDOS: SUPER
         addq.l  #6,sp      ; STACKKORREKTUR
         move.l  d0,OLDSP   ; ALTEN SSP MERKEN

         lea.l   $600,a0    ; BASISADRESSE
         cmpi.l  #$12123456,(a0) ; SCHON INST.?
         bne     .INST      ; NEIN: INSTALLIEREN
         cmpa.l  4(a0),a0   ; STIMMT DAS AUCH?
         bne     .INST      ; NEIN: INSTALLIEREN
         moveq.l #0,d1      ; L™SCHEN (PRšFSUMME)
         move.w  #$100-1,d0 ; 256 W™RTER ADDIEREN
.TSTCHS: add.w   (a0)+,d1   ; ADDIEREN
         dbra    d0,.TSTCHS ; NŽCHSTE
         cmpi.w  #$5678,d1  ; PRšFSUMME KORREKT?
         beq     .JUMP      ; JA: WEITER

.INST:   bsr     H_INST     ; < EIGENER HANDLER >
         bsr     CHCKSM     ; CHECKSUM-KORR.
         bra     .NOTFND    ; KANN NOCH NICHT
;                           ; INSTALLIERT SEIN

.JUMP:           ; TESTET, OB PRG SCHON RESIDENT
         lea.l   $680,a0    ; BASISADRESSE
         moveq.l #32-1,d0   ; 32 SLOTS TESTEN
.TST:    tst.l   (a0)+      ; WERT=0?
         beq     .CONT1     ; šBERGEHEN
         movea.l -4(a0),a1  ; SONST ADR HOLEN
         cmpi.l  #"KUCK",2(a1) ; STIMMT KENNUNG?
         beq     .FOUND     ; JA: GEFUNDEN
.CONT1:  dbra    d0,.TST    ; SONST: WEITERSUCHEN

         cmpi.l  #$31415926,$426 ; RESVALID?
         bne     .NOTFND    ; NICHT GEFUNDEN!
         movea.l $42a,a0    ; SONST ADR HOLEN
.TST2:   cmpi.l  #"XBRA",-12(a0) ; XBRA?
         bne     .NOTFND    ; NEIN: >RAUS
         cmpi.l  #"KUCK",-8(a0) ; KENNUNG ?
         beq     .FOUND     ; STIMMT: GEFUNDEN
         tst.l   -4(a0)     ; IST ADR =0?
         beq     .NOTFND    ; => LETZTE ROUTINE
         movea.l -4(a0),a0  ; SONST ADR HOLEN
         bra     .TST2      ; UND WEITERSUCHEN

.NOTFND: cmpi.l  #$31415926,$426 ; RESVALID?
         bne     .NORM      ; NEIN: NORMAL WEITER
         move.l  $42a,OLDRV ; SONST: ADR. MERKEN
.NORM:   move.l  #RESVEC,$42a ; NEUE ROUT. INST.
         move.l  #$31415926,$426 ; RESVALID!

.K_RES:  pea     R_OK       ; TXT:"PRG INST."
         move.w  #9,-(sp)   ; F#=9
         trap    #1         ; GEMDOS: CCONWS
         addq.l  #6,sp      ; STACKKORREKTUR
         bsr     W_KEY      ; WARTE AUF TASTE
         bsr     SUPOFF     ; SV-MODUS AUS
         clr.w   -(sp)      ; STATUS: 0=OK
         move.l  #MAIN-START+1308,-(sp)
;        SOVIELE BYTES RESIDENT HALTEN...
         move.w  #49,-(sp)  ; F# 49
         trap    #1         ; GEMDOS

.FOUND:  pea     R_NI       ; TXT:"SCHON INST."
         move.w  #9,-(sp)   ; F#=9
         trap    #1         ; GEMDOS: CCONWS
         addq.l  #6,sp      ; STACKKORREKTUR
         bsr     W_KEY      ; WARTE AUF TASTE
         bsr     SUPOFF     ; SV-MODUS AUS
         clr.w   -(sp)      ; F#0
         trap    #1         ; GEMDOS: PTERM

; *** SUPERVISOR-MODUS AUS ***
SUPOFF:  movea.l (sp)+,a3   ; RšCKSPRUNGADR.
         move.l  OLDSP,-(sp) ; ALTER STACK
         move.w  #32,-(sp)  ; F# 32
         trap    #1         ; GEMDOS: SUPER
         addq.l  #6,sp      ; STACKKORREKTUR
         jmp     (a3)       ; UND ZURšCK...

; *** INSTALLIERT HANDLER ***
H_INST:  move.w  #(EHANDLER-SHANDLER)/4,d0
;                            ; LŽNGE IN LONGS
         movea.w #$600,a1   ; KOPIERZIEL
         lea.l   SHANDLER,a0 ; STARTADR. QUELLE
.COPY1:  move.l  (a0)+,(a1)+ ; KOPIERE...
         dbra    d0,.COPY1  ; SOVIELE LANGWORTE

.CLR:    cmpa.l  #$800,a1   ; SCHON BEI  $800?
         beq     .EXIT      ; JA: EXIT
         clr.l   (a1)+      ; SONST L™SCHEN
         bra     .CLR       ; UND NOCH EINMAL
.EXIT:   rts                ; CIAO...

         .DATA 
R_OK:    .DC.b "E KUCKUCK! ist jetzt"
         .DC.b " resident.",13,10,0
R_NI:    .DC.b "E KUCKUCK! war bereits"
         .DC.b " installiert.",13,10,0
         .EVEN 

         .BSS 
OLDSP:   .DS.l 1


