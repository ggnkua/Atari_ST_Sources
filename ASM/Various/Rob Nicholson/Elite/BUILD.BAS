100 ' **** B U I L D   O B J E C T S   D A T A   F I L E ****
110 '
120 ' Builds the Quelo M68k data file from the objects .SHP files.
130 ' Designed and coded by Rob Nicholson
140 '
150 DEFINT I-K
160 '
170 ' * CONSTANTS *
180 '
190 SMAX=20 : PMAX=5 : NMAX=40 : EMAX=10 : DEPTH=256
200 X.POS=0 : Y.POS=0 : Z.POS=300 : FALSE=1=2 : TRUE=NOT FALSE : TYPE=2
210 TL=16 : BL=22 : PI=4*ATN(1)
220 DEF FNL(X)=INT(LOG(ABS(X))/LOG(2)*1024+.5)-16384*(X<0)
230 DEF FNR(X)=INT(RND(1)*X)
240 DEF FNN$(X)=MID$(STR$(X),1-(X>=0))
250 DEF FNA(X)=X*PI/180
260 '
270 ' * ARRAYS *
280 '
290 DIM NPANELS%(20),NENTRIES%(20,5),PANELS%(20,5,15)
300 DIM NODES%(40,3),VW(40,3),SX%(40),SY%(40),COLOUR%(20,5)
310 DIM ID%(20,3),NORMALS%(20,3),MAG(20),CLINE%(10,2)
320 '
330 ' **** MAIN PROGRAM ****
340 '
350 PRINT "BUILD OBJECTS.DAT"
360 PRINT "-----------------"
370 PRINT
380 OPEN "O",#2,"objects.dat"
390 READ FILE$
400 IF FILE$="end" THEN END
420 READ NO.TYPES
430 FOR TYPE=1 TO NO.TYPES
440    IF NO.TYPES=1 THEN F$=FILE$ ELSE F$=FILE$+CHR$(48+TYPE)
441    IF COUNT=6 THEN PRINT : COUNT=0
450    PRINT USING "\      \ ";F$;
460    GOSUB 890  ' Load file
470    GOSUB 1090  ' Save file
480    COUNT=COUNT+1 : IF NO.LINES>MAX.LINES THEN MAX.LINES=NO.LINES
490 NEXT TYPE
500 GOTO 390
510 DATA adder,1,anacon,1,asp,2,astroid,2,barrel,1,boa,2,cobmk1,1,cobra,1
520 DATA constri,1,cougar,1,dodec,1,e,1,ferdela,2,gecko,1,i,1,krait,1,l,1
530 DATA mamba,2,missile,1,moray,1,platlet,1,python,2,shuttle,1,sidewnd,2
540 DATA spcstn,2,t,1,tharg,2,thargon,2,transp,1,viper,2,wolf,2,worm,2
541 data panel1,1,panel2,1,panel3,1,panel4,1,panel5,1,panel6,1,panel7,1
542 data panel8,1,panel9,1,panel10,1,panel11,1
550 DATA end
560 '
570 ' **** WRITE NUMBER TO DISK ****
580 '
590 N$=FNN$(N) : IF LEN(T$+N$)>70 THEN PRINT #2,T$ : T$=""
600 IF T$="" THEN T$=PREFIX$ ELSE T$=T$+","
610 T$=T$+N$
620 RETURN
630 '
640 ' **** CONVERT TO LOWER CASE ****
650 '
660 FOR ZZ%=1 TO LEN(Z$)
670    ZCH$=MID$(Z$,ZZ%,1)
680    IF ZCH$>="A" AND ZCH$<="Z" THEN MID$(Z$,ZZ%,1)=CHR$(ASC(ZCH$)+32)
690 NEXT
700 RETURN
710 '
720 ' **** CONVERT TO UPPER CASE ****
730 '
740 FOR ZZ%=1 TO LEN(Z$)
750    ZCH$=MID$(Z$,ZZ%,1)
760    IF ZCH$>="a" AND ZCH$<="z" THEN MID$(Z$,ZZ%,1)=CHR$(ASC(ZCH$)-32)
770 NEXT
780 RETURN
790 '
800 ' **** DETERMINE LINE # ****
810 '
820 N1=PANELS%(I,J,1) : N2=PANELS%(I,J,2)
830 FOR K=1 TO NO.LINES
840    N3=CLINE%(K,1) : N4=CLINE%(K,2)
850    IF (N1=N3 AND N2=N4) OR (N1=N4 AND N2=N3) THEN 880
860 NEXT
870 NO.LINES=K : CLINE%(K,1)=N1 : CLINE%(K,2)=N2
880 N=K-1 : GOTO 560
890 '
900 ' * LOAD FILE *
910 '
920 OPEN "I",#1,F$+".shp"
930 INPUT #1,NO.SURFS,NO.NODES,CARGO,HITS.RADIUS,GUN.NODE,BOUNTY,ENERGY,VELOCITY,MISSILES,SCORE,HIDDEN,DESC$,TURN.RATE,ATTACK,MOOD,CARGO.TYPE,COL.RADIUS
940 INPUT #1,X.POS,Y.POS,Z.POS
950 FOR I=1 TO NO.NODES
960    INPUT #1,NODES%(I,1),NODES%(I,2),NODES%(I,3)
970 NEXT
980 FOR I=1 TO NO.SURFS
990    INPUT #1,NPANELS%(I) : IF HIDDEN THEN INPUT #1,ID%(I,1),ID%(I,2),ID%(I,3)
1000    FOR J=1 TO NPANELS%(I)
1010       INPUT #1,COLOUR%(I,J),SPARE,NENTRIES%(I,J)
1020       FOR K=1 TO NENTRIES%(I,J)
1030          INPUT #1,PANELS%(I,J,K)
1040       NEXT K
1050    NEXT J
1060 NEXT I
1070 CLOSE #1
1080 RETURN
1090 '
1100 ' **** WRITE Z80 FILE ****
1110 '
1120 IF TYPE>1 THEN 1420
1130 NO.LINES=0
1140 IF HIDDEN THEN GOSUB 1660
1150 PRINT #2,"* ---- ";
1160 FOR I=1 TO LEN(DESC$) : Z$=DESC$ : GOSUB 710 : PRINT #2,MID$(Z$,I,1);" "; : NEXT
1170 PRINT #2,"----" : PRINT #2,
1180 PRINT #2,FILE$;":" : PRINT #2,
1190 PRINT #2,CHR$(9);"dc.l ";FILE$;"_nodes"
1200 PRINT #2,CHR$(9);"dc.l ";FILE$;"_surfaces"
1210 PRINT #2,CHR$(9);"dc.l ";FILE$;"_text"
1220 ATTACK.TYPE=ATTACK AND 3 : SHIP.TYPE=INT(ATTACK/4) AND 7
1230 NO.MISSILES=MISSILES AND 127 : ECM.FITTED=(MISSILES AND 128)=128
1240 PRINT #2,CHR$(9);"dc "; : WRITE #2,NO.SURFS-1,NO.NODES-1,HITS.RADIUS,ENERGY,INT(VELOCITY*.75),GUN.NODE-1,HIDDEN,COL.RADIUS,TURN.RATE*4,SHIP.TYPE,ATTACK.TYPE,NO.MISSILES,ECM.FITTED,CARGO.TYPE,CARGO,MOOD*5,BOUNTY,SCORE
1250 PRINT #2, : PRINT #2,FILE$;"_text:" : PRINT #2,
1260 PRINT #2,CHR$(9);"dc.b ";"'";DESC$;"',0"
1270 PRINT #2,CHR$(9);"ds 0" : PRINT #2, : PRINT #2,FILE$;"_nodes:" : PRINT #2,
1280 T$="" : PREFIX$=CHR$(9)+"dc "
1290 FOR I=1 TO NO.NODES
1300    FOR J=1 TO 3
1310       N=NODES%(I,J) : GOSUB 560
1320    NEXT
1330    N=0 : GOSUB 560  ' Pad out each node with extra dc 0
1340 NEXT
1350 PRINT #2,T$ : PRINT #2, : PRINT #2,FILE$;"_surfaces:" : PRINT #2,
1360 IF TYPE<>1 THEN 1420
1370 PRINT #2,CHR$(9);"dc";NO.TYPES
1380 FOR I=1 TO NO.TYPES
1390    PRINT #2,CHR$(9);"dc.l ";FILE$;"_type";CHR$(48+I)
1400 NEXT I
1410 PRINT #2,
1420 PRINT #2,FILE$;"_type";CHR$(48+TYPE);":" : PRINT #2,
1430 FOR I=1 TO NO.SURFS
1440    IF HIDDEN=0 THEN 1520
1450    T$="" : PREFIX$="s"+FNN$(SC)+":"+CHR$(9)+"dc " : SC=SC+1
1460    FOR J=1 TO 3
1470       N=NORMALS%(I,J) : GOSUB 560
1480    NEXT
1490    PRINT #2,T$ : PREFIX$=CHR$(9)+"dc "
1500    IF I=NO.SURFS THEN A$="0" ELSE A$="s"+FNN$(SC)
1510    PRINT #2,CHR$(9)+"dc.l "+A$
1520    FOR J=1 TO NPANELS%(I)
1530       T$=""
1540       IF NENTRIES%(I,J)=2 THEN N=-1 ELSE N=1
1550       GOSUB 560
1560       N=COLOUR%(I,J) : GOSUB 560 : IF NENTRIES%(I,J)=2 THEN GOSUB 790
1570       FOR K=1 TO NENTRIES%(I,J)
1580          N=PANELS%(I,J,K)-1 : GOSUB 560
1590       NEXT
1600       N=-1 : GOSUB 560 : PRINT #2,T$
1610    NEXT J
1620    PRINT #2,CHR$(9);"dc 0"
1630 NEXT I
1640 PRINT #2,
1650 RETURN
1660 '
1670 ' * BUILD SURFACE VECTORS *
1680 '
1690 FOR I=1 TO NO.SURFS
1700    P1=ID%(I,1) : P2=ID%(I,2) : P3=ID%(I,3)
1710    IF P1=0 OR P2=0 OR P3=0 THEN 1820
1720    X1=NODES%(P1,1) : Y1=NODES%(P1,2) : Z1=NODES%(P1,3)
1730    X2=NODES%(P2,1) : Y2=NODES%(P2,2) : Z2=NODES%(P2,3)
1740    X3=NODES%(P3,1) : Y3=NODES%(P3,2) : Z3=NODES%(P3,3)
1750    A=Y1*(Z2-Z3)+Y2*(Z3-Z1)+Y3*(Z1-Z2)
1760    B=Z1*(X2-X3)+Z2*(X3-X1)+Z3*(X1-X2)
1770    C=X1*(Y2-Y3)+X2*(Y3-Y1)+X3*(Y1-Y2)
1780    D=A*X1+B*Y1+C*Z1 : T=D/(A*A+B*B+C*C)
1790    X=INT(T*A+.5) : Y=INT(T*B+.5) : Z=INT(T*C+.5)
1800    MAG=SQR(X*X+Y*Y+Z*Z) : MAG(I)=MAG
1810    NORMALS%(I,1)=X : NORMALS%(I,2)=Y : NORMALS%(I,3)=Z
1820 NEXT
1830 RETURN
