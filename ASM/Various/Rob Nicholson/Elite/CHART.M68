*	@@@@   @@  @@	 @@   @@@@@@   @@@@@@
*  @@  @@  @@  @@	@@@@   @@  @@  @ @@ @
* @@	   @@  @@  @@  @@  @@  @@	 @@
* @@	   @@@@@@  @@  @@  @@@@@	 @@
* @@	   @@  @@  @@@@@@  @@ @@	 @@
*  @@  @@  @@  @@  @@  @@  @@  @@	 @@
*	@@@@   @@  @@  @@  @@ @@@  @@	@@@@

* Display Elite solid coloor chart.

	include macros

* Bios functions.

setexec:		equ $05 				set exception vector

* Extended Bios Functions.

physbase:		equ $02 				get base address of screen
setscreen:		equ $05 				set screen attributes (resolution)
setpalette: 	equ $06 				set colour palette
setcolor:		equ $07 				set colour of pen
mfpint: 		equ $0d 				set MFP interrupt vector
random24:		equ $11 				generate random number
cursconf:		equ $15 				set cursor configuration
vsync:			equ $25 				wait for VSYNC (flyback)

* BDOS Functions.

c_conout:		equ $02 				console output
c_rawcin:		equ $07 				raw character input
c_conws:		equ $09 				write string to console
c_conis:		equ $0b 				console status
f_setdta:		equ $1a 				set DTA address
s_mode: 		equ $20 				switch mode (super-user)
f_create:		equ $3c 				create a file
f_open: 		equ $3d 				open a file
f_close:		equ $3e 				close a file
f_read: 		equ $3f 				read bytes from file
f_write:		equ $40 				write bytes to file
f_sfirst:		equ $4e 				search for first file
f_snext:		equ $4f 				search for next file

	module colour_chart

* *************************
* **					 **
* ** MAIN - MAIN PROGRAM **
* **					 **
* *************************

	subr main,global

	clr -(sp)							switch to 320x200 mode
	push.l #-1
	push.l #-1
	ext_bios setscreen,12
	clr -(sp)							disable cursor
	clr -(sp)
	ext_bios cursconf,6
	pea title(pc)						print title
	bdos c_conws,6
	ext_bios physbase,2 				fetch screen address
	move.l d0,a1
	lea 16*160(a1),a1
	lea panel_colours(pc),a0			A0 = ptr: colour data
	clr d0								x = 0
	moveq #no_colours-1,d7				loop for each colour
	loop 1
		clr d1							offset =0
		move.l a1,a2					A2 = screen address
		loop 2,d5,16					loop for 16 pixel lines
			lea (a0,d1),a3				A3 = colour data
			loop 3,d4,4 				four words per plane
				move (a3),8(a2)
				move (a3)+,(a2)+
			next 3,d4
			lea 160-8(a2),a2			next pixel line
			eor #8,d1
		next 2,d5
		lea 16(a1),a1					 next word across
		inc d0
		if d0 <eq> #10 then.s			move to next row
			lea 160*31(a1),a1
			clr d0
		endi
		lea 16(a0),a0					next colour
	next 1
	repeat
		inc colour_palette+14*2 		change cycle colour
		pea colour_palette(pc)			define palette
		ext_bios setpalette,6
		bdos c_conis,2					until key pressed
		tst d0
	until <ne>
	bdos c_rawcin,2 					clear key press
	clr -(sp)							exit program
	trap #1

* Table of plane colour data for the panels.

panel_colours:

	dc.w $0000,$0000,$0000,$0000
	dc.w $0000,$0000,$0000,$0000
	dc.w $FFFF,$0000,$0000,$0000
	dc.w $FFFF,$0000,$0000,$0000
	dc.w $0000,$FFFF,$0000,$0000
	dc.w $0000,$FFFF,$0000,$0000
	dc.w $FFFF,$FFFF,$FFFF,$0000
	dc.w $FFFF,$FFFF,$FFFF,$0000
	dc.w $0000,$0000,$0000,$FFFF
	dc.w $0000,$0000,$0000,$FFFF
	dc.w $FFFF,$0000,$0000,$FFFF
	dc.w $FFFF,$0000,$0000,$FFFF
	dc.w $0000,$FFFF,$0000,$FFFF
	dc.w $0000,$FFFF,$0000,$FFFF
	dc.w $FFFF,$FFFF,$0000,$FFFF
	dc.w $FFFF,$FFFF,$0000,$FFFF
	dc.w $0000,$0000,$FFFF,$FFFF
	dc.w $0000,$0000,$FFFF,$FFFF
	dc.w $FFFF,$FFFF,$FFFF,$FFFF
	dc.w $FFFF,$FFFF,$FFFF,$FFFF
	dc.w $5555,$FFFF,$0000,$5555
	dc.w $AAAA,$FFFF,$0000,$AAAA
	dc.w $0000,$AAAA,$5555,$5555
	dc.w $0000,$5555,$AAAA,$AAAA
	dc.w $5555,$0000,$0000,$0000
	dc.w $AAAA,$0000,$0000,$0000
	dc.w $0000,$5555,$0000,$0000
	dc.w $0000,$AAAA,$0000,$0000
	dc.w $5555,$5555,$5555,$0000
	dc.w $AAAA,$AAAA,$AAAA,$0000
	dc.w $0000,$0000,$0000,$5555
	dc.w $0000,$0000,$0000,$AAAA
	dc.w $5555,$0000,$0000,$5555
	dc.w $AAAA,$0000,$0000,$AAAA
	dc.w $0000,$5555,$0000,$5555
	dc.w $0000,$AAAA,$0000,$AAAA
	dc.w $5555,$5555,$0000,$5555
	dc.w $AAAA,$AAAA,$0000,$AAAA
	dc.w $0000,$0000,$5555,$5555
	dc.w $0000,$0000,$AAAA,$AAAA
	dc.w $5555,$5555,$5555,$5555
	dc.w $AAAA,$AAAA,$AAAA,$AAAA
	dc.w $FFFF,$5555,$0000,$FFFF
	dc.w $FFFF,$AAAA,$0000,$FFFF
	dc.w $AAAA,$0000,$5555,$FFFF
	dc.w $5555,$0000,$AAAA,$FFFF
	dc.w $FFFF,$AAAA,$AAAA,$0000
	dc.w $FFFF,$5555,$5555,$0000
	dc.w $AAAA,$FFFF,$AAAA,$0000
	dc.w $5555,$FFFF,$5555,$0000
	dc.w $FFFF,$0000,$FFFF,$0000
	dc.w $FFFF,$0000,$FFFF,$0000
	dc.w $FFFF,$5555,$5555,$AAAA
	dc.w $FFFF,$AAAA,$AAAA,$5555
	dc.w $0000,$FFFF,$FFFF,$0000
	dc.w $0000,$FFFF,$FFFF,$0000
	dc.w $5555,$FFFF,$5555,$AAAA
	dc.w $AAAA,$FFFF,$AAAA,$5555
	dc.w $FFFF,$FFFF,$AAAA,$5555
	dc.w $FFFF,$FFFF,$5555,$AAAA
	dc.w $5555,$5555,$FFFF,$AAAA
	dc.w $AAAA,$AAAA,$FFFF,$5555
	dc.w $0000,$FFFF,$FFFF,$FFFF
	dc.w $0000,$FFFF,$FFFF,$FFFF
	dc.w $FFFF,$FFFF,$FFFF,$AAAA
	dc.w $FFFF,$FFFF,$FFFF,$5555
	dc.w $5555,$5555,$0000,$FFFF
	dc.w $AAAA,$AAAA,$0000,$FFFF
	dc.w $0000,$0000,$AAAA,$FFFF
	dc.w $0000,$0000,$5555,$FFFF
	dc.w $FFFF,$0000,$0000,$5555
	dc.w $FFFF,$0000,$0000,$AAAA
	dc.w $5555,$AAAA,$0000,$5555
	dc.w $AAAA,$5555,$0000,$AAAA
	dc.w $0000,$0000,$0000,$0000
	dc.w $0000,$0000,$0000,$0000
	dc.w $AAAA,$5555,$0000,$FFFF
	dc.w $5555,$AAAA,$0000,$FFFF
	dc.w $FFFF,$5555,$0000,$FFFF
	dc.w $FFFF,$AAAA,$0000,$FFFF
	dc.w $AAAA,$0000,$5555,$FFFF
	dc.w $5555,$0000,$AAAA,$FFFF
	dc.w $FFFF,$AAAA,$AAAA,$FFFF
	dc.w $FFFF,$5555,$5555,$FFFF
	dc.w $5555,$FFFF,$0000,$FFFF
	dc.w $AAAA,$FFFF,$0000,$FFFF
	dc.w $0000,$AAAA,$5555,$FFFF
	dc.w $0000,$5555,$AAAA,$FFFF
	dc.w $AAAA,$5555,$0000,$5555
	dc.w $5555,$AAAA,$0000,$AAAA
	dc.w $0000,$FFFF,$0000,$5555
	dc.w $0000,$FFFF,$0000,$AAAA
	dc.w $0000,$0000,$AAAA,$0000
	dc.w $0000,$0000,$5555,$0000
	dc.w $0000,$0000,$FFFF,$0000
	dc.w $0000,$0000,$FFFF,$0000
	dc.w $AAAA,$AAAA,$FFFF,$AAAA
	dc.w $5555,$5555,$FFFF,$5555
	dc.w $AAAA,$0000,$AAAA,$0000
	dc.w $5555,$0000,$5555,$0000
	dc.w $AAAA,$FFFF,$AAAA,$FFFF
	dc.w $5555,$FFFF,$5555,$FFFF
	dc.w $AAAA,$AAAA,$5555,$FFFF
	dc.w $5555,$5555,$AAAA,$FFFF
	dc.w $AAAA,$0000,$AAAA,$0000
	dc.w $5555,$0000,$5555,$0000
	dc.w $FFFF,$0000,$FFFF,$0000
	dc.w $FFFF,$0000,$FFFF,$0000
	dc.w $FFFF,$AAAA,$FFFF,$AAAA
	dc.w $FFFF,$5555,$FFFF,$5555
	dc.w $0000,$AAAA,$AAAA,$0000
	dc.w $0000,$5555,$5555,$0000
	dc.w $AAAA,$AAAA,$0000,$0000
	dc.w $5555,$5555,$0000,$0000
	dc.w $0000,$FFFF,$FFFF,$0000
	dc.w $0000,$FFFF,$FFFF,$0000
	dc.w $FFFF,$FFFF,$0000,$0000
	dc.w $FFFF,$FFFF,$0000,$0000
	dc.w $FFFF,$FFFF,$5555,$5555
	dc.w $FFFF,$FFFF,$AAAA,$AAAA

no_colours: equ (*-panel_colours)/16

* Colour palette.

colour_palette:

	db $00,$00,$04,$44,$02,$22,$07,$30,$07,$07,$07,$70,$07,$00
	db $04,$70,$03,$50,$02,$30,$04,$57,$02,$36,$00,$16,$00,$00,$03,$20
	db $07,$77

* Numbering.

title:

	db 'ELITE SOLID COLOUR CHART',13,10,10,10,10
	db ' 00  01  02  03  04  05  06  07  08  09',13,10,10,10,10
	db ' 10  11  12  13  14  15  16  17  18  19',13,10,10,10,10
	db ' 20  21  22  23  24  25  26  27  28  29',13,10,10,10,10
	db ' 30  31  32  33  34  35  36  37  38  39',13,10,10,10,10
	db ' 40  41  42  43  44  45  46  47  48  49',13,10,10,10,10
	db ' 50  51  52  53  54  55  56  57  58  59',0
