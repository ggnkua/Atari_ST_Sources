1000 '   @@@@   @@  @@    @@   @@   @@   @@@@  @@@@@@@
1010 '  @@  @@  @@  @@   @@@@  @@@  @@  @@  @@  @@   @
1020 ' @@       @@  @@  @@  @@ @@@@ @@ @@       @@ @  
1030 ' @@       @@@@@@  @@  @@ @@ @@@@ @@       @@@@  
1040 ' @@       @@  @@  @@@@@@ @@  @@@ @@  @@@  @@ @  
1050 '  @@  @@  @@  @@  @@  @@ @@   @@  @@  @@  @@   @
1060 '   @@@@   @@  @@  @@  @@ @@   @@   @@@@@ @@@@@@@
1070 '
1080 ' Change data file format of Elite .SHP files to the new format required
1090 ' for solid shapes.
1100 '
1110 ' Version 1.0 22nd June 1988 Copyright (c) 1988 Mr. Micro Ltd.
1120 ' Designed and coded by Rob Nicholson.
1130 '
1140 DEFINT I-K
2000 '
2010 ' **** CONSTANTS ****
2020 '
2030 MAX.SURFS=20 : MAX.LINES=50 : MAX.NODES=50 : MAX.PANELS=5
2040 MAX.ENTRIES=20
3000 '
3010 ' **** ARRAYS ****
3020 '
3030 DIM NO.LINES(50),SURFACES(50,30),LINES(50,2),N(4),STACK(100)
3040 DIM NODES(50,3),ID(50,2),SURF.ID(30,3),NPANELS(30)
3050 DIM PANELS(30,5,30),NENTRIES(30,5),NLIST(30)
5000 '
5010 ' **** MAIN PROGRAM ****
5020 '
5500 READ OBJECT$
5510 IF OBJECT$="end" THEN END
5520 GOSUB 10000  ' Load file
5540 GOSUB 11000  ' Build new lists
5541 GOSUB 16000  ' Write file
5550 GOTO 5500
9000 DATA cougar,end,cougar,constri,cobra,asp,adder,spcstn,barrel,gecko
9010 DATA missile,platlet,shuttle,krait,worm,anacon,astroid,boa
9020 DATA cobmk1,ferdela,mamba,moray,python,sidewnd,tharg
9030 DATA transp,viper,thargon,wolf,e,l,i,t,dodec,end
10000 '
10010 ' **** LOAD FILE ****
10020 '
10030 FILE$=OBJECT$+".shp"
10031 PRINT "Reading ";FILE$ : PRINT
10040 OPEN "I",#1,FILE$
10050 INPUT #1,NO.SURFS,NO.LINES,NO.NODES,CARGO,HITS.RADIUS,GUN.NODE,BOUNTY,ENERGY,VELOCITY,MISSILES,SCORE,HIDDEN,DESC$,TURN.RATE,ATTACK,MOOD,CARGO.TYPE,COL.RADIUS
10060 FOR I=1 TO NO.SURFS
10070    INPUT #1,NO.LINES(I),ID(I,1),ID(I,2)
10080    FOR J=1 TO NO.LINES(I) : INPUT #1,SURFACES(I,J) : NEXT
10090    IF NO.LINES(I)=0 THEN LINE INPUT #1,A$
10100 NEXT
10110 FOR I=1 TO NO.LINES : INPUT #1,L1,L2 : LINES(I,1)=ABS(L1) : LINES(I,2)=ABS(L2) : NEXT
10120 FOR I=1 TO NO.NODES
10130    INPUT #1,NODES(I,1),NODES(I,2),NODES(I,3)
10140 NEXT
10150 CLOSE #1
10160 RETURN
11000 '
11010 ' **** BUILD NEW LISTS ****
11020 '
11030 FOR SURF=1 TO NO.SURFS
11040    PRINT "Surface";SURF : PRINT
11050    IF HIDDEN THEN GOSUB 12000  ' Find ID nodes
11060    GOSUB 13000  ' Find all nodes on surface
11070    GOSUB 14000  ' Build panels
11071    GOSUB 15000  ' Find any lines
11080    NPANELS(SURF)=NPANELS
11081    PRINT
11090 NEXT SURF
11110 RETURN
12000 '
12010 ' **** FIND ID NODES ****
12020 '
12030 L1=ID(SURF,1) : L2=ID(SURF,2)
12040 N(1)=LINES(L1,1) : N(2)=LINES(L1,2)
12050 N(3)=LINES(L2,1) : N(4)=LINES(L2,2)
12060 FOR I=1 TO 4
12070    FOR J=1 TO 4
12080       IF I<>J AND N(I)=N(J) THEN 12110
12090    NEXT J
12100 NEXT I
12110 SURF.ID(SURF,1)=N(I) : N(I)=-1 : N(J)=-1
12120 FOR I=2 TO 3
12130    FOR J=1 TO 4
12140       IF N(J)<>-1 THEN SURF.ID(SURF,I)=N(J) : N(J)=-1 : GOTO 12160
12150    NEXT J
12160 NEXT I
12170 PRINT "ID nodes:";
12180 FOR I=1 TO 3 : PRINT SURF.ID(SURF,I); : NEXT I : PRINT
12190 RETURN
13000 '
13010 ' **** BUILD LIST OF NODES ON SURFACE ****
13020 '
13030 NO.LIST=0
13040 FOR L=1 TO NO.LINES(SURF)
13050    NODE=LINES(SURFACES(SURF,L),1) : GOSUB 13500
13060    NODE=LINES(SURFACES(SURF,L),2) : GOSUB 13500
13070 NEXT L
13080 PRINT "Surface nodes:";
13090 FOR I=1 TO NO.LIST : PRINT STR$(NLIST(I)); : NEXT : PRINT
13100 RETURN
13500 '
13510 ' **** ADD NODE TO LIST ****
13520 '
13530 FOR I=1 TO NO.LIST
13540    IF NLIST(I)=NODE THEN RETURN
13550 NEXT
13560 NO.LIST=NO.LIST+1 : NLIST(NO.LIST)=NODE
13570 RETURN
14000 '
14010 ' **** BUILD PANELS ****
14020 '
14030 NPANELS=0
14040 FOR I=1 TO NO.LIST
14050    IF NLIST(I)<>-1 THEN GOSUB 14500
14060 NEXT I
14070 RETURN
14500 '
14510 ' **** FIND NODES ON PANEL ****
14520 '
14530 NPANELS=NPANELS+1 : NENTRIES(SURF,NPANELS)=0
14531 PRINT "Creating panel";NPANELS;"using nodes";
14540 SP=1 : STACK(SP)=NLIST(I) : NLIST(I)=-1
14550 WHILE SP
14560    N1=STACK(SP) : SP=SP-1
14570    NENTRIES(SURF,NPANELS)=NENTRIES(SURF,NPANELS)+1
14580    PANELS(SURF,NPANELS,NENTRIES(SURF,NPANELS))=N1
14581    PRINT STR$(N1);
14590    FOR J=1 TO NO.LIST
14600       N2=NLIST(J)
14610       FOR K=1 TO NO.LINES
14620          N3=LINES(K,1) : N4=LINES(K,2)
14630          IF (N1=N3 AND N2=N4) OR (N1=N4 AND N2=N3) THEN SP=SP+1 : STACK(SP)=N2 : NLIST(J)=-1 : GOTO 14650
14640       NEXT K
14650    NEXT J
14670 WEND
14680 PRINT
14690 RETURN
15000 '
15010 ' **** FIND ANY LINES ****
15020 '
15030 PANEL=1
15040 WHILE PANEL<=NPANELS
15050    IF NENTRIES(SURF,PANEL)<3 THEN 15320
15060    TENTRY=1
15070    WHILE TENTRY<=NENTRIES(SURF,PANEL)
15080       N1=PANELS(SURF,PANEL,TENTRY) : COUNT=0
15090       FOR ENTRY=1 TO NENTRIES(SURF,PANEL)
15100          IF ENTRY=TENTRY THEN 15170
15110          N2=PANELS(SURF,PANEL,ENTRY)
15120          FOR L=1 TO NO.LINES
15130             N3=LINES(L,1) : N4=LINES(L,2)
15140             IF N1=N3 AND N2=N4 THEN COUNT=COUNT+1 : CNODE=N2
15150             IF N1=N4 AND N2=N3 THEN COUNT=COUNT+1 : CNODE=N2
15160          NEXT L
15170       NEXT ENTRY
15180       IF COUNT>=2 THEN 15300
15200       C=0
15230       FOR ENTRY=1 TO NENTRIES(SURF,PANEL)
15240           IF PANELS(SURF,PANEL,ENTRY)<>N1 THEN C=C+1 : PANELS(SURF,PANEL,C)=PANELS(SURF,PANEL,ENTRY)
15250       NEXT ENTRY
15260       NENTRIES(SURF,PANEL)=NENTRIES(SURF,PANEL)-1
15270       NP=NPANELS+1 : NPANELS=NP
15271       PRINT "Creating panel";NP;"using nodes";STR$(N1);STR$(CNODE)
15280       NENTRIES(SURF,NP)=2 : PANELS(SURF,NP,1)=N1 : PANELS(SURF,NP,2)=CNODE
15290       TENTRY=0
15300       TENTRY=TENTRY+1
15310    WEND
15320    PANEL=PANEL+1
15330 WEND
15340 RETURN
16000 '
16010 ' **** WRITE OBJECT ****
16020 '
16030 FILE$=OBJECT$+".new"
16040 OPEN "O",#1,FILE$
16050 WRITE #1,NO.SURFS,NO.NODES,CARGO,HITS.RADIUS,GUN.NODE,BOUNTY,ENERGY,VELOCITY,MISSILES,SCORE,HIDDEN,DESC$,TURN.RATE,ATTACK,MOOD,CARGO.TYPE,COL.RADIUS
16051 WRITE #1,0,0,300
16060 FOR I=1 TO NO.NODES
16070    WRITE #1,NODES(I,1),NODES(I,2),NODES(I,3)
16080 NEXT
16100 FOR SURF=1 TO NO.SURFS
16101    WRITE #1,NPANELS(SURF)
16110    IF HIDDEN THEN WRITE #1,SURF.ID(SURF,1),SURF.ID(SURF,2),SURF.ID(SURF,3)
16120    FOR PANEL=1 TO NPANELS(SURF)
16130       BIG=0
16140       FOR I=1 TO NPANELS(SURF)
16150          IF NENTRIES(SURF,I)>BIG THEN BIG=NENTRIES(SURF,I) : P=I
16160       NEXT
16170       PRINT #1,1;2;NENTRIES(SURF,P);
16180       FOR ENTRY=1 TO NENTRIES(SURF,P)
16190          PRINT #1,PANELS(SURF,P,ENTRY);
16200       NEXT ENTRY
16210       PRINT #1, : NENTRIES(SURF,P)=0
16220    NEXT PANEL
16230 NEXT SURF
16240 CLOSE #1
16250 RETURN
17000 '
17010 ' **** WRITE SURFACE TO DISK ****
17020 '
17030 PRINT #1,NPANELS;SURF.ID(SURN,1);SURF.ID(SURF,2);SURF.ID(SURF,3)
17040 FOR PANEL=1 TO NPANELS
17050    PRINT #1,NENTRIES(SURF,PANEL);
17060    FOR ENTRY=1 TO NENTRIES(SURF,PANEL)
17070       PRINT #1,PANELS(SURF,PANEL,ENTRY);
17080    NEXT ENTRY
17081    PRINT #1,
17090 NEXT PANEL
17100 RETURN
