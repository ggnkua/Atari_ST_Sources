                      Fading Out Chip Music

It's  really  nice to be able to fade out music  when  leaving  a 
demo,  instead of just cutting it dead.   This is very simple  to 
achieve.   We simply decrease the volume on all the channels each 
time until they are 0.

To do this, we must subtract a "fade number" each time, thus:

     get Channel A volume
     take away "fade number"
     if volume < 0 then set it to 0

The  "fade  number" will start at 0,  and slowly increase  to  15 
(which  is  the maximum volume).   In  this  way,  even  channels 
playing at full volume will be silenced gradually.


Quite  simply,  the  PLAYFADE.S source is the  same  as  PLAY2.s, 
except it has some minor modifications.
Firstly,  after waiting for a keypress,  it doesn't exit straight 
away.   Instead,  it sets a flag called "fade".   This is used by 
the routine hooked up at $70 to know when to begin fading.   When 
that routine has reached the last fade, it will set a flag called 
"fade_done".  So our code just does:

loop:
     tst.w     fade_done
     beq.s     loop

Which looks as if it will loop forever.   Indeed it would,  if it 
wasn't for the interrup which changes the value at fade_done.

The fade-out now complete, the routine terminates as usual.


The music playing routine starts as normal.
Then,  we test "fade".   If it has been set,  then we are  fading 
out.   We  get the "fade number",  and decide whether or  not  to 
increase it.

Why is this necessary?   Well, if we increase it every time, then 
the  entire fade out takes 15/50ths of a second - too  quick  for 
our  ears to detect.   So I have put in a counter,  so  that  the 
"fade  number"  is increased every 5/50ths of a  second  instead.  
Just enough of a delay.

If we are increasing the number this time,  then we do so.  If it 
has reached 15, then we set the "fade_done" flag, and our routine 
will  terminate when we return.   Then,  we store the  new  "fade 
number".

Next,  this fade number is subtracted from all the volumes on all 
channels.  Each channel is checked to make sure it doesn't become 
negative.   Since only bits 0-3 are used, if we passed a value of 
-1, then it would be read as $f - full volume again!

That's it.  Fading out.

You can play around with the value of "fade_pause" at the top, to 
see how different speeds affect the fade out.

If you want to be adventurous, try to write a routine which fades 
out just one channel at a time!


James Ingram, April 30th 1994

     I do not mind you using any parts of my code,  or any  ideas 
     of  mine.   All  I ask is that you give me a credit  for  my 
     ideas or code.  Cheers.


