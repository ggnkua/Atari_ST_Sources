             The Scroll Text Part V - or The Drool Text


My scroller which used MOVEMs was great, but some of the code was 
written for clear understanding,  and not  speed.   Therefore,  I 
have also included an optimised version, written to be as fast as 
I can make it.   I will not explain most of the optimisations, as 
they speak for themselves.   Just browse through,  and you'll see 
what I have done.

But there is one part which does need explaining - how I read the 
font.   I  no  longer use a Degas picture,  but have got  a  file 
called FONT.DAT

Why  did I do this?   Well,  as seen in SCROLL_4.DOC,  a  MOVEP.L 
instruction takes 24 cycles,  whereas a MOVE.L instruction  takes 
just 8.   Therefore, I can squeeze that last nano-second or so of 
processor  time  out by arranging the font in such  a  way  which 
makes  it possible to use a MOVE.L instead of a MOVEP to read  in 
the font data.

Am I going too far?   Maybe.   But you'll thank me when you  need 
just  another 50 cycles of clock time for your amazing  MegaDemo.  
Believe me, you WILL be in that position!

In order to convert the font, I wrote FONT_CON.S, which should be 
with this text.

FONT_CON  speaks for itself,  really.   I just INCLUDE  the  font 
picture, and convert the 6 lines of 10 characters by reading them 
in  using MOVEP,  and putting them into the new font data with  a 
MOVE.L

Then  I  save  out the font  data,  and  the  palette  data,  for 
inclusion  in  the SCROLL_5.S source code.   They  are  saved  as 
FONT.DAT and PAL.DAT

Another optimisation is that you don't have to move all 160 bytes 
per line.  Since the 2 screen words at the left (16 bytes in all) 
disappear,  we have no need to move them.  Therefore, we can just 
move 152 bytes per line,  saving the time needed to move those  8 
bytes.

Look at SCROLL_5.S to see how it all fits together.


James Ingram, February 27th 1994

     I do not mind you using any parts of my code,  or any  ideas 
     of  mine.   All  I ask is that you give me a credit  for  my 
     ideas or code.  Cheers.


* NOTE!

This code for scrolling the message is FAST.   In fact,  it is so 
fast that you can use it to scroll the ENTIRE SCREEN to the  left 
or right in 1/50th of a second!   Details later in the tutorial - 
but have a go yourself!

