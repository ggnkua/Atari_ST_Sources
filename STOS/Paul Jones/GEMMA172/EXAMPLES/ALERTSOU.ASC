
1 mode 1
10 rem attempts to set colours to be like those of the desktop
20 if mode<2 then for A=0 to (4^(2-mode))-1 : read C : colour A,C : next A
30 data $777,$700,$70,$770,$7,$707,$77,$666,$444,$500,$50,$550,$5,$505,$55,$0
31 if mode=1 then colour 3,$0
40 hide 
50 rem **************************
80 rem Run STOS from the desktop
90 rem  Run this program in the resolution
100 rem that STOS was run in from the desktop.
120 rem
130 palette $777,$700,$70,$0
140 rem we need to reserve lots of banks for the aes_param
150 reserve as work 7,5*2 : rem control  ds.w 5
160 fill start(7) to start(7)+length(7),0
170 reserve as work 8,14*2 : rem global  ds.w 14
180 fill start(8) to start(8)+length(8),0
190 reserve as work 9,16*2 : rem int_in  ds.w 16
200 fill start(9) to start(9)+length(9),0
210 reserve as work 10,7*2 : rem int_out ds.w 7
220 fill start(10) to start(10)+length(10),0
230 reserve as work 11,3*4 : rem addr_in ds.l 3
240 fill start(11) to start(11)+length(11),0
250 reserve as work 12,1*4 : rem addr_outds.l 1
260 fill start(12) to start(12)+length(12),0
270 reserve as work 13,6*4 : rem aes_param
280 rem aes_params dc.l control,global,int_in,int_out,addr_in,addr_out>
290 rem ***
300 rem now fill out aes_param with adresses of other banks
310 rem ***
320 for A=0 to 5 : loke start(13)+A*4,start(7+A) : next A
330 rem ****************************
340 rem * Congratulations programmer !!!
350 rem * we've set up our aes controls
360 rem * now we can start the program proper
370 rem ****************************
380 reminder 7=control,8=global,9=int_in,10=int_out,addr_in,addr_out
390 rem code to call welcome alert box
391 gosub 590
400 A$="[1][This program is written in STOS][This is a REAL alert]"+chr$(0)
410 loke start(11),varptr(A$) : rem move.l alertstring$_addr,addr_in
420 doke start(9),1 : rem move.w #1,int_in
430 doke start(7),52 : rem move.w #52,control form_alert
440 doke start(7)+2,1 : rem move.w #1,control+2
450 doke start(7)+4,1 : rem move.w #1,control+4
460 doke start(7)+6,1 : rem move.w #1,control+6
470 doke start(7)+8,0 : rem move.w #0,control+8
480 dreg(1)=start(13) : rem move.l #aes_params,d1
490 dreg(0)=$C8 : rem move.w #$C8,d0 (why?!?) AES magic number!!!!!!!
500 rem *
510 trap 2 : rem Trap 2 accesses GEM
520 rem *
530 print deek(start(10)) : rem move.w int_out,d0
540 reminder 7=control,8=global,9=int_in,10=int_out,addr_in,addr_out
550 end 
590 doke start(7),10 : rem move.w #52,control form_alert
600 doke start(7)+2,0 : rem move.w #1,control+2
610 doke start(7)+4,1 : rem move.w #1,control+4
620 doke start(7)+6,0 : rem move.w #1,control+6
630 doke start(7)+8,0 : rem move.w #0,control+8
640 dreg(1)=start(13) : rem move.l #aes_params,d1
650 dreg(0)=$C8 : rem move.w #$C8,d0 (why?!?) AES magic number!!!!!!!
660 rem *
670 trap 2 : rem Trap 2 accesses GEM
680 rem *
690 INIT=deek(start(10)) : rem move.w int_out,d0
691 print "!";INIT
700 return