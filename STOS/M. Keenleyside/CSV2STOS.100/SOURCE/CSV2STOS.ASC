10 rem ----------------------------------------
20 rem ----------- CSV2STOS v1.00 -------------
30 rem ---- Michael Keenleyside (Dec 2021) ----
40 rem -------------- .MBKSide ----------------
50 rem ----------------------------------------
60 :
70 rem @STARTOFPROG
80 erase 1 : erase 5 : erase 6
90 mode 0 : click off : key off : curs off : show : mouseon
100 :
110 menu$ (1)="View   "
120 menu$ (1,1)="World Map"
130 menu$ (1,2)="Landscape Map"
140 menu$ (1,3)="----------"
150 menu$ (1,4)="World Blocks"
160 menu$ (1,5)="Landscape Blocks"
170 menu$ (1,6)="----------"
180 menu$ (1,7)="View NEO"
190 menu$ (1,8)="View PI1"
200 menu$ (1,9)="----------"
210 menu$ (1,10)="Quit"
220 :
230 menu$ (2)="Import CSV File   "
240 menu$ (2,1)="Make World Map"
250 menu$ (2,2)="Make Landscape Map"
260 menu$ (2,3)="----------"
270 menu$ (2,4)="Make Batch File"
280 menu$ (2,5)="Run Batch Converter"
290 :
300 menu$ (3)="Export to CSV   "
310 menu$ (3,1)="M.L. World Map"
320 menu$ (3,2)="M.L. Landscape Map"
330 menu$ (3,3)="----------"
340 menu$ (3,4)="TOME Map (*.MAP)"
350 menu$ (3,5)="AGT Map (*.CCM)"
360 :
370 menu on
380 :
390 locate 0,0
400 print
410 print
420 pen 4
430 centre "CSV2STOS v1.00" : print
440 print
450 pen 13
460 centre "By Michael Keenleyside" : print
470 centre "STOS Coders FB (Dec. 2021)" : print
480 print
490 print
500 pen 1
510 centre "A *.CSV data import/export utility" : print
520 print
530 centre "For users of Tiled, STOS Basic" : print
540 centre "& The Missing Link Extension" : print
550 centre "World or Landscape maps" : print
560 print
570 centre "Now with CSV export options" : print
580 centre "for TOME Extension *.MAP files" : print
590 centre "and AGT's *.CCM map format"
600 print
610 print
620 print
630 pen 13
640 centre "For more information on" : print
650 centre "AGT by Douglas Little (dml):" : print
660 centre "https://bitbucket.org/d_m_l/agtools" : print
670 curs off
680 rem @MAIN_SELECTION_LOOP
690 OPTION=mnbar : CHOICE=mnselect
700 :
710 rem View options
720 if OPTION=1 and CHOICE=10 then menu off : default : end
730 if OPTION=1 and CHOICE=1 then menu off : cls : goto 930
740 if OPTION=1 and CHOICE=2 then menu off : cls : goto 1230
750 if OPTION=1 and CHOICE=4 then menu off : cls : goto 1530
760 if OPTION=1 and CHOICE=5 then menu off : cls : goto 2190
770 if OPTION=1 and CHOICE=7 then menu off : cls : goto 3030
780 if OPTION=1 and CHOICE=8 then menu off : cls : goto 3140
790 :
800 rem Make World or Landscape Map(s), Make or Run Batch File
810 if OPTION=2 and CHOICE=1 then menu off : cls : goto 3260
820 if OPTION=2 and CHOICE=2 then menu off : cls : goto 3820
830 if OPTION=2 and CHOICE=4 then menu off : cls : goto 4540
840 if OPTION=2 and CHOICE=5 then menu off : cls : goto 5160
850 :
860 rem Export CSV data from World or Landscape Maps, TOME or AGT file formats
870 if OPTION=3 and CHOICE=1 then menu off : cls : goto 5890
880 if OPTION=3 and CHOICE=2 then menu off : cls : goto 6250
890 if OPTION=3 and CHOICE=4 then menu off : cls : goto 6620
900 if OPTION=3 and CHOICE=5 then menu off : cls : goto 7160
910 goto 680
920 :
930 rem @VIEW_WORLD_MAP
940 rem Load World Map
950 F$=file select$("*.MBK","Load World Map")
960 if F$="" then cls : goto 70
970 if length(5)=0 then load F$,5 : D=depack(start(5))
980 MAPWID=(deek(start(5)+4)+2)/2 : MAPHGT=deek(start(5)+6)/2
990 XB=MAPWID*16-320 : YB=MAPHGT*16-160
1000 rem Load World Blocks
1010 F$=file select$("*.MBK","Load World Blocks")
1020 if F$="" then goto 70
1030 if length(6)=0 then load F$,6 : D=depack(start(6))
1040 rem Init Viewscreen
1050 hide on : mouseoff : p on
1060 S5=start(5) : S6=start(6)
1070 world 0,0,320,160,0,1
1080 D=palt(start(6))
1090 locate 0,22 : centre "Use joystick to move around map" : print
1100 locate 0,24 : centre "Press space to exit" : print
1110 logic=back
1120 rem Display World Map, Read Joystick Movement
1130 X=0 : Y=0
1140 repeat
1150 world logic,S6,S5,X,Y,0
1160 if p left(1)=true and X>0 then X=X-2
1170 if p right(1)=true and X<XB then X=X+2
1180 if p up(1)=true and Y>0 then Y=Y-2
1190 if p down(1)=true and Y<YB then Y=Y+2
1200 screen swap : wait vbl
1210 until hardkey=57 : wipe logic : wipe back : erase 5 : erase 6 : p stop : default : click off : clear key
1220 goto 70
1230 rem @VIEW_LANDSCAPE_MAP
1240 rem Load Landscape Map
1250 F$=file select$("*.MBK","Load Landscape Map")
1260 if F$="" then cls : goto 70
1270 if length(5)=0 then load F$,5 : D=depack(start(5))
1280 MAPWID=(deek(start(5)+4)+2)/2 : MAPHGT=deek(start(5)+6)/2
1290 XB=MAPWID*16-320 : YB=MAPHGT*16-160
1300 rem Load Landscape Blocks
1310 F$=file select$("*.MBK","Load Landscape Blocks")
1320 if F$="" then goto 70
1330 if length(6)=0 then load F$,6 : D=depack(start(6))
1340 rem Init Viewscreen
1350 hide on : mouseoff : p on
1360 S5=start(5) : S6=start(6)
1370 landscape 0,0,320,160,0,1
1380 D=palt(start(6))
1390 locate 0,22 : centre "Use joystick to move around map" : print
1400 locate 0,24 : centre "Press space to exit" : print
1410 logic=back
1420 rem Display Landscape Map, Read Joystick Movement
1430 X=0 : Y=0
1440 repeat
1450 landscape logic,S6,S5,X,Y,0
1460 if p left(1)=true and X>0 then X=X-16
1470 if p right(1)=true and X<XB then X=X+16
1480 if p up(1)=true and Y>0 then Y=Y-2
1490 if p down(1)=true and Y<YB then Y=Y+2
1500 screen swap : wait vbl
1510 until hardkey=57 : wipe logic : wipe back : erase 5 : erase 6 : p stop : default : click off : clear key
1520 goto 70
1530 rem @VIEW_WORLD_BLOCKS
1540 rem Load World Blocks
1550 F$=file select$("*.MBK","Load World Blocks")
1560 if F$="" then erase 6 : goto 70
1570 if length(6)=0 then load F$,6 : D=depack(start(6))
1580 rem Setup Map to View World Blocks (max 256 possible with dml's patch, 128 without)
1590 if length(5)=0 then reserve as data 5,5008 : fill start(5) to start(5)+length(5),0 : loke start(5),38964820 : doke start(5)+4,98 : doke start(5)+6,100
1600 W=20 : H=13
1610 erase 1 : bcopy 5 to 1 : erase 5 : reserve as data 5,(W*H*2)+8 : fill start(5) to start(5)+length(5),0
1620 kopy start(1),start(5),8
1630 doke start(5)+4,(W*2)-2 : doke start(5)+6,H*2
1640 OB=start(1)+8 : B=start(5)+8
1650 for YY=1 to MH : kopy OB,B,MW*2
1660 B=B+(W*2) : OB=OB+(OW*2)
1670 next YY
1680 BLKNUM=peek(start(6)+6)
1690 rem Message Screen
1700 hide on : mouseoff : p on
1710 S5=start(5) : S6=start(6)
1720 locate 0,1
1730 pen 4
1740 centre "A quick & dirty world block viewer" : print : print
1750 pen 1
1760 centre "If this screen freezes &" : print
1770 centre "doesn't display any kind of" : print
1780 centre "'Ready to display' message below," : print
1790 centre "the program has probably crashed" : print : print
1800 centre "Make sure you are loading" : print
1810 centre "in a set of world blocks," : print
1820 centre "otherwise again, it will crash" : print : print
1830 centre "If any of this happens, reload!" : print : print
1840 pen 13
1850 centre "Note: Without dml's patch applied" : print
1860 centre "there is a 128 world block limit" : print
1870 centre "(256 with patch applied)": print
1880 B=8 : C=8 : BN=0 : if BLKNUM=0 then BLKNUM=256
1890 rem @WCLOOP
1900 A=1
1910 repeat
1920 if BN=BLKNUM then goto 1980
1930 set block S5,B,C,BN
1940 inc BN : B=B+16 : inc A
1950 until A>20
1960 B=8 : C=C+16
1970 goto 1890
1980 rem @WB_VIEW_EXITLOOP
1990 pen 2
2000 print : print
2010 centre "Ready to display" : print : print
2020 centre "Press any key to continue" : print
2030 wait key
2040 cls : flash off
2050 D=palt(start(6))
2060 world 0,0,320,160,0,1
2070 locate 0,22 : centre "Joystick up or down to view more blocks" : print
2080 locate 0,24 : centre "Press space to exit" : print
2090 logic=back
2100 rem Start loop, display world map
2110 X=0 : Y=0
2120 repeat
2130 world logic,S6,S5,X,Y,0
2140 if p up(1)=true and Y>0 then Y=Y-2
2150 if p down(1)=true and Y<56 then Y=Y+2
2160 screen swap : wait vbl
2170 until hardkey=57 : wipe logic : wipe back : erase 5 : erase 6 : p stop : default : click off : clear key
2180 goto 70
2190 rem @VIEW_LANDSCAPE_BLOCKS
2200 rem Load Blocks
2210 F$=file select$("*.MBK","Load Landscape Blocks")
2220 if F$="" then erase 6 : goto 70
2230 if length(6)=0 then load F$,6 : D=depack(start(6))
2240 rem Setup Map to View Landscape Blocks (max 512 possible with dml's patch)
2250 if length(5)=0 then reserve as data 5,5008 : fill start(5) to start(5)+length(5),0 : loke start(5),38964820 : doke start(5)+4,98 : doke start(5)+6,100
2260 W=20 : H=26
2270 erase 1 : bcopy 5 to 1 : erase 5 : reserve as data 5,(W*H*2)+8 : fill start(5) to start(5)+length(5),0
2280 kopy start(1),start(5),8
2290 doke start(5)+4,(W*2)-2 : doke start(5)+6,H*2
2300 OB=start(1)+8 : B=start(5)+8
2310 for YY=1 to MH : kopy OB,B,MW*2
2320 B=B+(W*2) : OB=OB+(OW*2)
2330 next YY
2340 N=map toggle(start(5))
2350 BLKNUM=peek(start(6)+6)
2360 rem Init Screen
2370 hide on : mouseoff : p on
2380 S5=start(5) : S6=start(6)
2390 rem Message Screen
2400 curs on : locate 0,5
2410 pen 13
2420 centre "Temporary Bugfix (of sorts)" : print
2430 print
2440 pen 1
2450 print "Landscape block total detected is";BLKNUM : print : print
2460 print "If correct, enter this number below" : print
2470 print "If incorrect, please enter correct"
2480 print "number of landscape blocks to display" : print : print
2490 input "Enter 0 if unknown:";BLKNUM
2500 if BLKNUM=0 then BLKNUM=512
2510 curs off : cls
2520 locate 0,1
2530 pen 1
2540 locate 0,0
2550 pen 4
2560 centre "A quick & dirty landscape block viewer" : print : print
2570 pen 1
2580 centre "If this screen freezes &" : print
2590 centre "doesn't display any kind of" : print
2600 centre "'Ready to display' message below," : print
2610 centre "the program has probably crashed" : print : print
2620 centre "Make sure you are loading" : print
2630 centre "in a set of landscape blocks," : print
2640 centre "otherwise again, it will crash" : print : print
2650 centre "If any of this happens, reload!" : print : print
2660 pen 10
2670 centre "Warning: Display may appear 'glitchy'" : print
2680 centre "This 'might' be resolved at a later date" : print : print
2690 pen 13
2700 centre "Note: Without dml's patch applied" : print
2710 centre "there is a 256 landscape block limit" : print
2720 centre "(512 with patch applied)": print
2730 B=8 : C=8 : BN=0
2740 rem @LCLOOP
2750 A=1
2760 repeat
2770 if BN=BLKNUM then goto 2830
2780 set block S5,B,C,BN
2790 inc BN : B=B+16 : inc A
2800 until A>20
2810 B=8 : C=C+16
2820 goto 2740
2830 rem @LB_VIEW_EXITLOOP
2840 pen 2
2850 print : print
2860 centre "Ready to display" : print
2870 centre "Press any key to continue" : print
2880 wait key : cls
2890 D=palt(start(6))
2900 landscape 0,0,320,160,0,1
2910 locate 0,22 : centre "Joystick up or down to view more blocks" : print
2920 locate 0,24 : centre "Press space to exit" : print
2930 logic=back
2940 rem Start loop, display landscape map
2950 X=0 : Y=0
2960 repeat
2970 landscape logic,S6,S5,X,Y,0
2980 if p up(1)=true and Y>0 then Y=Y-2
2990 if p down(1)=true and Y<256 then Y=Y+2
3000 screen swap : wait vbl
3010 until hardkey=57 : wipe logic : wipe back : erase 5 : erase 6 : p stop : default : click off : clear key
3020 goto 70
3030 rem @VIEW_NEO
3040 rem Load NEO
3050 F$=file select$("*.NEO","Load & View NEO")
3060 if F$="" then cls : goto 70
3070 if length(5)=0 then reserve as screen 5 : load F$,5
3080 S5=start(5) : get palette(5)
3090 logic=back
3100 blit S5,0,0,320,200,logic,0,0 : blit S5,0,0,320,200,physic,0,0
3110 wait key
3120 cls : erase 5 : default : click off : clear key
3130 goto 70
3140 rem @VIEW_PI1
3150 rem Load PI1
3160 F$=file select$("*.PI1","Load & View PI1")
3170 if F$="" then cls : goto 70
3180 if length(5)=0 then reserve as screen 5 : load F$,5
3190 S5=start(5) : get palette(5)
3200 logic=back
3210 blit S5,0,0,320,200,logic,0,0 : blit S5,0,0,320,200,physic,0,0
3220 wait key
3230 cls : erase 5 : default : click off : clear key
3240 goto 70
3250 :
3260 rem @MAKE_WORLD_MAP
3270 curs on
3280 locate 0,6
3290 pen 1
3300 centre "Enter the full tile width &" : print
3310 centre "height of your world map in below" : print : print
3320 print
3330 print
3340 input "Width of map:";W
3350 if W=0 then erase 1 : erase 5 : erase 6 : curs off : goto 70
3360 input "Height of map:";H
3370 if H=0 then erase 1 : erase 5 : erase 6 : curs off : goto 70
3380 erase 1 : erase 5 : erase 6 : reserve as data 6,5008 : fill start(6) to start(6)+length(6),0 : loke start(6),38964820 : doke start(6)+4,98 : doke start(6)+6,100
3390 bcopy 6 to 1 : erase 6 : reserve as data 6,(W*H*2)+8 : fill start(6) to start(6)+length(6),0
3400 kopy start(1),start(6),8
3410 doke start(6)+4,(W*2)-2 : doke start(6)+6,H*2
3420 OB=start(1)+8 : B=start(6)+8
3430 for YY=1 to MH : kopy OB,B,MW*2
3440 B=B+(W*2) : OB=OB+(OW*2)
3450 next YY
3460 F$=file select$("*.mbk","Load World Blocks")
3470 if F$="" then goto 70
3480 if length(5)=0 then load F$,5
3490 F$=file select$("*.csv","Load CSV File")
3500 if F$="" then goto 70
3510 wipe logic : curs off : flash off : hide : mouseoff
3520 D=palt(start(5))
3530 rem World map conversion process
3540 S1=start(1) : S5=start(5) : S6=start(6)
3550 world 0,0,320,192,0,1
3560 world back,S5,S6,0,0,0
3570 B=8 : C=8 : open in #1,F$
3580 logic=back
3590 :
3600 rem @WCNVLOOP
3610 A=1
3620 repeat
3630 if eof(#1) then close #1 : default : mode 0 : click off : key off : show : mouseon : goto 3730
3640 input #1,BLKCN
3650 set block S6,B,C,BLKCN
3660 world back,S5,S6,0,0,0
3670 screen swap : wait vbl
3680 B=B+16 : inc A
3690 until A=W+1
3700 B=8 : C=C+16
3710 goto 3600
3720 :
3730 rem @SV_WORLD_MAP
3740 F$=file select$("*.MBK","Save a World map")
3750 if F$="" then default : click off : clear key : goto 70
3760 AA=instr(F$,".") : if AA=0 then F$=F$+".MBK"
3770 if upper$(right$(F$,4))=".MBK" then save F$,6 : goto 3790
3780 bsave F$,start(6) to start(6)+length(6)
3790 rem @W_MAP_SAVED
3800 default : key off : click off : clear key
3810 goto 70
3820 rem @MAKE_LANDSCAPE_MAP
3830 curs on
3840 locate 0,0
3850 pen 4
3860 print
3870 centre "Note: If you are running CSV2STOS.ACB" : print
3880 centre "as compiled code & it crashes, run as" : print
3890 centre "interpreted code within STOS instead." : print
3900 print
3910 pen 13
3920 centre "Landscape map display can be unstable." : print
3930 print
3940 centre "My tests have shown it's possible to" : print
3950 centre "make a vertical map 20 wide x 830 high" : print
3960 centre "before an issue where the screen goes" : print
3970 centre "blank 1 pixel just before the end." : print
3980 print
3990 centre "72 x 72 is fine, 200 x 100 is fine." : print
4000 print
4010 centre "So investigations are ongoing here(!)" : print
4020 print
4030 print
4040 pen 1
4050 print "Enter the full tile width & height"
4060 print "of your landscape map in below:" : print
4070 print
4080 input "Width of map:";W
4090 if W=0 then erase 1 : erase 5 : erase 6 : curs off : goto 70
4100 input "Height of map:";H
4110 if H=0 then erase 1 : erase 5 : erase 6 : curs off : goto 70
4120 erase 1 : erase 5 : erase 6 : reserve as data 6,5008 : fill start(6) to start(6)+length(6),0 : loke start(6),38964820 : doke start(6)+4,98 : doke start(6)+6,100
4130 bcopy 6 to 1 : erase 6 : reserve as data 6,(W*H*2)+8 : fill start(6) to start(6)+length(6),0
4140 kopy start(1),start(6),8
4150 doke start(6)+4,(W*2)-2 : doke start(6)+6,H*2
4160 OB=start(1)+8 : B=start(6)+8
4170 for YY=1 to MH : kopy OB,B,MW*2
4180 B=B+(W*2) : OB=OB+(OW*2)
4190 next YY
4200 F$=file select$("*.mbk","Load Landscape Blocks")
4210 if F$="" then goto 70
4220 if length(5)=0 then load F$,5
4230 F$=file select$("*.csv","Load CSV File")
4240 if F$="" then goto 70
4250 wipe logic : curs off : flash off : hide : mouseoff
4260 D=palt(start(5)) : N=map toggle(start(6))
4270 rem Landscape map conversion process
4280 S1=start(1) : S5=start(5) : S6=start(6)
4290 landscape 0,0,320,192,0,1
4300 landscape back,S5,S6,0,0,0
4310 B=8 : C=8 : open in #1,F$
4320 logic=back
4330 rem @LCNVLOOP
4340 A=1
4350 repeat
4360 if eof(#1) then close #1 : default : mode 0 : click off : key off : show : mouseon : goto 4450
4370 input #1,BLKCN
4380 set block S6,B,C,BLKCN
4390 landscape back,S5,S6,0,0,0
4400 screen swap : wait vbl
4410 B=B+16 : inc A
4420 until A=W+1
4430 B=8 : C=C+16
4440 goto 4330
4450 rem @SV_LANDSCAPE_MAP
4460 F$=file select$("*.MBK","Save a Landscape map")
4470 if F$="" then default : click off : clear key : goto 70
4480 AA=instr(F$,".") : if AA=0 then F$=F$+".MBK"
4490 if upper$(right$(F$,4))=".MBK" then save F$,6 : goto 4510
4500 bsave F$,start(6) to start(6)+length(6)
4510 rem @L_MAP_SAVED
4520 default : key off : click off : clear key
4530 goto 70
4540 rem @MAKE_BATCH_FILE
4550 rem Setup description file for batch conversion
4560 flash off : curs off
4570 locate 0,0
4580 pen 2
4590 print
4600 centre "<<< MAKE BATCH FILE >>>" : print : print
4610 centre "Description File Maker" : print
4620 print
4630 pen 1
4640 centre "Set up a description file here to" : print
4650 centre "use with the 'Run Batch Converter'" : print
4660 centre "option within the main menu" : print : print
4670 centre "The next file menu will ask you" : print
4680 centre "to name your description file" : print
4690 centre "ie. something like BATCHRUN.CSV" : print
4700 print
4710 centre "Then you will enter the following:" : print
4720 centre "map type, map width, map height," : print
4730 centre "CSV input file, map output filename" : print
4740 print
4750 centre "With practice you should get it right!" : print
4760 centre "See example batch file included also." : print
4770 centre "It's possible just to edit in Notepad." : print
4780 print : print
4790 pen 4
4800 centre "Press any key to begin" : print : pen 1
4810 wait key
4820 cls : curs on : show : mouseon
4830 :
4840 FCSV$=file select$("*.CSV","Name the description file *.CSV")
4850 if FCSV$="" then default : key off : click off : clear key : goto 70
4860 AA=instr(F$,".") : if AA=0 then FCSV$=FCSV$+".CSV"
4870 open out #1,FCSV$
4880 :
4890 rem @BATCH_DESCR_LOOP
4900 pen 4
4910 print : print "Time for a new map?" : print
4920 pen 1
4930 print : print "Input: 1 for World, 2 for Landscape" : print : print "0 to stop adding files" : print
4940 print : input "World or Landscape map?";MAPTYPE
4950 if MAPTYPE=0 then close #1 : default : key off : click off : clear key : goto 70
4960 print #1,MAPTYPE;",";
4970 print : input "Map Width:";W
4980 if W=0 then close #1 : curs off : goto 70
4990 print #1,W;",";
5000 print : input "Map Height:";H
5010 if H=0 then close #1 : curs off : goto 70
5020 print #1,H;",";
5030 :
5040 CSVD$=file select$("*.CSV","Select CSV Map Data (*.CSV)")
5050 if CSVD$="" then default : key off : click off : clear key : close #1 : goto 70
5060 print #1,CSVD$;",";
5070 :
5080 CSVM$=file select$("*.MBK","Map Export Filename (*.MBK)")
5090 if CSVM$="" then default : key off : click off : clear key : close #1 : goto 70
5100 print #1,CSVM$
5110 :
5120 pen 2
5130 print : print : print "Description added. Press any key!" : print : print
5140 wait key : cls
5150 goto 4890
5160 rem @RUN_BATCH_FILE
5170 rem Run Batch Description File to convert a set of CSV files to Missing Link maps
5180 wipe logic
5190 CSVDS$=file select$("*.csv","Select Batch Description File")
5200 if CSVDS$="" then goto 70
5210 :
5220 default : mode 0 : click off : key off : mouseoff : clear key : hide : hide
5230 :
5240 open in #1,CSVDS$
5250 :
5260 locate 0,1
5270 pen 4
5280 print
5290 centre "<<< RUN BATCH CONVERTER >>>" : print : print
5300 print
5310 pen 13
5320 centre "You will be notified each time" : print
5330 centre "a map has finished converting" : print : print
5340 pen 10
5350 centre "Note: This may take a while!" : print
5360 print
5370 print
5380 print
5390 rem @BATCH_FILE_READ
5400 if eof(#1) then close #1 : cls : locate 0,11 : pen 2 : centre "Batch Conversion Completed" : print : print : pen 1 : centre "Press any key" : curs off : wait key : show : show : goto 70
5410 input #1,MAPTYPE : input #1,W : input #1,H : input #1,CSVMAP$ : input #1,OUTPUT$
5420 pen 1
5430 print "Map Type: ";
5440 pen 4
5450 if MAPTYPE=1 then print "World" else if MAPTYPE=2 then print "Landscape"
5460 print
5470 pen 1 : print "Map Width:"; : pen 4 : print W
5480 pen 1 : print "Map Height:"; : pen 4 : print H
5490 print
5500 pen 1 : print "Input: "; : pen 4 : print CSVMAP$
5510 pen 1 : print "Output: "; : pen 4 : print OUTPUT$
5520 print
5530 pen 1
5540 print "Converting, please wait... ";
5550 :
5560 erase 1 : erase 6 : reserve as data 6,5008 : fill start(6) to start(6)+length(6),0 : loke start(6),38964820 : doke start(6)+4,98 : doke start(6)+6,100
5570 bcopy 6 to 1 : erase 6 : reserve as data 6,(W*H*2)+8 : fill start(6) to start(6)+length(6),0
5580 kopy start(1),start(6),8
5590 doke start(6)+4,(W*2)-2 : doke start(6)+6,H*2
5600 OB=start(1)+8 : B=start(6)+8
5610 for YY=1 to MH : kopy OB,B,MW*2
5620 B=B+(W*2) : OB=OB+(OW*2)
5630 next YY
5640 :
5650 if MAPTYPE=2 then N=map toggle(start(6))
5660 :
5670 rem Map conversion process
5680 S6=start(6)
5690 B=8 : C=8 : open in #2,CSVMAP$
5700 :
5710 rem @BATCH_CSV_CONVERT_LOOP
5720 A=1
5730 repeat
5740 if eof(#2) then close #2 : goto 5820
5750 input #2,BLKCN
5760 set block S6,B,C,BLKCN
5770 B=B+16 : inc A
5780 until A=W+1
5790 B=8 : C=C+16
5800 goto 5710
5810 :
5820 rem @SV_BATCH_MAP
5830 AA=instr(OUTPUT$,".") : if AA=0 then OUTPUT$=OUTPUT$+".MBK"
5840 if upper$(right$(OUTPUT$,4))=".MBK" then save OUTPUT$,6 : goto 5860
5850 bsave OUTPUT$,start(6) to start(6)+length(6)
5860 rem @BATCH_MAP_SAVED
5870 pen 2 : print "DONE!" : pen 1 : print : print : goto 5390
5880 :
5890 rem @EXW_CSV_LOAD_WORLD_MAP
5900 F$=file select$("*.MBK","Load World Map")
5910 if F$="" then default : key off : click off : clear key : goto 70
5920 if length(5)=0 then load F$,5 : D=depack(start(5))
5930 MAPWID=(deek(start(5)+4)+2)/2 : MAPHGT=deek(start(5)+6)/2
5940 F$=file select$("*.MBK","Load World Blocks")
5950 if F$="" then goto 70
5960 if length(6)=0 then load F$,6 : D=depack(start(6))
5970 F$=file select$("*.CSV","Name your CSV file (*.CSV)")
5980 if F$="" then default : key off : click off : clear key : goto 70
5990 AA=instr(F$,".") : if AA=0 then F$=F$+".CSV"
6000 curs off : flash off : click off : hide : mouseoff
6010 S1=start(1) : S5=start(5) : S6=start(6)
6020 world 0,0,320,200,0,1
6030 world back,S6,S5,0,0,0 : D=palt(start(6)) : print : print
6040 print : logic=back : locate 0,11 : centre "Please wait, working..." : print
6050 screen swap : wait vbl
6060 X=8 : Y=8 : HGT=1 : open out #1,F$
6070 rem @WRLD_CSV_LOOP
6080 W=1
6090 repeat
6100 if HGT>MAPHGT then close #1 : goto 6160
6110 print #1,(which block(S5,X,Y)+1);",";
6120 X=X+16 : inc W
6130 until W>MAPWID : print #1," "
6140 X=8 : Y=Y+16 : inc HGT
6150 goto 6070
6160 rem @WRLD_CSV_EXITLOOP
6170 default : mode 0 : key off : click off : curs off : clear key : hide
6180 locate 0,2
6190 pen 1 : print "Map Width:"; : pen 4 : print MAPWID
6200 pen 1 : print "Map Height:"; : pen 4 : print MAPHGT
6210 print
6220 pen 4
6230 print "CSV file saved. Press any key!" : print
6240 wait key : default : key off : click off : clear key : goto 70
6250 rem @EXL_CSV_LOAD_LANDSCAPE_MAP
6260 F$=file select$("*.MBK","Load Landscape Map")
6270 if F$="" then default : key off : click off : clear key : goto 70
6280 if length(5)=0 then load F$,5 : D=depack(start(5))
6290 MAPWID=(deek(start(5)+4)+2)/2 : MAPHGT=deek(start(5)+6)/2
6300 F$=file select$("*.MBK","Load Landscape Blocks")
6310 if F$="" then goto 70
6320 if length(6)=0 then load F$,6 : D=depack(start(6))
6330 F$=file select$("*.CSV","Name your CSV file (*.CSV)")
6340 if F$="" then default : key off : click off : clear key : goto 70
6350 AA=instr(F$,".") : if AA=0 then F$=F$+".CSV"
6360 curs off : flash off : click off : mouseoff
6370 S1=start(1) : S5=start(5) : S6=start(6)
6380 landscape 0,0,320,200,0,1
6390 landscape back,S6,S5,0,0,0 : D=palt(start(6)) : print : print
6400 print : logic=back : locate 0,11 : centre "Please wait, working..." : print
6410 hide
6420 screen swap : wait vbl
6430 X=8 : Y=8 : HGT=1 : open out #1,F$
6440 rem @LAND_CSV_LOOP
6450 W=1
6460 repeat
6470 if HGT>MAPHGT then close #1 : goto 6530
6480 print #1,(which block(S5,X,Y)+1);",";
6490 X=X+16 : inc W
6500 until W>MAPWID : print #1," "
6510 X=8 : Y=Y+16 : inc HGT
6520 goto 6440
6530 rem @LAND_CSV_EXITLOOP
6540 default : mode 0 : key off : click off : curs off : clear key : hide
6550 locate 0,2
6560 pen 1 : print "Map Width:"; : pen 4 : print MAPWID
6570 pen 1 : print "Map Height:"; : pen 4 : print MAPHGT
6580 print
6590 pen 4
6600 print "CSV file saved. Press any key!" : print
6610 wait key : default : key off : click off : clear key : goto 70
6620 rem @EXT_CSV_LOAD_TOME_MAP
6630 locate 0,6 : hide : hide
6640 pen 4
6650 centre "<<< TOME2CSV >>>" : print
6660 print
6670 print
6680 pen 1
6690 centre "Did you ever use TOME?" : print
6700 print
6710 centre "Now you can find those old maps" : print
6720 centre "& convert them to import into Tiled!" : print
6730 print
6740 pen 13
6750 centre "Note: You must have TOME installed" : print
6760 centre "for this program feature to work" : print
6770 print
6780 print
6790 pen 4
6800 centre "Press any key to begin..."
6810 pen 1 : wait key : show : show
6820 F$=file select$("*.MAP","Load TOME Map")
6830 if F$="" then default : key off : click off : clear key : goto 70
6840 reserve as work 5,64000 : bload F$,start(5)
6850 reserve as screen 6 : wipe start(6)
6860 F$=file select$("*.CSV","Set CSV Filename")
6870 if F$="" then default : key off : click off : clear key : goto 70
6880 AA=instr(F$,".") : if AA=0 then F$=F$+".CSV"
6890 curs off : flash off : hide : mouseoff
6900 logic=back
6910 map banks start(5),start(5),start(5),start(5),start(6)
6920 MAPWID=map x(0) : MAPHGT=map y(0)
6930 cls : print : print
6940 print : hide : locate 0,11 : centre "Please wait, working..." : print
6950 screen swap : wait vbl
6960 X=0 : Y=0 : HGT=1 : open out #1,F$
6970 rem @TOME_CONV_LOOP
6980 W=1
6990 repeat
7000 if HGT>MAPHGT then close #1 : cls : goto 7060
7010 T=map tile(X,Y) : T=T+1 : print #1,(T);",";
7020 X=X+1 : inc W
7030 until W>MAPWID : print #1," "
7040 X=0 : Y=Y+1 : inc HGT
7050 goto 6970
7060 rem 7770_TOME_LOOP
7070 cls : locate 0,2
7080 pen 1 : print "Map Width:"; : pen 4 : print MAPWID
7090 pen 1 : print "Map Height:"; : pen 4 : print MAPHGT
7100 print
7110 pen 4
7120 print "CSV file saved. Press any key!" : print
7130 screen swap : wait vbl
7140 wait key
7150 default : mouseon : goto 70
7160 rem @EXA_CSV_LOAD_AGTCCM_MAP
7170 curs on
7180 locate 0,2 : hide : hide
7190 pen 4
7200 centre "<<< AGT2STOS >>>" : print
7210 print
7220 pen 1
7230 centre "Converts *.CCM format maps" : print
7240 centre "(made using AGTCUT.EXE) into CSV data" : print
7250 print
7260 centre "You can paste the data into a dummy" : print
7270 centre "*.TMX map and load this into Tiled" : print
7280 print
7290 centre "Export a new CSV file from Tiled" : print
7300 centre "to import into CSV2STOS, to convert" : print
7310 centre "the CSV data into a Missing Link" : print
7320 centre "World or Landscape map when ready" : print
7330 print
7340 print
7350 pen 4
7360 centre "Please specify how much memory" : print
7370 centre "to reserve for your CCM map" : print : print
7380 pen 1
7390 centre "(Enter 512000 or higher if unsure)": print : print : print
7400 clear key : input "Reserve amount:";MEMRESAGT
7410 show : show
7420 reserve as work 1,MEMRESAGT
7430 F$=file select$("*.CCM","Load AGT Map")
7440 if F$="" then default : erase 1 : cls : goto 70
7450 bload F$,1
7460 R=10 : MAPWID=(deek(start(1)+2)) : MAPHGT=deek(start(1)+6) : TC=MAPWID*MAPHGT
7470 cls : curs off
7480 locate 0,2
7490 pen 1 : print "Map Width:"; : pen 4 : print MAPWID
7500 pen 1 : print "Map Height:"; : pen 4 : print MAPHGT
7510 print
7520 pen 1
7530 print "Time to name your new CSV file."
7540 print
7550 pen 4
7560 print "Press any key!"
7570 pen 1
7580 wait key
7590 curs on
7600 FCSV$=file select$("*.CSV","Save CSV File")
7610 if FCSV$="" then default : key off : click off : clear key : goto 7770
7620 AA=instr(F$,".") : if AA=0 then FCSV$=FCSV$+".CSV"
7630 print
7640 print
7650 print "Conversion process underway! Working..."
7660 HGT=1 : open out #1,FCSV$
7670 rem @LOOP
7680 W=1
7690 repeat
7700 if HGT>MAPHGT then goto 7770
7710 V=deek(start(1)+R) : V=V+1
7720 print #1,V;",";
7730 inc W : R=R+4
7740 until W>MAPWID : print #1," "
7750 inc HGT
7760 goto 7670
7770 rem @FINISH
7780 print
7790 print
7800 pen 4
7810 print "Done. Press any key!"
7820 pen 1
7830 close #1 : erase 1
7840 wait key
7850 default : key off : click off : clear key : mouseon : goto 70
