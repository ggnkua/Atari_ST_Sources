          This  document  is  the first article I  wrote  for  the 
stupendous  magazine.  I  have changed nothing  so  some  comments 
refering  to other parts of the magazine or disk files  will  seem 
odd.  The  source  you need to look at is in this  folder  and  is 
called scroll.bas.   For details of how to get the great  magazine 
"stupendous"  please write to Kenny Jarman at :

     ATSUA 
     18 POPLAR CLOSE
     BIGGLESWADE
     BEDFORDSHIRE
     SG18 OEW
     ENGLAND




                         THE STOS SECTION 
 
written by ROBERT ANNETT (or GBH of STORM)


          Well hello and welcome to my all new section in this all 
new magazine.  As you should be able to guess this is a section on 
programming  in stos.   Under my name of GBH you might  have  seen 
some  of my work in the storm demos.   If not then you should  get 
one from the nearest P.D.  library!!   If you are like me, you are 
probably sick to death of stos sections in other magazines.  Why??  
Because either they talk down to you and assume that you have  the 
I.Q. of a squashed hedgehog or the person writting it doesn't know 
anything about stos themselves as they are a journalist and not  a 
programmer!!
            Well I hope to give a refreshing change (no  not  your 
nappies.  Aaarrg I am starting to talk down to you already!! Don't 
worry  I am only joking.)  I will  assume that you have  read  the 
stos manual,  understood it but just need a little help in  trying 
to put it all into practice.   So every article I will explain how 
to do something relatively complex e.g.  using samples,  including 
machine  code,  sine waving,  huge sprites  etc etc.  I will  also 
include on the disk examples of these things. I will try to review 
a  stos written game or demo including the source and if there  is 
space  the  compiled version for everyone.   If there is  any  new 
product or program I will review it.  I will also give you a quick 
tip every issue and maybe the occasional competition!!
          This  section  will be a lot better though  if  you  the 
readers help me.  If any of you have written a game/demo that  you 
want distributed then we would love to look at it and do that  for 
you.  If you have achieved some amazing effect then please send
it  to  me.  If you have any problem (stos related  and  not  your 
personal life!) then please write to me telling me what it is  and 
I will solve it if I can.


                        THE PROGRAMMING PART!!

          Well  for  my  first programming advice I  will  try  to 
explain and show how the effective use of screenswap and wait  vbl 
can improve your programes a huge amount.  I use screenswap in all 
of  my games and demos and before I saw lots of other  stos  games 
and demos (since I joined STORM) I assumed everyone did.  But from 
the  jerky graphics and scroll lines that 'break up' and  split  I 
know  that many people do not use it or maybe even understand  it. 
So I will now try and convert all of you to my way of thinking.
          First of all I will explain the problem . Now as you may 
know your tv or monitor updates it's screen 50 times a second. (60 
if you are a yank).  So this means that every 50th of a second the 
screen image will be refreshed or redrawn. This is refered to as a 
vertical blank.  What happens is that in your tv an electron  beam 
'paints'  the  screen along vertical rows from left to  right  and 
then it moves down to the next row until the whole screen is  full 
which  takes about 50th of a second to do.Then it goes to the  top 
again  to  draw it again.  Now if the beam is half  way  down  the 
screen  and your program moves a block of screen in the centre  of 
the screen then the tv will display the bottom half of it when  it 
gets  down  there but it will not do the top half until  the  next 
vertical blank.  This will make the block appear to flicker as  it 
appears.  If  this  block  of screen is meant to  be  moving  i.e. 
scrolling  then you might have erased the top half yourself before 
the tv ever draws it on!  So it will jerk around and you will  see 
it cut if the electron beam goes past it. 
          To  avoid this unsightly problem what you need to do  is 
construct  the screen you want displayed somewhere where  it  will 
not  be seen,  wait till the electron beam is out of the  way  and 
then quickly swap screens so your newly constructed screen will be 
displayed and there will be no jerking.  Is it possible? Of course 
it  is. The chip in the ST that causes the tv to display  what  it 
wants  is  called  the shifter chip.  What it does is  look  at  a 
section in memory,decode it and send the resulting information  to 
the  tv as a picture.  The area it takes the data from  is  called 
physbase or in stos,  physical screen.  Also in memory is  another 
area  called logic.  You can redefine where the logic is so it  is 
somewhere in memory where whatever you copy to it will not  appear 
on the tv screen.  This is done easly in stos with LOGIC=BACK. Now 
the place where the electron beam is out of the way is when it has 
reached the bottom of the screen.  You can make the computer  wait 
until  this happens with the WAIT VBL command.  Once it is out  of 
the  way you now want to swap logic and physic so your new  screen 
will be shown.  This is done with SCREENSWAP. What was in logic is 
now in physic and visa versa.
          Easy isn't it.  On the disk is a small example of  this.   
It  is  the basic file called SCROLL.BAS.  This is a  very  smooth 
vertical scroll using the above method.

10 rem
11 rem
20 key off:curs off:hide on:mode 0:logic=back:s=0
30 reserve as screen 6:unpack 5,6:get palette(6)
40 rem loop
50 screencopy 6,0,s,320,200 to logic,0,0
60 screencopy 6,0,0,320,199 logic,0,199-s
70 inc s
80 if s=199 then s=0
90 screenswap
100 wait vbl
110 goto 50

          The explaination to this is below.

10 info
20 info
30 reserves the data screen,unpacks it etc
40 tells you it's the start of the loop
50 scrolls the screen
60 scrolls the screen
70 increases the varable so the screen will scroll
80 checks if the screen has gone round once to see if the  varable 
need resetting
90 swaps the screens so your new one will be displayed
100 waits until the electron beam hits the bottom of the screen so 
we can now rework out everything.......
110 continues loop



          All  of  the stos commands actually write to  the  logic 
screen so there is no problems with draw etc.  If you want to  use 
use  sprites with this scroll routine at the beginning you  should 
do  an UPDATE OFF and just before you screenswap you should do  an 
REDRAW.  There  are  quicker scroll routines but this  one  allows 
sprites to be used on it. 




                             QUICK TIP

          It  is  hard  trying  to program in low  res  as  it  is 
difficult to see much on the screen. It is a realy annoying though 
to set up the cls:key off:mode 1 etc etc every time to just change 
one line. So what I suggest you do is type in KEY(18)="default:key 
off:mode  1:show on:curs on:list'" .  Now if  you press  shift  f8 
everything will be set up for you to continue programming.  A  lot 
better!!


                              THE END          

          Well thanks for reading this and I hope the  programming 
bit  was  not over your heads or to simple.  Comments on  this  or 
anything else will be appreciated. In future issues I will include 
reviews  and  news  etc  but before I do that  I  will  need  more 
information  which is where you can come in.  In the next issue  I 
will  review Richard Gales big stos demo and a game.  I will  also 
bring any interesting facts to your attention.  Maybe if I can get 
a copy I will tell you about stos 3D.  I was going to review paint 
master ,which allows up to 512 colours on the screen in stos,  but 
I  have  heard that it has benn recently updated so  it  would  be 
unfair to review the outdated copy I have.
          On  this  disk  is the scrolling  routine  and  also  an 
accessory (.acb file) that is called format.acb .  It will  format 
disks from inside stos. 
               If  you  wish to contact me for any  reason  please 
write to:

               ROBERT ANNETT
               15, RIDGEWOOD GARDENS
               HARPENDEN
               HERTS
               AL5 3NN


          
          

