This was written for the STupendous magazine. Please write to 
Kenny Jarman at the address on one of the other docs for details 
on how to get it.







                         THE STOS SECTION

     by Robert Annett


          Greetings readers and welcome again to another great etc 
etc etc article about that wonderful STOS thing.  First of all I 
normally give you lot any news there is on the stos front (which 
will probably be out of date when you get this ) and this month is 
no exception. To begin with I was recently leant a copy of STOS 3D 
which I will review later.  Did you know that ozone only had three 
people registering for it? This was meant to be one of the best 
ever stos games but it appears that shareware is only working for 
people called Jeff Minter.  Anyway the source to this is now 
available from Goodmans so perhaps the author will get some money 
in the end. Ozone 2 has also been released and is on the 
micromagic licenseware label from goodmans. Goodluck Nick. 
          It  seems that Mandarin (Europress) has all but  dropped 
support for stos,  so mags like this one are needed more than ever 
and  so  is the support from  authors  themselves.  Apparently  ST 
Format will give away a bunch of extensions called 'Misty' written 
by  Colin  Watt.  I suggest you get them as they  are  very  good.  
          STEN (the disk mag) have started a regular stos  section 
themselves  so  perhaps if you could get hold of copy  of  STEN  8 
onwards you might get some interesting info.  I recently got  hold 
of  another disk mag called HP SOURCE which was packed  with  stos 
and  assembler  source  which  might  interest  some  of  you.   I 
personally  think the stos source was a little on the simple  side 
but you might find something there of some use to you.


     Programming.

          Now this will be one of the more technical pieces I have 
written so read it slowly and look at the examples on the RAW 
disk.  Anyone who reads scroll lines in demos will have heard 
about 'Hardware' or 'Sync' scrolling. Although the full effect is 
not possible in stos it is possible to obtain quite a good one on 
a normal 520STFM in stos. Basically on an amiga or an STE to do 
hardware scrolling you have a fixed picture in memory and instead 
of moving the picture around you move the physic pointer down it. 
This means that if you move the pointer across a picture it will 
move across you monitor screen and so will be scrolling. If you 
have a 200k picture in memory and point at the top then you will 
see the top 32k of it. Now if you change the pointer so it is one 
pixel line down then the picture will have appeared to have 
scrolled one pixel line up. If this is done continuously then you 
have your scroller.
          You know that in STOS you can move the physic pointer 
with PHYSIC=??? . However because of the cheap and nasty video 
shifter chip in the ST you can only move it on 256 byte 
boundaries. As there are 160 bytes per scan lines then moving it 
256 bytes will shift the picture in all sorts of wierd ways and 
even split the bitplanes. So we need to move the pointer on a 256 
byte boundary and a 160 byte one. The smallest number both go into 
(multiple) is 1280. This is 8 pixel lines.  So if we point the 
physic pointer at the top of a picture , do a wait vbl and then 
add 1280 to the value of the pointer then the screen will seem to 
scroll up 8 pixels. 
          Scrolling 8 pixels is a lot but as we will always use 
logic and physic screens (remember my first article??) then if we 
offset these two screen by 4 pixels and swap between them then the 
screen will appear to move by four.  Because you are moving the 
pointer then the default physic and logic screens are not big 
enough so you need to reserve two other banks which are 65k big 
and use them instead. As default back and physic are not being 
used  for their original purpose you might as well not waste them 
and use them as datascreens to hold you picture data in. 
          To scroll a simple picture up we need to copy 2 copies 
of this into a bank. The reason for this is that when you are 
going down you will eventually come off the bottom of the picture, 
but if you have two in the bank then when you get to the start of 
the second one you can jump to the top of the first and it will 
appear to be a smooth unbroken scroll. Please see the basic 
program 'HARDSC_1.BAS' for an example.
          The other effect that this is often used allows you to 
fill up the whole screen with scroll lines etc by only copying one 
on the screen. If you copy a scroll line on the very botton of the 
screen and then move the physic pointer down, the previous one 
will still be on there and you can now put a new one on. If you 
copy one every vbl you use only a tiny percent of processor time 
but the whole screen seems to be moving. Please see 'HARDSC_2.BAS' 
for an example.
          The above explanations might have seemed a little heavy 
or confusing but the basic files are documented so look at them.                 


               Quick Tip/ Bug spot

          The fileselect$ function in stos uses a window so if you 
use it in a program and them compile it you will need to reserve 
at least 10k for windows in the compiler options.


               The Review

          Recently I was sent STOS 3D and I have been waiting a 
long time for it and jumped around singing 'Happy Days are here 
again' when I realised what it was. Was I to be dissapointed? 
Quite frankly I was a little bit. To begin with there is not point 
trying to use it if you have less that a megabyte of ram. This is 
because once installed it reduced the free memory in the editor by 
150k !!!  This means that some of the demos cannot be run on a 
520ST in basic.  If you were to write a game in it on a megabyte 
machine them even once compiled it might not run on a half meg 
one. Besides the momory problem it seems to be a very well done 
and complete package with a good if a little complex 3D designer. 
          The other big problem it suffers from though is speed. 
If you want to rotate a disk in a demo screen or game intro then 
it is fine but I don't believe that it would be possible to write 
an elite style game in it. OK I will admit that expecting this 
from it would be a bit much but surely you would only buy it for 
this reason.  So my round up is that it is a good package and 
would be very good for those in game sequences but if you want to 
write the next robocop 3 you will still have to learn assembler. 
Talking of which have you noticed my assembler article on 
page......


          Any problems or new programs them please send them to me 
at 

          Robert Annett
          15 RIDGEWOOD GARDENS
          HARPENDEN
          HERTS
          AL5 3NN

          All the best!!


          
