10 open #9,"prn"
20 PATH$="\" : dim FILES$(100,2),ST(10) : P$="" : dir$="\"
30 if mode=0 then mode 1
40 key off : click off : print : hide 
50 repeat 
60 LINJE=ycurs : if LINJE>20 then wait 750 : clw : goto 60
70 P$=time$+" "+date$+" "+drive$+":"+PATH$+">"
80 print P$;
90 input "";KOM$
100 POS=len(P$)+len(KOM$)+1
110 KOM$=upper$(KOM$)
120 if right$(KOM$,1)=":" then gosub 400
130 if KOM$="CD" then gosub 500
140 if KOM$="CD.." then gosub 600
150 if KOM$="MD" then gosub 700
160 if KOM$="RD" then gosub 750
170 if KOM$="DIRW" then gosub 850
180 if KOM$="DIR" then gosub 950
190 if KOM$="DEL" then gosub 1150
200 if KOM$="RENAME" then gosub 1350
210 if KOM$="CLS" then clw 
220 if KOM$="TIME" then gosub 1500
230 if KOM$="DATE" then gosub 1600
240 if KOM$="REMOVE" then gosub 1800
250 if KOM$="FILECOPY" then gosub 2000
260 if KOM$="VER" then gosub 2400
270 if KOM$="CHECK" then gosub 2450
280 if KOM$="PDIR" then gosub 2600
290 if KOM$="FORMAT" then gosub 2850
295 if KOM$="VERIFY" then gosub 3500
300 remif KOM$="TYPE" then gosub
310 remif KOM$="PRINT" then gosub
320 remif KOM$="COMMAND" then gosub
330 print : until KOM$="EXIT"
340 clw : print : print : centre "Goodbye!" : wait 200
350 close #9 : default : end 
395 if KOM$="VERIFY" then gosub 3500
400 rem*** CHANGE DRIVE ***
410 on error goto 450
420 drive$=left$(KOM$,1)
430 on error goto 0
440 return 
450 if errn=83 then print KOM$+", unknown drive." : resume 430 else resume 340
500 rem*** CHANGE DIRECTORY ***
510 locate POS,LINJE
520 input "";PAR1$
530 if PAR1$="\" then 580
540 if PAR1$=".." then 600
550 on error goto 575
555 dir$=PAR1$
560 PATH$=PATH$+PAR1$+"\"
565 on error goto 0
570 return 
575 if errn=52 then print "Unknown directory." : resume 565 else resume 340
580 rem*** CHANGE TO ROOT-DIRECTORY ***
590 dir$=PAR1$ : PATH$=PAR1$ : return 
600 rem*** CHANGE TO PREVIOUS DIRECTORY ***
610 previous 
620 Q=len(PATH$)-1 : if Q<1 then return 
630 repeat 
640 Q$=mid$(PATH$,Q,1) : dec Q
650 until Q$="\" : inc Q
660 PATH$=left$(PATH$,Q)
670 return 
700 rem*** MAKE DIRECTORY ***
710 locate POS,LINJE
720 input "";PAR1$
730 mk dir PAR1$
740 return 
750 rem*** REMOVE DIRECTORY ***
760 locate POS,LINJE
770 input "";PAR1$ : if PAR1$="" then 810
780 on error goto 820
790 rm dir PAR1$
800 on error goto 0
810 return 
820 if errn=52 then print "Unknown directory or directory with file(s)." : resume 800 else resume 340
850 rem*** LIST DIRECTORY WIDE ***
860 locate POS,LINJE
870 input "";PAR1$
890 if PAR1$="" then PAR1$="*.*"
900 dir/w PAR1$
910 print dfree/1024.0;" Kb free."
920 return 
950 rem*** LIST DIRECTORY ***
960 locate POS,LINJE
970 input "";PAR1$
980 Q=1 : Z=0
990 if PAR1$="" then PAR1$="*.*"
1000 N$=dir first$(PAR1$,-1)
1010 if N$="" then 1100
1020 print "Name         Bytes    Date       Time     Type"
1030 print "==============================================="
1040 print N$
1050 repeat 
1060 inc Q : N$=dir next$ : inc Z
1070 if Q=23 then print "---More-(Y/n)---" : Q$=upper$(input$(1)) : Q=1 : if Q$="N" then N$=""
1080 print N$ : until N$=""
1090 print Z;" file(s)"
1100 print dfree/1024.0;" Kb free."
1110 print : return 
1150 rem*** DELETE FILE ***
1160 locate POS,LINJE
1170 input "";PAR1$
1180 if PAR1$="" then return 
1190 if PAR1$="?" then show : PAR1$=file select$("*.*") : hide 
1200 print "Delete "+upper$(PAR1$)+" (N/y)"
1210 Q$=upper$(input$(1))
1220 on error goto 1260
1230 if Q$="Y" then kill PAR1$
1240 on error goto 0
1250 return 
1260 if errn=50 then 1280
1270 if errn=48 then print "Unknown filename." : resume 1240 else resume 340
1280 print "Floppy disk is writeprotected."
1290 resume 1240
1300 rem*** RENAME FILE ***
1310 locate POS,LINJE
1320 input "";PAR1$
1330 if PAR1$="" then return 
1340 POS=POS+len(PAR1$)+1
1350 if PAR1$="?" then show : PAR1$=file select$("*.*") : hide 
1360 locate POS,LINJE
1370 input "";PAR2$
1380 if PAR2$="" then 1200
1390 on error goto 1430
1400 rename PAR1$ to PAR2$
1410 on error goto 0
1420 return 
1430 if errn=50 then 1450
1440 if errn=48 then print "Unknown filename." : resume 1410 else resume 340
1450 print "Floppy disk is writeprotected."
1460 resume 1410
1500 rem*** TIME ***
1510 print "Current time: ";time$
1520 input "New time: ";PAR1$
1530 if PAR1$="" then 1570
1540 on error goto 1580
1550 time$=PAR1$
1560 on error goto 0
1570 return 
1580 if errn=54 then print "Illegal time. Reset time." : resume 1520 else resume 340
1600 rem*** DATE ***
1610 if len(DAT$)>0 then print "Date already set. Can't reset." : return 
1620 print "My date: ";date$
1630 input "Correct date: ";DAT$
1640 if DAT$="" then 1700
1650 on error goto 1690
1660 date$=DAT$
1670 on error goto 0
1680 return 
1690 if errn=53 then print "Illegal date. Reset date." : resume 1630 else resume 340
1700 print "Thank you. My date is correct."
1710 DAT$=date$
1720 print "Now you can't reset date."
1730 print "Are you sure I've got the correct date?"
1740 print "(y/n)" : Q$=upper$(input$(1))
1750 if Q$="Y" then return else if Q$="N" then print "I'm sorry." : goto 1620 else goto 1740
1800 rem*** INTERACTIVE DELETING ***
1810 N$=dir first$("*.*",%100111) : X=0
1820 if N$="" then print "Empty. Can't delete." : return 
1830 repeat 
1840 FILES$(X,0)=left$(N$,12)
1850 FILES$(X,1)=mid$(N$,13,9)
1860 FILES$(X,2)=mid$(N$,42,4)
1870 if val(FILES$(X,2))=2 then FILES$(X,2)="Hidden file" else FILES$(X,2)="file"
1880 inc X : N$=dir next$
1890 until N$=""
1900 for Y=0 to X-1
1910 print "Delete "+FILES$(Y,2)+": "+FILES$(Y,0)+" (N/y)"
1920 X$=upper$(input$(1))
1930 if X$<>"Y" then 1950
1940 kill FILES$(Y,0)
1950 FILES$(Y,0)="" : FILES$(Y,1)=""
1960 FILES$(Y,2)="" : next Y
1970 clw : return 
2000 rem*** FILECOPY ***
2005 DESTPATH$="" : FROMDRV$="" : DESTDRV$="" : BNK=1
2010 locate POS,LINJE
2020 input "";PAR1$
2030 if PAR1$="" then print "Can't copy." : return 
2040 POS=POS+len(PAR1$)+1
2050 locate POS,LINJE
2060 input "";PAR2$
2070 if PAR2$="" then print "Can't copy to itself." : return 
2080 if mid$(PAR2$,2,1)=":" then DESTDRV$=left$(PAR2$,2)
2090 DESTPATH$=mid$(PAR2$,3,len(PAR2$)-2)
2100 on error goto 2140 : FROMDRV$=drive$
2110 drive$=DESTDRV$
2120 on error goto 0
2130 drive$=FROMDRV$ : goto 2160
2140 if errn=83 then print "Can't copy. Unknown drive." : resume 2150 else resume 340
2150 return 
2160 N$=dir first$(PAR1$,%100101) : X=0
2170 if N$="" then print "Can't copy. File not found." : return 
2180 repeat 
2190 FILES$(X,0)=left$(N$,12)
2200 FILES$(X,1)=mid$(N$,13,9)
2210 FILES$(X,2)=mid$(N$,42,4)
2220 inc X : N$=dir next$
2230 until N$="" : dec X : Z=X
2240 BNK=1 : repeat 
2250 ST(BNK)=val(FILES$(X,1))
2260 if ST(BNK)>free then 2300
2270 reserve as work BNK,ST(BNK)
2275 print "Loading: "+FILES$(X,0)+" "+FILES$(X,1)+" bytes. "
2280 bload FILES$(X,0),BNK
2290 inc BNK : dec X
2300 until BNK=10 or X<=1 or ST(BNK)>free : Y=X
2310 if mid$(PAR2$,2,1)=":" then print DESTDRV$+" PLEASE" : wait key 
2320 dec BNK : inc X
2330 repeat 
2335 print "Saving: "+FILES$(X,0)+" "+FILES$(X,1)+" bytes."
2337 on error goto 60000
2340 bsave PAR2$+FILES$(X,0),start(BNK) to start(BNK)+ST(BNK) : erase BNK
2345 on error goto 0
2350 inc X : dec BNK
2360 until BNK<1
2370 if mid$(PAR2$,2,1)=":" then print FROMDRV$+": PLEASE" : wait key 
2380 if Y>-1 then X=Y : Z=X : inc BNK : goto 2240
2390 print "Copy completed." : return 
2400 rem*** SHOW VERSION ***
2410 print : print : print "KTKDOS VERSION 3.43"
2420 print "(c) Tore.L.Tangen 1991"
2430 print : return 
2450 rem*** CHECK MEMORY AND DISK DRIVES ***
2460 gosub 2400
2470 print dfree;" bytes free on current drive."
2480 print dfree/1024.0;" Kb free on current drive."
2490 print free;" bytes free memory."
2500 print free/1024.0;" Kb free memory."
2510 print : print "Address of background screen: ";back;" hex: ";hex$(back,6)
2520 print "Address of logic screen: ";logic;" hex: ";hex$(logic,6)
2530 print "Address of physic screen: ";physic;" hex: ";hex$(physic,6)
2540 print : print "Connected floppy disk drives: "; : DRV=val(bin$(drvmap,2)) : if DRV=3 then print "A: and B:" else if DRV=1 then print "Only A:" else if DRV=2 then print "Only B: Something's wrong." else print "Disk error."
2550 print "Connected harddisk drives: "; : DRV2=val(left$(bin$(drvmap,5),4))
2560 if DRV2=7 then print "C:, D: and E:" else if DRV2=6 then print "D: and E:" else if DRV2=5 then print "C: and E:" else if DRV2=4 then print "Only E:" else if DRV2=3 then print "C: and D:" else if DRV2=2 then print "Only D:" else if DRV2=1 then print "Only C:" else if DRV2=0 then print "None" else print "Disk error."
2570 print : print date$;" ";time$
2580 print : return 
2600 rem*** print directory ***
2610 N$=dir first$("*.*",%111111) : X=0
2620 if N$="" then print "Empty. Can't print directory." : return 
2630 repeat 
2640 FILES$(X,0)=left$(N$,12)
2650 FILES$(X,1)=mid$(N$,13,9)
2660 FILES$(X,2)=mid$(N$,42,4)
2670 T=val(FILES$(X,2))
2680 if T=16 then FILES$(X,2)="Directory" else if T=2 then FILES$(X,2)="Hidden file" else FILES$(X,2)="File"
2690 inc X : N$=dir next$
2700 until N$=""
2710 print #9,"Name         Bytes    Type"
2720 print "Printing ";X;" file(s)"
2730 for T=0 to X-1
2740 PRN$=FILES$(T,0)+space$(abs(len(FILES$(T,0))-13))+FILES$(T,1)+space$(abs(len(FILES$(T,1))-9))+FILES$(T,2)
2750 print #9,PRN$
2760 next T
2770 print #9,str$(X)+" file(s)"
2780 Q=dfree/1024
2790 print #9,str$(Q)+"Kb free"
2800 print #9,chr$(12);
2810 print #9,chr$(7);
2820 return 
2850 rem*** format ***
2860 locate POS,LINJE
2870 input "";PAR1$
2880 if PAR1$="" then return 
2890 remifpar1$="free"then
2900 print "Please insert floppy disk in drive A:" : SIDES=2
2910 if PAR1$="350" then gosub 3170
2920 if PAR1$="355" then gosub 3180
2930 if PAR1$="360" then gosub 3190
2940 if PAR1$="390" then gosub 3200
2950 if PAR1$="395" then gosub 3210
2960 if PAR1$="400" then gosub 3220
2970 if PAR1$="700" then gosub 3230
2980 if PAR1$="710" then gosub 3240
2990 if PAR1$="720" then gosub 3250
3000 if PAR1$="730" then gosub 3260
3010 if PAR1$="780" then gosub 3270
3020 if PAR1$="790" then gosub 3280
3030 if PAR1$="800" then gosub 3290
3040 if PAR1$="810" then gosub 3300
3050 if SIDES=2 then print "Unknown size." : return 
3060 print "FORMATING ";TRACK;" TRACKS, ";SEC;" SECTORS."
3070 print "Press any key to resume work."
3080 wait key : reserve as work 11,8000
3090 dreg(0)=SIDES : dreg(1)=TRACK
3100 dreg(2)=SEC : dreg(3)=0
3110 areg(0)=start(11) : call 10
3120 if dreg(0)=0 then bell : print #9,chr$(7); : print "Disk formated."
3130 if dreg(0)<>0 then boom : print "DISK ERROR!"
3140 erase 11
3150 return 
3160 rem*** formating data ***
3170 SIDES=0 : TRACK=78 : SEC=9 : return 
3180 SIDES=0 : TRACK=79 : SEC=9 : return 
3190 SIDES=0 : TRACK=80 : SEC=9 : return 
3200 SIDES=0 : TRACK=78 : SEC=10 : return 
3210 SIDES=0 : TRACK=79 : SEC=10 : return 
3220 SIDES=0 : TRACK=80 : SEC=10 : return 
3230 SIDES=1 : TRACK=78 : SEC=9 : return 
3240 SIDES=1 : TRACK=79 : SEC=9 : return 
3250 SIDES=1 : TRACK=80 : SEC=9 : return 
3260 SIDES=1 : TRACK=81 : SEC=9 : return 
3270 SIDES=1 : TRACK=78 : SEC=10 : return 
3280 SIDES=1 : TRACK=79 : SEC=10 : return 
3290 SIDES=1 : TRACK=80 : SEC=10 : return 
3300 SIDES=1 : TRACK=81 : SEC=10 : return 
3500 rem >>>> disc verifier
3510 rem >>>> written in STOS with various GEMDOS calls
3520 rem >>>> run this as an accessory
3530 rem >>>> turn the break key off - could be nasty otherwise
3540 break off 
3550 rem >>>> memory bank 14 saved with original program
3560 rem >>> hide the mouse - we don't need it
3570 rem >>>> ODRI remembers the current drive to restore when exitting
3580 BUFFER=start(14) : hide : ODRI=drive
3590 rem >>>> only works in medium or high res
3600 if mode=0 then mode 1
3610 rem >>>> open a window to work in
3620 windopen 10,15,5,50,15,12 : click off 
3630 centre "DISC VERIFICATION UTILITY"
3640 print : centre chr$(189)+"Mike Dixon-Kennedy for Atari ST User"
3650 locate 0,3 : centre "Current Drive: "+chr$(65+drive)
3660 locate 0,5 : centre "1. Select new drive"
3670 locate 0,7 : centre "2. Verify disc     "
3680 locate 0,9 : centre "3. Quit verifier   "
3690 locate 0,11 : centre "Please select your option" : clear key 
3700 rem >>>> select the option required
3710 I=asc(inkey$) : if I=0 then 3710
3720 if I<49 or I>51 then 3710
3730 on I-48 goto 3750,3820,4070
3740 rem >>>> select the drive to work on
3750 locate 0,5 : print string$(" ",336); : locate 0,6 : centre "Press a letter (A-Z)" : print : centre "to select a new drive" : locate 23,8 : print "?"; : clear key 
3760 repeat : I$=upper$(inkey$) : until I$<>"" : print I$;
3770 D=drvmap : I=asc(I$) : if I<65 or I>90 then boom : wait 15 : goto 3800
3780 I=I-65 : B=btst(I,D) : if B=0 then boom : wait 15 : goto 3800
3790 drive=I : bell : wait 15
3800 locate 0,5 : print string$(" ",336); : goto 3650
3810 rem >>>> this is the verify part
3820 locate 0,5 : print string$(" ",336); : locate 0,5 : centre "Verifying disc ... please wait" : curs off 
3830 locate 0,7 : centre "Reading boot sector ... "
3840 rem >>>> read track 0 sector 1 - the boot sector
3850 trap 14,8, .l BUFFER, .l 0, .w drive, .w 1, .w 0, .w 0, .w 1
3860 rem >>>> check for an error and act if one has occurred
3870 ERR=dreg(0) : if ERR<>0 then 4050
3880 rem >>>> number of sides, sectors per track, tracks on disc
3890 SIDES=peek(BUFFER+26) : SECTS=peek(BUFFER+24) : TRACKS=peek(BUFFER+19)+peek(BUFFER+20)*256 : TRACKS=(TRACKS/SIDES)/SECTS : locate 0,7 : print string$(" ",48); : locate 18,7 : print "Track :" : locate 18,8 : print "Side  :" : locate 18,9 : print "Result:" : ERR1=0
3900 rem >>>> now veryify each track on each side
3910 for N=0 to TRACKS-1 : for O=0 to SIDES-1
3920 locate 26,7 : print N : locate 26,8 : print O
3930 rem >>>> verify a track at a time
3940 trap 14,19, .l BUFFER, .l 0, .w drive, .w 1, .w N, .w O, .w SECTS
3950 rem >>>> check for a bad track and report status of each track
3960 ERR=dreg(0) : locate 26,9 : if ERR=0 then print "O.k. "; else print "Error";
3970 rem >>>> if an error occurred increment counter
3980 if ERR<>0 then inc ERR1
3990 next O : next N
4000 rem >>>> finished the verify
4010 locate 0,5 : print string$(" ",240); : locate 0,5
4020 if ERR1=0 then centre "This disc seems fine!" else centre "This disc has some bad tracks"
4030 locate 0,8 : centre "Bad tracks found:"+str$(ERR1) : locate 0,11 : centre "Please press a key" : clear key : wait key : locate 0,5 : print string$(" ",240) : curs on : goto 3660
4040 rem >>>> disc error message
4050 locate 0,7 : print string$(" ",240); : locate 0,7 : inverse on : centre " DISC ERROR " : inverse off : boom : locate 0,9 : centre "Verify aborted ... press any key" : clear key : wait key : locate 0,5 : print string$(" ",240); : goto 3660
4060 rem >>>> bye-bye - kill window, restore mouse, restore old drive
4070 windel 10 : show : drive=ODRI : return 
60000 if errn=13 then print "Out of memory. Can't copy." : resume 60010 else resume 340
60010 on error goto 0 : return 
