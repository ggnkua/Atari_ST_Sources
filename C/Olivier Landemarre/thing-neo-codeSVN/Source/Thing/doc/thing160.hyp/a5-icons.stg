## ------------------------------------------------------------------------
## Icons
## ------------------------------------------------------------------------

@node Icons
@prev Icons
@next Icons
@xref thingicn.hyp "Thing Icon Manager"
@xref %DateiformateIC "Format of ICONS.INF"
@autorefoff
Icons                                                                 Thing
@line 1 75 0 0 7
@autorefon

Like in the later Atari OS, Thing takes its icon data from a resource file.
Starting with Thing 1.60, icons are handled by the AES. 

Thing will load the icon set supported by the AES and suited to the video 
mode selected. 

@{B}The ICONS.RSC file@{b}
The Thing's icons are stored in the ICONS.RSC file which contains two 
object trees:

- Tree 1: 'Normal' icons
- Tree 2: 'Mini-icons'

The ICONS.RSC file can be loaded and edited in any suitable RSC file editor
(e.g. Interface, ORCS, ResourceMaster etc.) which means you can edit and 
create your own icons.

The Original icons in Thing (up to version 1.50) were created with the 
Interface editor while the new icons available in Thing 1.60 were created 
with the ResourceMaster RSC editor.

  @{U}'Normal' icons@{u}
  Each icon in the 'Normal icon' object tree can be of any size, depending
  on what the AES can handle and the resource-editor capabilities, from 
  16x2 pixels upwards.

  In the ST medium resolution (640x200), 32x16 icons look much nicer.

  @{U}'Mini-icons'@{u}
  The 'mini-icons', in the second tree of the resource file, have a fixed 
  width of 16 pixels and must be between 1 and 16 pixels high. @{0I}All@{0} of 
  these icons must be the same size -- e.g. all 16x16, all 16x10 etc...

  @{U}Text labels@{u}
  Each icon must include a @{I}unique@{i} text label (this refers to the text 
  rectangle below the icon, and not to some kind of 'label' or 'name' that 
  may be assigned to it by the resource editor). The maximum length is 12 
  characters -- though position and dimensions of the text rectangle are 
  immaterial. Space characters are allowed and case sensitivity is observed.
  Thing uses the labels to find the icons in the resource file, so it is 
  possible to change the order of the icons to suit one's requirements.

@box 1 75 5

@image icwarn.img 2
      The potential hazards of editing the ICONS.RSC file are considerable!
      For working with colour icons the RSC file editor Interface or RSM
      are recommended. Always work on a back up copy!


The following Icons must always be available. These icons should not be 
edited and should not be used for user defined files, folders or programs:

  TRASH           Trashcan
  CLIPBOARD ( @{"*" LINK "_CLIPBRD"}) @{"GEM clipboard" LINK "%DesktopOCLP"}
  FILESYS         Drives
  FILE            Files
  APPL            Programs/applications
  FOLDER          Folders
  PARENTDIR ( @{"*" LINK "_PARENT"}) '..' Object in next highest (parent) directory
  PRINTER         Printer
  DEVICE          Device
  GROUP           Object group

All other icons, available for files, programs, folders and drives, will 
be used only if the file @{"ICONS.INF" LINK "%DateiformateIC"}, is present. This file assigns 
icons in the resource file to file and folder objects. It is in ASCII 
format and may be edited in any ASCII text editor (e.g. Everest) or, more 
easily, using the @{"Thing Icon Manager" LINK "THINGICN.HYP"}.


@{U}The connection between 'normal' and 'mini-icons'@{u}
On start Thing searches the second object tree examining the text label 
for each icon in turn to find a match for each 'normal' icon in the first 
object tree. If no matching icon is found, the standard icons for files 
('FILE'), programs ('APPL') and folder/s ('FOLDER') are used instead. If 
the standard icons are missing as well, or if only one object tree exists 
in @{"ICONS.INF" LINK "%DateiformateIC"}, then empty placeholders will be displayed.


@limage icons.img 20
This example shows three matching pairs of 'normal' and 'mini-icons' taken 
from the two object trees. It is crucial the 'mini-icon' text labels are 
identical to the corresponding 'normal' icons but they do not have to be 
in the same order within their respective object trees.


@{B}What is new in Thing 1.60@{b}
@autorefoff
Starting with Thing 1.60, four icon sets are available: 'BIG', 'SMALL', 
'B&W' and 'COLORTOS'. According to the screen resolution and the operating
system in use, at start Thing will load the right icon set for that 
environment. The BIG and SMALL sets are for high end platforms running
a Multitasking operating system in HC/TC screen modes, while the B&W
and THE COLORTOS sets are for legacy platforms running either TOS or 
EmuTOS in mono/16 colors screen modes.

All sets contain 'Normal' icons and "mini-icons" in separate TREES same 
as in older Thing versions. 

The default BIG set contains a mix of 64 pts 'normal' icons (for devices)
and 48 pts icons (for programs, folders and files). In  the SMALL set all
icons have a fixed size of a 48 pts. All 'mini-icons' have a 16 pts size.

All 'normal' and 'mini-icons' icons are in 2, 16 and 256 colours. 

The B&W and the COLORTOS sets are the original monocrome and color sets 
from the Thing 1.27 archive.

Each set has its own ICONS.INF file with most icons already assigned.
The default ICONS.INF are compatible in pair: BIG with SMALL and B&W 
with COLORTOS.

The icon files are now located:

BIG SET:      THING/RSRC/ICONS/BIG/ICONS.RSC and ICONS.INF
SMALL SET:    THING/RSRC/ICONS/SMALL/ICONS.RSC and ICONS.INF                                 ICONS.INF
B&W SET:      THING/RSRC/ICONS/B&W/ICONS.RSC and ICONS.INF
COLORTOS SET: THING/RSRC/ICONS/COLORTOS/ICONS.RSC and ICONS.INF
                                                                     
@autorefon

@endnode
