## ------------------------------------------------------------------------
## FAQ
## ------------------------------------------------------------------------

@node FAQ "Thing documentation - Frequently asked questions (FAQ)"
@prev FAQ
@include header.stg

@line 2 2 0
@line 4 0 1
@line 2 2 1
    Frequently asked questions (FAQ)
     ˘ @{"Which programs can I use to edit ICONS.RSC?" LINK "%F01"}
     ˘ @{"Why can't I format floppies using MagiC!Mac?" LINK "%F02"} 
     ˘ @{"Where has my existing desktop configuration gone?" LINK "%F0"}
     ˘ @{"Why doesn't pressing [Esc] re-read the current drive?" LINK "%F1"}
     ˘ @{"Can I access the parent directory via the keyboard?" LINK "%F2"}
     ˘ @{"Can I access a drive via the keyboard?" LINK "%F3"}
     ˘ @{"Does Single mode work under MagiC?" LINK "%F5"}
     ˘ @{"Why is the 'Change resolution' option greyed out?" LINK "%F6"}
     ˘ @{"Are there problems with pre TOS 1.04 versions?" LINK "%F7"}
     ˘ @{"Why has the Desktop disappeared?" LINK "%F8"}
     ˘ @{"The AV Protocol features don't seem to be working?" LINK "%F9"}
     ˘ @{"Can I use Mupfel scripts in Thing?" LINK "%F10"}
     ˘ @{"I get problems accessing drive U:?" LINK "%F13"}
     ˘ @{"How are user-defined drive icons installed?" LINK "%F14"}
     ˘ @{"Why are not all Thing dialogs non-modal?" LINK "%F15"}
     ˘ @{"What are environmental variables?" LINK "%F16"}
     ˘ @{"Why does Thing need so much memory?" LINK "%F17"}
     ˘ @{"Why doesn't the Console window work properly under MiNT?" LINK "%F18"}
     ˘ @{"Why isn't ST-Guide using the Thing font selector?" LINK "%F20"}
     ˘ @{"Can I use the MagiC MGFORMAT.PRG with Thing?" LINK "%F21"}
     ˘ @{"Can I set MagiC memory limits for programs?" LINK "%F22"}
     ˘ @{"Problems with MiNT and directories" LINK "%F23"}
     ˘ @{"Help! I can't start programs any more!" LINK "%F24"}
     ˘ @{"Some files are not passed to the viewer!" LINK "%F25"}
     ˘ @{"How can I assign a text colour to folders etc. generally?" LINK "%F26"}	 
	 
@endnode

## --------------------------------------------------------------------

@toc FAQ

@node "%F01" "FAQ - Which programs can I use to edit ICONS.RSC?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Which programs can I use to edit ICONS.RSC? My resource editor crashes 
   on attempting to load ICONS.RSC or doesn't display all the @{"icons" LINK "Icons"}!

A: The icons were created using the commercial Interface v2.3. As these 
   are colour icons, which were only introduced by Atari when the Falcon 
   appeared, many older programs cannot handle them.

   @{U}Zoom!@{u}

   Zoom! is a special commercial icon editor program that can also create 
   and edit colour icons. It is, we understand, the icon editor portion of 
   Interface that is available separately in some countries.

   @{U}IconCons@{u}

   IconCons is the icon editor bundled with the Ease replacement desktop 
   but isn't ideal for editing ICONS.RSC because it does not support 
   animated icons or icons larger than 32x32 pixels.

   You can nevertheless use IconCons so long as you bear in mind that 
   'CLIPBOARD' and 'PARENTDIR' should be renamed to '@{"_CLIPBRD" LINK "_CLIPBRD"}' and @{"_PARENT" LINK "_PARENT"}'
   because IconCons doesn't support text labels longer than eight 
   characters. Although the version bundled with Ease v5 permits inputting 
   more than 8 characters, only the first eight will be loaded so that one 
   would have to correct the label each time.
 
   Another problem is that all versions of IconCons ignore and don't save 
   the second mini-icon object tree!

   @{U}ORCS@{u}

   ORCS is a freeware editor, comparable to Interface to a large extent, that 
   supports 256 colours icons.
   
   @{U}ResourceMaster@{u}

   This program too is freeware and a superior Resource Construction Set 
   that offers all modern features and also supports colour icons.
   
   The icons editing features are likely the most advanced available
   on the TOS platform. New icons available in Thing 1.60 were edited
   in RSM.

   It can be found in the Internet as well in ftp servers.

Q: But that's a pity! Why isn't Thing accompanied by an icon editor? I 
   would like to transfer my Gemini icons into ICONS.RSC and I also have 
   some nice Windows and Mac icons that would go well in Thing...

A: You aren't serious? Or?! At the price charged you really can't expect 
   everything... sorry! Even Gemini is not accompanied by an editor ;-)
   
@endnode

## --------------------------------------------------------------------

@node "%F02" "FAQ - Why can't I format floppies using MagiC!Mac?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Why won't this new version of Thing read any of my INF files? I'm only 
   getting the default desktop...

A: Since version 0.5 Thing supports the HOME environmental variable 
   (to keep MiNT users happy). Ex Gemini users in particular should make 
   sure their HOME environmental variable is pointing to the Thing start 
   directory (and not to the Gemini directory).
   
@endnode

## --------------------------------------------------------------------

@node "%F0" "FAQ - Where has my existing desktop configuration gone?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Why won't this new version of Thing read any of my INF files? I'm only 
   getting the default desktop...

A: Since version 0.5 Thing supports the HOME environmental variable 
   (to keep MiNT users happy). Ex Gemini users in particular should make 
   sure their HOME environmental variable is pointing to the Thing start 
   directory (and not to the Gemini directory).
 
@endnode

## --------------------------------------------------------------------

@node "%F1" "FAQ - Why doesn't pressing [Esc] re-read the current drive?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Although I eagerly press  Esc  after changing a floppy disk or 
   cartridge it doesn't recognise the new disk and displays the contents 
   of the old disk. Why is that?

A: Press  Shift  +  Esc  instead. This forces a media change. Some floppy 
   drives have problems recognising a media change  -- that is not Thing's 
   fault!

@endnode

## --------------------------------------------------------------------

@node "%F2" "FAQ - Can I access the parent directory via the keyboard?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Can I access the parent directory using the keyboard?

A: Press  Undo ,  Backspace  (if no characters have been entered in the 
   @{"auto-locator" LINK "%EinfÅhrungAL"}) or type '..' then press  Return.
   
@endnode

## --------------------------------------------------------------------

@node "%F3" "FAQ - Can I access a drive via the keyboard?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Can I access a drive via the keyboard?

A: Use  Alternate  +  A - Z  which opens drives A: to Z: respectively.
   To use the same directory window use  Shift  +  Alternate  +  A - Z  .

@endnode


## --------------------------------------------------------------------

@node "%F5" "FAQ - Does Single mode work under MagiC?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: How come applications installed for Single mode will not run?

A: Thing must be installed as a Shell, i.e. you must add an entry in 
   MAGX.INF (immediately prior to the '#_CTR' entry!) which MagiC can look 
   for before picking up 'C:\THING\'.
   @{I}Example entry:@{i} '#_SHL C:\THING\THING.APP'
   Remember to edit the path to match your system configuration.

Q: I have Thing installed to launch using the  Alternate  key as
   application 0 in MagXDesk but don't seem able to use Single mode?

A: The problem: The 'legal' way to run in Single mode under MagiC is for 
   the calling program to terminate itself on running the application in 
   Single mode; hence after exiting the Single mode program the original 
   shell -- i.e. MagXDesk -- is the active desktop. That is why Thing uses 
   Single mode only if it was itself launched as a system shell -- and not 
   just as application 0.
   
@endnode

## --------------------------------------------------------------------

@node "%F6" "FAQ - Why is the 'Change resolution' option greyed out?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Why is the 'Change resolution' option always greyed out under 
   Single-TOS? The built in Falcon desktop can change resolutions...

A: Under the MagiC operating system functions to perform a 'clean' 
   resolution change are provided, which don't exist in Single-TOS!
   There simply isn't a legal way to change resolution under Single-TOS. 
   Even if I delved deep into the system and used some undocumented 
   'illegal' calls the chances of this working with graphics cards, 
   OverScan etc. are small.

   @{I}Tip:@{i} There are utilities such as SelectDevice which can perform a
         resolution change under Single-TOS. These can then also be 
         entered as RSMASTER. With the help of RSMASTER it also works
         with N.AES, by the way!
		 
@endnode

## --------------------------------------------------------------------

@node "%F7" "FAQ - Are there problems with pre TOS 1.04 versions?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Are there problems with pre TOS 1.04 versions??

A: Pre TOS 1.04 versions are missing some crucial functions needed to 
   cleanly start GEM applications and it became too stressful to support 
   outdated TOS versions. So please upgrade to at least TOS 1.04 (even 
   better 2.06 or perhaps MagiC) -- you won't regret it!
   
@endnode

## --------------------------------------------------------------------

@node "%F8" "FAQ - Why has the Desktop disappeared?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: I've just changed to a resolution I haven't used before and all my
   desktop icons have gone AWOL! Why?

A: Thing saves a resolution and colour-depth dependent info file which 
   stores the locations for the desktop icons.
   For example at 640x400 mono (1 bit-plane) resolution Thing looks for 
   the file 06400400.I01. If you change to 1280x960 resolution in 256 
   colours (8 bit-planes) Thing looks for a file 12800960.I08.
 
   If one now starts Thing in a resolution or colour-depth that is lower 
   than any for which these info files exist then a default desktop will 
   be constructed, as no resolution-independent file was found. In the 
   reverse case (the new resolution is higher than all others) Thing will 
   automatically search for the next lower suitable file and load this.
 
   The simplest solution is to copy an existing info file and rename it
   to match your current resolution, then use the 'Load Configuration...' 
   option from the 'Extra' menu to reload the desktop info files.
 
@endnode

## --------------------------------------------------------------------

@node "%F9" "FAQ - The AV Protocol features don't seem to be working?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Although the programs I'm using are meant to support the AV Protocol 
   (ParaFin, TreeView, PacShell etc) they are obviously not recognised 
   by Thing. Neither the global window cycling nor the Drag&Drop of 
   files/folders functions.

A: There could be several possible reasons:

     ˘  Under multitasking (MagiC, MultiTOS) the environmental variable 
        AVSERVER should be installed and set correctly. For more details 
        refer to the AV Protocol pages.

     ˘  Some programs (e.g. old versions of ParaFin) unfortunately ignore 
        AVSERVER and only accept Gemini as an AV-server. If the 
        environmental variable has been set correctly and the programs 
        still do not work correctly, please contact the respective author 
        and ask for support for the AVSERVER environmental variable.

        Thing has been tested with various programs that support the AV 
        Protocol cleanly (under Single-TOS even without AVSERVER). The 
        following programs should work:

        PacShell:  From v2.59 on
        ParaFin:   From v1.33 of 12.03.1995 on
        TreeView:  From v2.4 on (only as a desk accessory!)
        @{"ST-Guide" LINK "ST-GUIDE.HYP"}:  Dated 12.11.1994 or later

@endnode

## --------------------------------------------------------------------

@node "%F10" "FAQ - Can I use Mupfel scripts in Thing?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: I already use Gemini and have some Mupfel scripts I would like to use 
   with Thing. Can I do this?

A: Yes -- for this see  @{"Installing a shell" LINK "Shells"}   
   
@endnode

## --------------------------------------------------------------------

@node "%F13" "FAQ - I get problems accessing drive U:"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: When I read drive U:, drives A: and B: are accessed as well. What's 
   causing this?

A: In contrast with the Atari desktop and older versions of MagXDesk, 
   drive U: is now accessed using the MiNT functions Dxreaddir() etc.
   When first accessing U:, GEMDOS (@{I}not@{i} Thing!) must refer to drives A: 
   and B:, which causes the drives to be accessed.
   
   It's fundamentally a MiNT/MagiC problem which cannot be solved by 
   Thing.
   
@endnode

## --------------------------------------------------------------------

@node "%F14" "FAQ - How are user-defined drive icons installed?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: How can I change those horrible drive @{"icons" LINK "Icons"}?

A: Well I like them! @{"ICONS.INF" LINK "%DateiformateIC"} controls which icons are to be used for 
   which drives and can be edited manually once you understand the 
   structure of the file. Drive icons are indicated with the 4 character 
   IDRV token. @{I}For example:@{i}

   IDRV "Donald" C        -> Displays an icon labelled "Donald" as 
                             drive C:
   IDRV "FILESYSTEM" U,I  -> Displays icons labelled "FILESYSTEM" 
                             for drives U: and I:
   IDRV D,E               -> Displays icons for drives D: and E: with 
                             no icon labels

   It's much easier to use the 'Edit Icons...' option from the 'Extra' 
   menu to call the @{"Thing Icon Manager" LINK "THINGICN.HYP"}, programmed by Holger Weets, 
   which provides a point and click utility (with Drag&Drop support) to 
   set the desired drives and @{"icons" LINK "Icons"}.
   
@endnode

## --------------------------------------------------------------------

@node "%F15" "FAQ - Why are not all Thing dialogs non-modal?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Thing currently features many non-modal dialogs, so why are not @{0I}all@{0} 
   Thing dialogs non-modal?

A: Patience, patience, I can't do everything at once! In the long term 
   I plan to make all Thing dialogs non-modal so they can be left open 
   and run in the background but these things take time...
   
@endnode

## --------------------------------------------------------------------

@node "%F16" "FAQ - What are environmental variables?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: The documentation keeps refering to @{"environmental variables" LINK "%EnvA"} such as 
   'AVSERVER' or 'FONTSELECT'. What on earth are they?

A: They are ASCII format configuration files which allow programs to 
   find each other. MagiC (MagXDesk) and MultiTOS make extensive use of 
   these but they're also useful under Single-TOS. Here's some example 
   setups; remember you must enter @{I}your@{i} paths to make use of these!:
 
   @{U}MagiC (MagXDesk)@{u}

     MagiC uses MAGX.INF, which is normally located in the root directory 
     of the boot disk/partition (usually C:\). Any environmental variables 
     can be added after a '#_ENV' token.
       Important! Any entries must be added @{I}before@{i} the line containing
       the '#_CNF' entry!

     For Thing simply add the following lines:

     #_ENV AVSERVER=THING
     #_ENV FONTSELECT=THING

     After rebooting, all sensible programs that support the AV or the 
     Font Protocol should use Thing as an AV-server or font selector 
     server respectively.

   @{U}MultiTOS@{u}

     In the directory MULTITOS, which is normally located in the root 
     directory of the boot disk/partition (i.e. normally C:\MULTITOS),
     you should find a file called GEM.CNF. For Thing simply add the 
     following lines:
 
     setenv AVSERVER=THING
     setenv FONTSELECT=THING

     After rebooting, programs that support the AV or the Font Protocol 
     should use Thing as an AV-server or font selector server respectively.
 
   @{U}Single-TOS without OS extensions@{u}

     Under Single-TOS it's not quite so easy -- you'll need a separate 
     utility (e.g. Senf, AutoEnv, GemEnv or ENV.CPX plus ENV.PRG etc.) 
     capable of setting the environment during the boot process. Although 
     many newer programs (e.g. @{"ST-Guide" LINK "ST-GUIDE.HYP"}, ParaFin etc.) recognise the 
     absence of a multitasking AES and can work with Thing via the AV 
     Protocol even without 'AVSERVER', it's worth setting up. Use whatever 
     syntax your setting program requires, which might be:
 
             AVSERVER=C:\THING\      } Adapt this to 
             FONTSELECT=C:\THING\    } your own path
 
   @{0U}Single-TOS & MINT@{0}

     If one is working only with MiNT (i.e. without MultiTOS!) one needs 
     to supplement the file MINT.CNF on the boot drive with:

     setenv AVSERVER THING
     setenv FONTSELECT THING 
 
   @{U}Single-TOS & GEMRAM (WINX)@{u}

     To use WINX the utility GEMRAM must be installed for the later TOS 
     versions, which is capable of setting up environmental variables 
     during booting. GEMRAM is normally run from the AUTO folder and reads 
     a file called GEMRAM.ENV to which the following entries should be 
     added:

     AVSERVER=THING
     FONTSELECT=THING

     Without GEMRAM or MiNT one can also use the 'Senf' utility from 
     Thomas Binder (he is also the author of TOS2GEM that is included in 
     the Thing package:-)).
	 
@endnode

## --------------------------------------------------------------------

@node "%F17" "FAQ - Why does Thing need so much memory?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Why does Thing need so much memory?

A: Thing currently requires around 700-750Kb main memory if you're using 
   the standard colour icons supplied. Some users may find this rather 
   high -- after all Thing doesn't include an integrated command shell 
   like Gemini and no|Desk. It's even worse with colour modes with 265 or 
   more colours -- one can soon reach the 1MB limit!

   If memory is an issue look carefully at your icon usage and adjust your 
   ICONS.RSC to suit.
 
   The main factor responsible for high memory usage are the colour icons.
   Depending on the resolution Thing reserves up to 3Kb buffer space per 
   icon, which is needed to provide device-independent bitmaps (simple 
   calculation: 32*32*24/8=3072 bytes for each 32*32 pixel icon at 24 bit 
   per pixel resolution).

   To save memory one can also use the monochrome icons from MONOICON.RSC, 
   which must be renamed to ICONS.RSC, or create your own mono-only 
   ICONS.RSC and use that instead.

   A further reason for the high memory usage is the newly added complete 
   3D-look. This has been urgently requested by the majority of users, so 
   one has to bite the sour apple and accept the 'side-effects'.
 
   And one more reason: A lot of the program coding in Thing is not 
   optimised  -- several routines appear repeatedly in slightly different 
   forms. Although I try to improve this little by little, it can't always 
   be done without a lot of effort. Thus for example there are separate 
   routines for Drag&Drop of desktop, directory and group objects, 
   although they are very similar to each other and in principle could be 
   lumped together. Unfortunately this would require much effort with a 
   high risk for errors, so that I haven't been willing to take this on so 
   far. Incidentally this is also the reason why Thing today still does 
   not offer 'spring folders', which in my arrogance I really wanted to 
   build in immediately after taking charge of the sources from Arno...

@endnode

## --------------------------------------------------------------------

@node "%F18" "FAQ - Why doesn't the Console window work properly under MiNT?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Why doesn't the @{"Console window" LINK "%EinfÅhrungCON"} work correctly under MiNT? -- If I 
   start a TOS shell the cursor doesn't appear and no input appears in 
   the window...

A: This is a known problem that only happens with old versions of TOS2GEM
   and should not happen with the version included in this package.
   Apparently TOS2GEM sometimes isn't sure whether it is waiting for an 
   input, and doesn't output the VT52 buffer. It's easily fixed by using 
   a newer version of TOS2GEM (release 6 or later) or by turning buffering 
   off using the 'None' option in the 'TOS2GEM' page of the 'Configuration' 
   dialog.
   
@endnode

## --------------------------------------------------------------------

@node "%F20" "FAQ - Why isn't ST-Guide using the Thing font selector?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: If I try to use the 'Font' function in @{"ST-Guide" LINK "ST-GUIDE.HYP"} using Thing, I only get
   an error message that no font selector is present! The environmental 
   variable FONTSELECT is installed correctly as FONTSELECT=THING and 
   other programs supporting the Font Protocol work without problems...
 
A: You're probably using an old version of ST-Guide. Check the version 
   date which must be dated 30/04/1995 or later.
   
@endnode

## --------------------------------------------------------------------

@node "%F21" "FAQ - Can I use the MagiC MGFORMAT.PRG with Thing?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Can I use the MagiC MGFORMAT.PRG with Thing? I have installed 
   MGFORMAT.PRG in the 'External programs' area of the 'System' page in 
   the 'Configuration' dialog but two dialogs always appear! Why?

A: You can! MGFORMAT expects a command line parameter which tells it 
   whether to format or copy disks. When MGFORMAT is installed as an 
   application, Thing will also respect the settings if it is called 
   with the 'File' > 'Format Disk...' menu entry.
 
   To use MGFORMAT.PRG to always format disks and avoid the dialogs:
 
   1. Install MGFORMAT.PRG as an application
   2. Enter '-f' as the command line parameter
   3. Install MGFORMAT.PRG using the  Format >  button in the 'External 
      programs' area of the 'System' page in the 'Configuration' dialog.
	  
@endnode

## --------------------------------------------------------------------

@node "%F22" "FAQ - Can I set MagiC memory limits for programs?"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: Can I set MagiC memory limits for programs? MagiC includes a utility 
   (LIMITMEM.TTP) which can set the maximum available memory for a program. 
   Can I use this with Thing as well?

A: Yes. The 'Show info...' option in the 'File' menu includes a 'Program' 
   page which includes a 'MagiC! memory limit:' field where the amount of 
   memory can be entered in Kb. To remove a memory limit either clear the 
   field or enter 0.


Q: Why do executable files grow in size by 8 bytes after setting a memory 
   limit and reduce again after removing a limit?

A: Contrary to popular belief the memory handling flags are @{0I}not@{0} stored 
   in reserved sectors in the program headers but appended to the END 
   of a program file.

   The 8 bytes begin with the text 'MAGX' followed by a 32 bit integer 
   containing the desired upper limit in bytes. In order to delete a 
   memory limit simply remove the extra bytes -- or add them for setting 
   a memory limit when none was present before. If you don't know exactly 
   what you're doing, use the Thing 'Show info...' dialog or other utility 
   because it's very easy to destroy the integrity of executable files!


      From Thing 1.25 onwards one can also enter a memory limit in the 
      options for installed @{"applications" LINK "Applications"}. This works with MultiTOS, N.AES, 
      MagiC from version 4 on and most likely also with Geneva; this has 
      the advantage, among others, that the program file need not be 
      altered.
	  
@endnode

## --------------------------------------------------------------------

@node "%F23" "FAQ - Problems with MiNT and directories"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: If I have registered in MiNT as non-root I cannot access MinixFS 
   directories correctly! Although they are displayed, I can't open any 
   sub-directories in it and file access is refused!

A: Probably you have the directory flags set to: rw-rw-rw-. This means 
   that though directories can be displayed, the files and sub-directories 
   in them cannot be accessed.
   The flags for directories have the following meanings:

     x - access to files inside sub-directories allowed
     r - files inside directories are displayed

   To access files in MinixFS sub-directories without restriction as a 
   non-root the flags have to be set to 'rwxrwxrwx'. That is not 
   recommended, however! Normally one should permit 'rwxr-xr-x' at most, 
   as otherwise the sense of access protection would be lost completely.

   Thing can set the access priviliges for MinixFS directories via the 
   directory 'Show Info' dialog on the 'Attributes' page. Naturally this 
   only works if you are the root or the owner of the affected directory.

@endnode

## --------------------------------------------------------------------

@node "%F24" "FAQ - Help! I can't start programs any more!"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: When I try to start programs they are only displayed in my file viewer 
   instead of being executed. What's happening?

A: Check the 'Is used to Open:' line in the 'Install Application' dialog 
   if your file viewer has either '*' or '*.*' in the list of file-types 
   it should open. This is wrong, as this list is also used for executable 
   programs, so that MiNT, for instance, can start programs with a certain 
   user-ID with the help of an installed tool.
 
   Remove these entries to solve the problem. These global file-types 
   should only be used in the 'Is used to Show:' line.

   On loading INF files Thing tries to try to avoid this problem by 
   filtering out any '*' entries in the 'Is used to Open:' line, 
   automatically moving them to the 'Is used to Show:' line (for older 
   INF files this also applies to '*.*'), so files created with earlier 
   Thing versions can still be loaded. On saving the configuration under 
   the current version these problems will go away.


@endnode

## --------------------------------------------------------------------

@node "%F25" "FAQ - Some files are not passed to the viewer!"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: In the 'Install Application' line for my file viewer I have set '*.*' 
   to Show all files; however with some files (e.g. 'README'), Thing
   insists that no application is installed for it. Surely there's 
   something wrong there?

A: Correct! :) The problem is the entry '*.*' for the file-types that the 
   viewer can show. In the current release Thing evaluates wildcards 
   'correctly', for UNIX compatibility, and not the usual Atari/DOS way 
   where there is no difference between '*.*' and '*'. In Thing '*.*' 
   represents all files that have at least one point in the filename -- 
   typically any 8+3 format filename. But files without an extender fall 
   outside this specification!
 
   Solution: Change the '*.*' entry to '*' and the viewer will also show 
   'README'!

@endnode

## --------------------------------------------------------------------

@node "%F26" "FAQ - How can I assign a text colour to folders etc. generally?"
@next "%F26"
@autorefoff
FAQ                                                                   Thing
@line 1 75 0 0 7
@autorefon

Q: I would like to have all folders in blue, all files in yellow and all 
   executable files in green. How do I do that?

A: Actually it's quite simple: First of all the text colour has to be set 
   to yellow in the 'Appearance...' dialog, which makes everything yellow. 
   Now in @{"ThingIcn" LINK "THINGICN.HYP"}, say, the standard icon for folders "FOLDER" has to be 
   assigned the mask '*' with the colour blue. Do the same for the icon 
   "APPL", though for files and with the colour green. That's it!

   As Thing automatically uses the colour of the standard icon if no 
   particular colour was specified for an assignment, TOS programs too, 
   for instance, will be displayed in green even though these do not have 
   the "APPL" icon.

@endnode

@toc %I
