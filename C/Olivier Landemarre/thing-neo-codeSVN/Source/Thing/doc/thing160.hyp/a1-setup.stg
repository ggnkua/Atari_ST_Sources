
## ------------------------------------------------------------------------
## Installation
## ------------------------------------------------------------------------

@node Setup "Thing Documentation - Setup"
@prev Setup
@xref Introduction
@include header.stg

@line 2 2 0
@line 4 0 1
@line 2 2 1
    Setup
     ù @{"System requirements" link %InstallationSV}
     ù @{"New Install or Updating an old version" link %InstallationET}
     ù @{"Setting up the operating system" link %InstallationS}
@endnode

## ------------------------------------------------------------------------

@node %InstallationSV "System requirements"
@toc Setup
@symbol "System requirements"
@autorefoff
Setup, System requirements                                            Thing
@line 1 75 0 0 7
@autorefon

@autorefoff


@{B}Supported platforms:@{b}
This new version of the Thing desktop, codename 'Thing Neo', is aimed to 
'high end' TOS compatible platforms with a M68020 CPU (or better), 16Mb 
of RAM, a MultiTasking OS, extended video modes (high/true colors) and 
the NVDI OS extension (or the NVDI palette). 

Thing 1.60 was extensively tested and proved stable on several 'high end' 
FreeMiNT platforms such as the Apollo V4SA, the FireBee and the Aranym 
emulator. To ensure compatibility, testing was performed in MyAES, XaAES 
and N.AES environments.

Thing was also tested successfully in a SingleTask environment on the V4SA
(EmuTOS V4SA R134 or newer), the FireBee (FireTOS) and the Hatari emulator 
(set with a M68020 CPU and, to display color icons TOS4 or EmuTOS 1.3.1 or
newer).

NVDI or the NVDI palette are required to display the default 'Thing Neo'
icon sets in the right colours.


@{B}Untested platforms:@{b}
Thing 1.60 should work on other TOS platforms that meet the minimum HW 
requirements either on a MultiTask or a SingleTask OS, such as the Atari 
TT, the Atari Falcon, TOS clones and possibly legacy STs with a CPU and 
a RAM upgrade.


@{B}Untested OS:@{b}
Thing 1.60 was not tested on the MagiC Operating system and old MiNT
setups but, in theory, might be compatible, provided the minimum 
hardware requirements are met.


@{B}Not supported platforms:@{b}
Thing 1.60 won't run on legacy Ataris with a M68000 CPU (such as the Atari 
ST, the STE, the MST and the MSTE). The MiST FPGA is also not supported.

Older versions of the Thing desktop (i.e. 1.09 or 1.27)  are the right 
choice for old Ataris with a M68000 CPU and 2-4 Mb or RAM.


@{B}Online manual:@{b}
To display the online manual of Thing (hypertext documentation), a HYP 
viewer is required, such as ST-Guide or HypView.

ST-Guide is available bundled in several FreeMiNT distributions (V4SA, 
FireBee) or can be downloaded 'stand alone' from most Atari related ftp 
sites or online archives of Atari ST software. 

HypView is available at the freemint.github.io portal as standalone
download or pre-installed in the bootable freemint snapshots  and in 
several FreeMiNT distributions.


@{B}Console Window:@{b}
In MultiTask OSs distributions a Console window tool is usually
available pre-installed.

For each MultiTask OS environment, default consoles are:

  ù FreeMiNT (MyAES or XaAES):  TOSWIN2;
  ù FreeMiNT (N.AES): TOSWIN2 (N.AES2) or TW100 (N.AES 1.x);
  ù Magic OS (Atari, Mac or PC): VT52;
  ù MultiTOS: MINIWIN console.

If you prefer the original console window of Thing, you will have to 
install TOS2GEM from Thomas Binder and remove the 'pre-installed' console.

@autorefon

@endnode

## ------------------------------------------------------------------------

@node %InstallationET "New Install or Updating an old version"
@toc Setup
@autorefoff
Setup, New Install or Updating an old version                         Thing
@line 1 75 0 0 7
@autorefon

@autorefoff


@{U}What is new in Thing distribution archive?@{u}

Starting with Thing 1.60, the file organization of the THING archive  
is changed. The main Thing directory contains all the applications: 
'thing.app', 'thingicn.app' and thingfnd.app and the template.grp used
by the the thingfnd search tool. All RSCs files, the icon sets and the
configuration files were moved in in dedicateds ubfolders. 

This change is motivated by the need to not overcrowd the main directory
with lots of .RSC, .INF and .Icc files and the requirements to handle the
icons sets.

@{U}New Install@{u}
To install Thing, just copy the full Thing directory to the root of your 
boot drive.

For OS configuration see the @{"Setting up the operating system" link %InstallationS} page.


@{U}Distribution archive contents@{u}
The Thing distribution archive contains the following folders/files:

@{B} ù Thing desktop@{b}
   THING\THING.APP ................... (main application) 
   THING\RSRC\THING\THING.RSC, THING0.RSC, THING1.RSC, 
                    THING2.RSC, THING5.RSC (resource files. Note 1)
   THING\RSRC\THGTXT\THGTXT.RSC, THGTXT0.RSC, THGTXT1.RSC,
                     THGTXT2.RSC, THGTXT5.RSC (resource files. Note 1)
   THING\RSRC\ICONS\BIG\ICONS.RSC, ICONS.INF (icons - big set. Note 2)
   THING\RSRC\ICONS\SMALL\ICONS.RSC, ICONS.INF (icons - small set. N.2)
                    B&W\ICONS.RSC, ICONS.INF  (icons - B&W set. Note 2)
                    COLORTOS\ICONS.RSC. ICONS.INF (icons - colortos.N.2)   
   THING\THINGIMG.OVL........... (background images loader)  
   THING\THINGRUN.PRG........... (THING loader - overlay)
   THING\CONFIG\THING.INF....... (General configuration file: See note 3)
   THING\CONFIG\XXXXYYYY.Icc.... (Desktop configuration files: See note 3)
   THING\CONFIG\THING.IDX....... (Thing directory Information: See note 3)
      
   NOTE 1: All the *.RSC files are handled locally. The THINGDIR variable 
           has no longer effect.
   NOTE 2: All the ICONS.RSC and ICONS.INF files are handled locally. The 
           THINGDIR variable has no longer effect.
   NOTE 3: The configuration files are not distributed as the are created
           when the configuration is saved the first time. Their position 
           may vary in relation to the paths set with HOME and THINGDIR 
           environment variables. 
           Be aware that THINGDIR no longer override HOME and is used for
           for config files only if HOME is not available.

@{B} ù Icon Manager@{b}
   THING\THINGICN.APP (Thing Icon Manager app)
   THING\RSRC\THGICN\THGICN.RSC, THGICN0.RSC, THGICN1.RSC,
                     THGICN2.RSC, THGICN5.RSC (Icon Manager RSCs)

@{B} ù Search Tool@{b}
   THING\THINGFND.APP (Thing Search Tool app)
   THING\RSRC\THGFND\THGFND.RSC, THGFND0.RSC, THGFND1.RSC,
                     THGFND2.RSC, THGFND.RSC (Search Tool RSCs)
   THING\TEMPLATE.GRP (Template for search results)


@{B}Online help@{b}
@box 62 6 1
The online help is available on most dialogs by pressing the  Help  button.

To use the online help, a hypertext file viewer, such as ST-Guide or 
HypView is required. In most FreeMiNT distributions, this tool is 
preinstalled and configured. Just copy the following Thing help files 
to the 'guides' folder of your hypertext viewer:

  DOC\THING.HYP, THING.REF
  DOC\THINGICN.HYP, THINGICN.REF

The 'guides' folder, generally named HYP or GUIDES, is usually located 
at the root of your boot drive. In some FreeMiNT distributions the folder 
might reside elseware. Open the viewer configuration file (ST-GUIDE.INF 
or HYPVIEW.INF located in HOME or at the root of the boot drive) and 
verify the 'PATHS' of the online help directory.


@{B}Console window@{b}
In MultiTask OSs a Console window tool is usually available:     
  ù FreeMiNT (MyAES or XaAES): TOSWIN2;
  ù FreeMiNT (N.AES): TOSWIN2 or TW100;
  ù Magic OS (Atari, Mac or PC): VT52;
  ù MultiTOS: MINIWIN.

More informations on the default console for FreeMiNT distributions are
available in the @{"TosWin2 console" link TOSWIN2} page and the @{"TosWin2" link TOSWIN2.HYP} help guide.

To use the console window TOS2GEM from Thomas Binder, copy the following
file to the AUTO folder:

  TOS2GEM\TOS2GEM.PRG

@box 1 75 5

@image ictip.img 2
      You don't need TOS2GEM when you want to use the TOSWIN2 console 
      (with MiNT), TOSWIN2 or TW100 (with N.AES), VT52.PRG (with MagiC) 
      or MINIWIN (with MultiTOS).


@{U}What is new in Thing distribution archive?@{u}

Starting with Thing 1.60, the file organization of the THING archive  
is changed. The main Thing directory contains all the applications: 
'thing.app', 'thingicn.app', thingfnd.app and the template.grp used
by the the thingfnd search tool. 
All RSCs files, the icon sets and the configuration files are now located
in specific subfolders. 

@{B}CONFIG folder:@{b} If no HOME or THINGDIR variables are set, the 'general
configuration' (THING.INF), the 'desktop configuration' (xxxxyyyy.Icc)  
files are handled locally inside the  CONFIG directory.

  ù On Singletask systems CONFIG is always inside the main THING directory
    unless the THINGDIR variable is defined.
  ù On Multitask systems, If no HOME nor THINGDIR exist, the local CONFIG
    directory is used.

@{B}RSRC folder:@{b} All the RSCs are now located inside a RSRC folder. At start,
Thing, ThingFnd and ThingIcn will load a localized RSC according to the
desktop language set in the NVRAM or in the AES. The language configured
in the AES will always override the NVRAM settings. 

If no localized RSCs are available in RSRC subfolders, Thing, ThingIcn 
and Thingfnd will default to English.

Localized RSCs for Thing, Thingicn and Thingfnd are available in English, 
German, French and Italian languages. 


@{B}Thing Search tool:@{b} THINGFND.APP is a simple search tool that output 
his search results to a grp file. A template.grp file in local Thing folder 
is used to set the appearance of the output window.  

When assigned in the @{"Configuration>System" LINK "%mcf2"}, THINGFND will be used as
default search tool when the 'Find...' menu entry is selected.


@{B}Thing Icon Manager:@{b} The icon Manager is used to personalize the assignment
of icons to Devices, Files and Folders. This tool is called from the menu
item 'EXTRA->Edit Icons Assignments...'. As it doesn't edit the pictograms 
of the icons directly, an external RSC Editor (like RSM, Orcs or Interface) 
is required to update 'graphically' the icon sets.

@{B}NOTE:@{b}The Thing Icon Manager now draw icons via the AES. 
             Icon sets are always handled locally. The THINGDIR variable is not
             considered.


@{B}Icons:@{b} Thing loads an icon set according to the AES installed and the
selected  screen resolution. The icon sets are located inside the RSRC 
folder organized  in subfolders,  each folder for a specific OS environment. 
4 separate icons sets are available: BIG, SMALL, B&W AND COLORTOS. 
The BIG and SMALL sets are for AES that support 256 color icons, B&W and 
COLORTOS for TOS4 and EmuTOS.

The Icon sets (ICONS.RSC) are standard RSC files with 2 trees. The first 
tree is for 'normal' icons and the second for 'mini-icons'.  

Icons in the 'Normal' object tree can be of any size, with 2, 4, 16, 256 
colors, depending on what the AES can handle and the resource-editor 
capabilities.

'Mini-icons', located in the second tree, have a fixed width of 16 pixels 
and must be between 1 and 16 pixels high. All the mini-icons must have the 
same size -- e.g. all 16x16, all 16x10 etc...

Each set is handled indipendently and has its own ICONS.INF assignment 
file. The Icon Manager will update only the ICONS.INF of the set in use. 
Thus, it is possible to install completely different icon sets for each
video mode, each set with its own ICONS.INF. 

If the sets are fully compatible (with same name/number of icons), such 
as the default 'Thing Neo' BIG and SMALL sets, is possible to copy the 
ICONS.INF from one set to the other.


@{B}Default Icon Sets of the THING distribution:@{b} 
The Thing distribution comes with 4 icon sets pre-installed: BIG, SMALL 
(Thing Neo Icons sets), B&W and COLORTOS. 

@{B}BIG and SMALL sets@{b} 
The Big and Small are the default sets for high end platforms running Thing 
as a shell in a multitasking environment, tipically FreeMiNT or MagiC. They
are named BIG & SMALL 'Thing Neo' icon sets and they were created for the
new version of Thing.
 
All icons are in 2, 16 and 256 colors with a size of 48 or 64 pts for 
'normal' icons and 16 pts for 'mini-icons'. All icons were drawn with the
NVDI palette and NVDI or the NVDI palette are required. Each set has its
own ICONS.INF handled indipendently. 
       
@{B}ù Big set:@{b} device icons have a size of 64pts, while files and folders have
  a 48pts size. Thing will load it when the vertical screen resolution is 
  greater than 1000 pixels. 
  
@{B}ù Small set:@{b} all icons have a fixed size of 48pts. Thing will load
  when the vertical screen resolution is minor than 1000 pixels. 

The default icon sets 'Big' and 'Small' are 1-1 compatible: they differ 
only by the size of the device icons. The ICONS.INF are handled separately
and changes to the icon assignments will no transferred automaticaly to 
other sets.
  
@{B}B&W and COLORTOS sets@{b}
The B&W (Black and White) and COLORTOS icons are for OS environments that
do not support icons greater than 32 pts or color icons, generally old 
versions of EmuTOS and Atari TOS 4. Both icon sets are from the original 
Thing 1.27 distribution archive. Each set has its own indipendent ICONS.INF
assignment file. 


@{U}Updating Thing 1.60@{u}
Updates to Thing 1.60 will be distributed in two forms. A full archive,
with all files, intended for new installations or updates of pre 1.60 
versions and an incremental archive with only the 'updated' files, aimed
to existing THING 1.60 setups. To update, just replace the old files with
the new ones.

Existing THING.INF files (in AUTO or THINGDIR subfolders) do not need to
be updated. When an icon set is updated, a new ICONS.INF file will be 
provided.

If you have modified the icon assignments, do not update the ICONS.INF, 
as you will loose your customization. First verify in the README file
changes to the 'Thing Neo' icon set, update the ICONS.RSC(s) only, run 
the Icon Manager and apply the new assignments to your customized 
ICONS.INF files. 


@{U}Updating older Thing versions (1.0X and 1.2X)@{u}
To update an old Thing setup, a 'fresh' install is required as all the 
files are new or updated.

The easier way is to rename the old Thing directory (to THING.127, for
example) and copy the new Thing directory to your BOOT drive.

We suggest to backup the old general and desktop configuration files
either in HOME and THINGDIR.


@autorefon

@endnode

## ------------------------------------------------------------------------

@node %InstallationS "Setting up the operating system"
@toc Setup
@symbol "Setting up the operating system"
@autorefoff
Setup, Setting up the operating system                                Thing
@line 1 75 0 0 7
@autorefon

Depending on the operating system, some configuration changes are required:

  @{"FreeMiNT: MyAES, XaAES and N.AES" link %InstallationASM}
  @{"MagiC! (MagX)" link %InstallationAMG}
  @{MultiTOS link %InstallationAMT}
  @{"Single-TOS: EmuTOS and TOS" link %InstallationAST}


You can use Thing to determine, which system you are using.

 1) Start THING.APP
 2) Select 'About Thing...'
@box 19 6 1
 3) Select button  Info

A dialog box appears, showing the current operationg system, screen
resolution etc.:

@limage dlabout2.img 2
@endnode

## ------------------------------------------------------------------------

@node %InstallationASM "Setting up FreeMiNT: MyAES, XaAES and N.AES"
@symbol "Setting up FreeMiNT: MyAES, XaAES and N.AES"
@toc Setup
@xref %InstallationAMG "MagiC (Mag!X)"
@xref %InstallationAMT "MultiTOS"
@xref %InstallationAST "Single-TOS"
@autorefoff
Setup, Setting up FreeMiNT: MyAES, XaAES and N.AES                    Thing
@line 1 75 0 0 7
@autorefon

The FreeMiNT kernel allow the user to install a preferred AES (Application 
Environmental Services). Most popular AESs, available either pre-installed
in FreeMiNT distribution or standalone are:  MyAES, XaAES and N.AES. 
The shell(desktop) is commonly started from the AES.   

We assume a FreeMiNT/AES setup is already installed on the target 
platfor with all the relevant environment variables, such as HOME, 
already configured. 


@{U}MyAES shell configuration@{u}:
The shell (desktop) is usually set in a DESKTOP.CNF configuration 
file located inside the main MyAES directory.

NOTE: MyAES won't run without a shell. 

@autorefoff
Open the C:\GEMSYS\MYAES\DESKTOP.CNF file in a text editor. Edit it
to set at least the shell and the AVSERVER environmental variable.
If Thing is already configured, verify the shell and environment
variable paths.

For example:

# Path for desktop

shell c:\thing\thing.app

#env var for desktop

export THINGDIR=u:\c\thing
export AVSERVER="THING   "
export FONTSELECT="THING   "

The AVSERVER variable specify which program is operating as AV-server. 

The THINGDIR and FONTSELECT variables are optional. 

@{B}THINGDIR@{b} 
The THINGDIR variable indicate the position of the main directory and
it is used by THING to find its configuration files if HOME is not found.
THINGDIR no longer override the HOME variable. 

@{B}FONTSEL@{b} 
When the FONTSELECT variable is set, the Thing font selector will be used
by all applications that support the 'Font Protocol'.

@{B}Set the RSMASTER@{b} 
RSMASTER is used by THING to start the application normally used to change
the screen resolution. When set, the 'screen tool' will be called directly 
from the EXTRA->Change Resolution menu entry. For example:

  export RSMASTER=C:\programs\yoprez\yoprez.prg
@autorefon

Save and reboot to apply all configuration changes. 


@{U}XaAES shell configuration@{u}:
In XaAES, the shell(desktop) is set in the configuration file: XAAES.CNF

Open the XAAES.CNF file and find the section with the 'system shell'
paths (usually at the end of XAAES.CNF). If you find Thing is already
configured as system shell, just verify the setenv paths.
If a different shell is already set, update the config file with THing
details, for instance:   

@autorefoff
setenv THINGDIR   u:\c\thing\
setenv AVSERVER   "THING   "
setenv FONTSELECT "THING   "
shell = c:\thing\thing.app
@autorefon

If no system shell is set in XAAES.CNF, check if a separate config
file is included in XAAES.CNF, for instance:

@autorefoff
include u:/c/mint/desktop.cnf.

Update the shell path and the environmental variable AVSERVER, and 
he optional FONTSELECT and THINGDIR environmental variables.
The THINGDIR variable no longer override HOME. 

@{B}Set the RSMASTER@{b} 
RSMASTER is used by THING to start the application normally used to change
the screen resolution. When set, the 'screen tool' will be called directly 
from the EXTRA->Change Resolution menu entry. For example:

setenv RSMASTER	u:/c/mint/setup/modes.prg

Save and reboot to apply all configuration changes. 


@{U}N.AES shell configuration@{u}:
Like in other AESs, the shell is set in the AES configuration file, 
N_AES.CNF in this case. Parameters that can be set are the same as
the other AESs : the shell (desktop), the AVSERVER and the optional 
FONSELECT and THINGDIR environmental variables. For example: 

# ---------- Thing -----------
export   AVSERVER=THING
export   THINGDIR=C:\THING\
export   FONTSELECT=THING
@autorefon

Set the shell (desktop) path to thing.app:

@autorefoff
# Shell (Desktop):

shell c:\thing\thing.app

@{B}Set the RSMASTER@{b} 
RSMASTER is used by THING to start the application normally used to change
the screen resolution. When set, the 'screen tool' will be called directly 
from the EXTRA->Change Resolution menu entry. For example:

export RSMASTER=C:\N_AES\APPS\N_CHRES.PRG
@autorefon

That's all. Save and reboot to apply all configuration changes. 

@endnode

## ------------------------------------------------------------------------

@node %InstallationAMG "Setting up MagiC"
@symbol "Setting up MagiC"
@toc Setup
@xref %InstallationASM "FreeMiNT: MyAES, XaAES and N.AES"
@xref %InstallationAMT "MultiTOS"
@xref %InstallationAST "Single-TOS"
@autorefoff
Setup, Setting up MagiC                                               Thing
@line 1 75 0 0 7
@autorefon

@autorefoff
MagiC (or MagX) allows to use another desktop instead of MagXDesk. 
To use Thing, add the following entry to MAGX.INF:

  #_SHL C:\THING\THING.APP

Replace 'C:\THING\' with your own folder. When re-booting the system,
Thing will be started automatically.

@box 1 75 5

@image icwarn.img 2
      If you already worked with EASE or Gemini, you have to delete the
      existing '#_SHL' line (e.g. '#_SHL C:\EASE\EASE.PRG')! There must
      only be one line with '#_SHL'!


To use Thing as an AV server and font selector you have to set the
environmental variables AVSERVER and FONTSELECT. To do this, add the
following entries to the file MAGX.INF:

  #_ENV AVSERVER=THING
  #_ENV FONTSELECT=THING

In addition, you can specifiy the file name of ST-Guide by setting the
environmental variable STGUIDE. This makes it possible to use ST-Guide
as an external program and it has to be installed as an accessory. To do
this, add the following entry to MAGX.INF:

  #_ENV STGUIDE=D:\TOOLS\ST-GUIDE\ST-GUIDE.PRG

Replace 'D:\TOOLS\ST-GUIDE\ST-GUIDE.PRG' with your own installation of
ST-Guide.

@{B}All changes in MAGX.INF must be done before '#_CTR'!@{b}
@autorefon

@endnode

## ------------------------------------------------------------------------

@node %InstallationAMT "Setting up MultiTOS"
@symbol "Setting up MultiTOS"
@toc Setup
@xref %InstallationASM "FreeMiNT: MyAES, XaAES and N.AES"
@xref %InstallationAMG "MagiC (Mag!X)"
@xref %InstallationAST "Single-TOS"
@autorefoff
Setup, Setting up MultiTOS                                            Thing
@line 1 75 0 0 7
@autorefon

To use Thing as an alternate desktop for MultiTOS, you have to add the
following entry in GEM.CNF (not MINT.CNF!):

  shell C:\THING\THING.APP

Replace 'C:\THING\' with your own folder.

@autorefoff
When re-booting the system, Thing will be started automatically.
To use Thing as an AV server and font selector you have to set the
environmental variables AVSERVER and FONTSELECT. To do this, add the
following entries to the file MINT.CNF (not GEM.CNF!):

  setenv AVSERVER THING
  setenv FONTSELECT THING

@box 1 75 10

@image ictip.img 2
      When using MiNT-OS, Thing will use the environmental variable HOME
      for its configuration files. If HOME is not found, THINGDIR will
      be used. If both are not available, THING will default to local.
      THINGDIR no longer override HOME. THINGDIR can be set in MINT.CNF:

        setenv THINGDIR c:\thing

      Replace 'c:\thing' with your own folder.


In addition, you can specifiy the file name of ST-Guide by setting the
environmental variable STGUIDE. This makes it possible to use ST-Guide
as an external program and it has to be installed as an accessory. To do
this, add the following entry to MINT.CNF (not GEM.CNF!):

  setenv STGUIDE d:\tools\st-guide\st-guide.prg

Replace 'd:\tools\st-guide\st-guide.prg' with your own installation of
ST-Guide.
@autorefon

@endnode

## ------------------------------------------------------------------------

@node %InstallationAST "Setting up Single-TOS"
@symbol "Setting up Single-TOS"
@toc Setup
@next %InstallationAST
@xref %InstallationASM "FreeMiNT: MyAES, XaAES and N.AES"
@xref %InstallationAMG "MagiC (Mag!X)"
@xref %InstallationAMT "MultiTOS"
@autorefoff
Setup, Setting up Single-TOS: EmuTOS and TOS 1.04->4                  Thing
@line 1 75 0 0 7
@autorefon

@autorefoff

@{B}EmuTOS@{b} 
Latest versions of EmuTOS with improved graphic capabilities will run 
Thing with minor limitations. EmuTOS versions up to 1.3, require a modified 
THING.RSC and a B&W icon set. 

To run automatically Thing at start you have to install Thing as an 
'auto start' application.

 1) Select the file THING.APP
 2) Select the menu item 'Option->Install application'
 3) A dialog box appears to register THING.APP
@box 26 6 1
 4) Set 'boot status' to  AUTO
@box 15 9 1
 5) Press the  Install  buttom to activate

Don't forget to select 'Save desktop' from the 'Option' menu. At next
boot of the system, Thing will be loaded automatically.


@{B}Atari computers/clones with a 68020 (or better) CPU@{b} 
Starting with version 1.60, Thing require a 68020 CPU (minimum) to
run. As Thing was only tested in an emulated environment (EmuTOS, TOS4), 
there is no guarantee it will run on real Atari TT / Falcon / Clones or 
ST with a CPU upgrade.


Setup of Thing on 68020 (or better) platforms:      

You have to register Thing as an 'auto start' application in the TOS 
desktop. Running Thing from the AUTO folder is not possible!

 1) Select the file THING.APP
 2) Select the 'Install application' (or a similar function in your
    desktop)
 3) A dialog box appears to register THING.APP
@box 26 6 1
 4) Set 'boot status' to  AUTO

The following example shows the dialog box of Falcon-TOS:
@autorefon

@limage tosapp.img 2

When re-booting the system, Thing will be started automatically. Maybe
you have to set the environmental variables AVSERVER and FONTSELECT
to use Thing as an AV server and font selector. When using GEMRAM from
Martin Osieka you can do this by creating a file GEMRAM.ENV in the AUTO
folder with the following contents:

  AVSERVER=THING
  FONTSELECT=THING

Without GEMRAM you have to use an 'environment setter'.


@{B}Legacy Atari TOS@{b} 
Thing will not run on Atari TOS legacy platforms as a 68020 (or better)
CPU is required.

On legacy 68K platforms with 2-4Mb of RAM only and with TOS 1.04-> TOS2,
we suggest to use old versions of Thing (1.09/1.27).


@endnode

# ------------------------------------------------------------------------
