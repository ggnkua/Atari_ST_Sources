## ------------------------------------------------------------------------
## MenÅbefehle & Kontextsensitive Hilfen
## ------------------------------------------------------------------------

@node "Menu commands" "Thing Documentation - Menu commands"
@prev "Menu commands"
@include header.stg

@line 2 2 0
@line 4 0 1
@line 2 2 1
    Menu commands
     ˘ @{General link %MenÅAllg}
     ˘ @{"THING (Accessory menu)" link "Menu 'THING'"}
     ˘ @{File link "Menu 'File'"}
     ˘ @{Edit link "Menu 'Edit'"}
     ˘ @{Display link "Menu 'Display'"}
     ˘ @{Window link "Menu 'Window'"}
     ˘ @{Extra link "Menu 'Extra'"}
     ˘ @{Tools link "Menu 'Tools'"}
@endnode

## ------------------------------------------------------------------------

@node %MenÅAllg "Menu commands, General"
@toc "Menu commands"
@autorefoff
Menu commands, General                                                Thing
@line 1 75 0 0 7
@autorefon

Most menu commands can be selected with the keyboard too. The keyboard
shortcuts are shown at the right border of the menus. Some examples:

@box 12 9 1
@box 22 3 1
  ^C .....  Control + C

@box 12 7 1
@box 20 9 1
@box 30 3 1
  ^U  ...  Shift + Control + U

@box 12 7 1
@box 20 8 1
  DEL ...  Shift + Delete

Some functions are available with addition keyboard shortcuts, which are
not displayed in the menus:

@box 2 8 1
  Return  ...... Shortcut for 'Open...' in the 'File' menu, if there is
                 one object selected.
@box 2 5 1
  Undo  ........ Shortcut for 'Close' in the 'File' menu

@box 2 11 1
  Backspace  ... Shortcut for 'Close' in the 'File' menu, if there is
                 a directory window active without Auto Locator.
                 (if there is an Auto Locator, this key will just delete
                 the last entered character).

@box 2 5 1
  Tab  ......... Shortcut for 'Show Info...' in the 'File' menu
@endnode

## ------------------------------------------------------------------------

@node "Menu 'THING'"
@toc "Menu commands"
@autorefoff
Menu 'THING'                                                          Thing
@line 1 75 0 0 7
@autorefon

  THING
@line 2 20 0
@line 2 0 2
@line 22 0 2
   About Thing...
 @{G}--------------------@{g}

@autorefoff
This menu contains only the entry 'About Thing...' and all active
accessories. Under MultiTOS there are all active applications are
listed here as well; in that case Thing can be found as 'Thing Desktop'.

In the 'About Thing...' dialog the current version number of Thing 
along with other useful information can be accessed.

Select the info button in this dialog box to opens another dialog,
and display some of your machine specific details (Operating system, 
screen mode etc.):
@autorefon

@limage dlabout2.img 2
@endnode

## ------------------------------------------------------------------------

@node "Menu 'File'"
@toc "Menu commands"
@autorefoff
Menu 'File'                                                           Thing
@line 1 75 0 0 7
@autorefon

@autorefoff
  File
@box 2 21 15 0
   @{"New..." link %mnew}          ^N   Creates new files, folders, groups and links
   @{"Open..." link %mopen}         ^O   Opens a file, folder etc.
   @{"Search..." link %mfind}       ^F   Starts the external file finder
   @{"Show Info..." link %minfo}    ^I   Shows informations about the selectet object(s)
 @{G}---------------------@{g}
   @{"Close" link %mclose}           ^H   Closes the current directory
   @{"Show..." link %mshow}         ^Z   View a file with the appropriate application
   @{"Print..." link %mprint}        ^P   Print a file with the appropriate application
   @{"Save Group" link %msavegroup}      ^S   Save changes in the current object group
 @{G}---------------------@{g}
   @{"Eject" LINK "%meject"}          ^J   Eject media
 @{G}---------------------@{g}
   @{"Format Disk..." link %mformat}       Format a floppy disk
 @{G}---------------------@{g} 
   @{"Quit" link %mquit}            ^Q   Leave Thing or perform a shutdown

@autorefon

This menu contains functions to handle files or folders. Please note that
corresponding applications have to be installed for viewing or printing 
files!

The function 'Search...' is only available if an external search utility
is specified in the page 'System' of the 'Configuration' dialog box. 
Search utilities can be desk accessories or external programs.

@{B}Quit/Shutdown@{b} 
In FreeMiNT systems, If the SDMASTER Environmental variable is defined in
the AES, 'Shutdown' replaces 'Quit' and is used to start in parallel the 
tool used to perform a system shutdown. For safety, to this action is 
assigned the keyboard shortcut  Shift  +  Control  +  Q .

If Thing is running as a shell under MagiC!2, there is no 'Quit' entry,
because MagiC!2 would start Thing again automatically.

If Thing is running as a shell under MagiC!3 or later, 'Shutdown' replaces 
'Quit' and is used to shut down Thing and MagiC. For safety this is 
assigned the keyboard shortcut  Shift  +  Control  +  Q .

@endnode

## ------------------------------------------------------------------------

@node "Menu 'Edit'"
@toc "Menu commands"
@autorefoff
Menu 'Edit'                                                           Thing
@line 1 75 0 0 7
@autorefon

@autorefoff
  Edit
@box 2 24 7
   @{"Cut" link %mcut}                ^X   Cut current editable field
   @{"Copy" link %mcopy}               ^C   Copy current window contents or field
   @{"Paste" link %mpaste}              ^V   Insert clipboard to current field
   @{"Delete" link %mdelete}           DEL   Delete selected objects
 @{G}------------------------@{g}
   @{"Select all" link %mselall}         ^A   Select all objects in current window
   @{"Select none" link %mselnone}       ^A   De-select all objects in current window
@autorefon

This menu is similar to 'Edit' menus in other programs. The operations 
'Copy', 'Cut' and 'Paste' either refer to the window contents (directories, 
groups and @{"Console window" LINK "%EinfÅhrungCON"}) or to the current input field.

With a directory window it is hardly sensible to copy all the files and 
folders complete to the clipboard. Instead, only the filenames are copied 
as text (either all the files displayed in the directory or only the 
selected objects), so that they can be pasted into another program, for 
instance. This makes it very easy to produce table of contents lists etc.

In addition one can use 'Copy'/'Cut' and 'Paste' to copy or move files and 
folders between directory windows.

@endnode

## ------------------------------------------------------------------------

@node "Menu 'Display'"
@toc "Menu commands"
@xref Font-Protokoll
@autorefoff
Menu 'Display'                                                        Thing
@line 1 75 0 0 7
@autorefon

@autorefoff

  Display
@box 2 24 15 0
   @{"As Text" LINK "%mtext"}            ^T   Display active window contents as text
   @{"As Mini-icons" LINK "%mstxt"}      ^M   ... as mini-icons
   @{"As Icons" LINK "%micons"}           ^G   ... as icons
 @{0G}------------------------@{0}
   @{"Reverse Order" LINK "%msort"}     ^M   Display objects in reverse order
   @{"By Name" LINK "%msort"}           ^N   Display directories sorted by name
   @{"By Size" LINK "%msort"}           ^G   ... by file size
   @{"By Date" LINK "%msort"}           ^D   ... by file date and time
   @{"By Extension" LINK "%msort"}      ^E   ... by file extender
   @{"Unsorted" LINK "%msort"}          ^O   ... without sorting contents
 @{0G}------------------------@{0}
   @{"Mask..." LINK "%mmask"}            ^E   Set mask for current directory
   @{"Appearance..." LINK "%mfont"}      ^D   Change appearance of current directory
 @{0G}------------------------@{0}
   @{"Save Display Options" LINK "%msaveindex"}    Save current appearance of directory


This menu contains functions to change the appearance of directories,
@{"object groups" LINK "Object groups"} or the @{"Console window" LINK "%EinfÅhrungCON"}. Selecting 'Appearance...' with the 
 Shift  key held down (or if no directory or group window is active), 
opens the Thing @{"font selector" LINK "%mfontsel"} with which any desired font can be passed 
to other programs via the Font Protocol. For this a font sample has to be 
Drag&Dropped to a window of the relevant application.

@endnode

## ------------------------------------------------------------------------

@node "Menu 'Window'"
@toc "Menu commands"
@xref %EinfÅhrungWIN "Windows in Thing"
@autorefoff
Menu 'Window'                                                         Thing
@line 1 75 0 0 7
@autorefon

@autorefoff
  Window
@line 2 25 0
@line 2 0 6
@line 27 0 6
   @{"Cycle" link %mnwin}               ^W   Switch to next window
   @{"Close" link %mcwin}               ^U   Close aktive window
   @{"Close All" link %mcawin}          ^U   Close all windows
   @{"Duplicate" link %mdwin}          ^W   Duplicate aktive window
 @{G}-------------------------@{g}
   ....                     List of the first 10 window titles
@autorefon

This menu contains functions to handle windows. The 'Cycle', 'Close' and 
'Close all' function also affects windows of AV clients (e.g. @{"ST-Guide" LINK "ST-GUIDE.HYP"}) 
registered using the AV_ACCWINDOPEN message if Thing was installed 
correctly and the AVSERVER environment variable is set accordingly, if 
required.

Beneath the 'Duplicate' entry, the title of the first ten opened Thing 
windows are automatically added and can be topped by selecting the 
corresponding menu entry -- ideal when windows get buried on a cluttered 
desktop.

@endnode

## ------------------------------------------------------------------------

@node "Menu 'Extra'"
@toc "Menu commands"
@xref thingicn.hyp "Thing Icon Manager"
@xref Dateiformate
@autorefoff
Menu 'Extra'                                                          Thing
@line 1 75 0 0 7
@autorefon

 Extra
 
@box 2 27 16 0
   @{"Applications..." LINK "%mappl"}      ^P   Install, edit and remove applications
   @{"Function Keys..." LINK "%mfunc"}     ^F   Edit function key assignments
   @{"Configuration..." LINK "%mconf"}     ^V   Change Thing configuration options
 @{0G}---------------------------@{0}
   @{"Mount Devices" LINK "%mdrive"}              Mount drive @{"icons" LINK "Icons"} on desktop
   @{"Change Resolution..." LINK "%mrez"} ^R   Change current screen resolution
   @{"Edit Icon Assignments..." LINK "%meicon"}   Launch @{"Thing Icon Manager" LINK "THINGICN.HYP"}
   @{"Load Icons..." LINK "%mlicon"}              Re-load ICONS.RSC and @{"ICONS.INF" LINK "%DateiformateIC"}
 @{0G}---------------------------@{0}
   @{"Console Window" LINK "%mcon"}       ^C   Open @{"Console window" LINK "%EinfÅhrungCON"}
 @{0G}---------------------------@{0}
   @{"Font Selector..." LINK "%mfontsel"}           Call Thing font selector
 @{0G}---------------------------@{0}
   @{"Auto-save Config" LINK "%mautosave"}           Save configuration at program end?
   @{"Save Configuration" LINK "%msconf"}   ^S   Save current configuration
   @{"Load Configuration" LINK "%mlconf"}   ^L   Restore old (saved) configuration


These functions are mainly used to configure Thing. You can change the
'global' settings, install programs as applications and devices on the 
desktop and so on. In order to use 'Edit Icon Assignments...', THINGICN.APP,
the @{"Thing Icon Manager" LINK "THINGICN.HYP"}, must have been correctly installed in the Thing 
start directory.

@endnode

## ------------------------------------------------------------------------

@node "Menu 'Tools'"
@next "Menu 'Tools'"
@toc "Menu commands"
@autorefoff
Menu 'Tools'                                                          Thing
@line 1 75 0 0 7
@autorefon

  Tools
@line 2 19 0
@line 2 0 4
@line 21 0 4
   @{G}M1@{g}                 10 editable entries
   @{G}M2@{g}
   @{G}M3@{g}
   ....

This menu contains up to 10 editable entries to launch programs, open
files or folders. You can edit the entries using the 'Tools...' option
in the 'Extra' menu.

If there are no entries defined, the whole menu will be hidden.
@endnode

## ------------------------------------------------------------------------
## Kontextsensitive Hilfen
## ------------------------------------------------------------------------

@node %mnew "File - New..."
@prev %mnew
@toc "Menu commands"
@autorefoff
File - New...                                                         Thing
@line 1 75 0 0 7
@autorefon

This function is used to create new files, folders, object groups or links.

@{B}Object type:@{b} This option determines the desired object type. Files,
  symbolic links and folders can only be created in the current directory. 
  If the dialog is called when there is no directory window active, the 
  corresponding option is not selectable.

If the object type 'Object group' was selected, the following entries
appear:

@{B}Group file:@{b} Name of the file to which the group is to be saved. If a 
  directory window is open when the dialog is called, the new group will 
  be saved to that, otherwise to the same directory in which the 
  configuration files and icons of Thing are stored. @{"Group files" LINK "%DateiformateGRP"} can be 
  moved subsequently to any other directory, or renamed, so long as the 
  extender '.GRP' isn't changed.

@{B}Title:@{b} Here a name for the group is entered, up to 32 characters in length, 
  that is to be used as the window title; mixed upper and lower case can be
  used. If the field is left empty, the filename will be used as the title.

@{B}Save automatically:@{b} If this option is set, all changes of the group
  will be saved (usually immediately but at the latest when the group 
  window is closed). Excepted from this are movements of window positions 
  off-screen and back again using the 'Hide' and 'Unhide' functions of 
  MagiC. With this option not set, an asterisk '*' preceding the group 
  title in the window title line denotes unsaved changes have been made 
  to the group; these changes can be saved permanently by using the 
  'Save Group' function of the 'File' menu.

@{B}Icon   Desktop:@{b} A new file icon for the group will be created on the 
  @{"desktop" LINK "Desktop"} if this option is set. Thing looks for free space starting from 
  bottom left.
 
 
@{I}If, on the other hand, the object type 'Link ('Alias')' was selected, 
  the following sub-section entries appear:@{0}

@{B}Absolute / Relative:@{b} With these two radio buttons one can choose between 
  creating a symbolic link with an absolute destination (i.e. complete 
  with drive letter and access path) or specifying a relative destination.
 
@{B}Dest.:@{b} Here the destination of the symbolic link is specified. If one has 
  selected 'Absolute' then this button calls up the file selector for
  choosing the destination file or folder. If 'Relative' mode was selected, 
  on the other hand, one obtains an input field in which the destination 
  can be entered manually (which can, of course, also be an absolute path).

@{0B}Name:@{0} This name will be used for creating the symbolic link in the current 
directory after clicking on  OK .

 @{"What are symbolic links?" LINK "%symlink"}


      Not all operating systems or all file systems permit the creation or 
      use of symbolic links. Since, unfortunately, an absolutely certain 
      check of this capability can only be made with a rather nasty trick, 
      Thing always offers the option of creating symbolic links if this 
      cannot be established directly with the info function of the file 
      system. Thus it may happen that after clicking on  OK  one receives 
      an error message; in general this means that either the operating 
      system in use can not cope with symbolic links at all, or that they 
      are not possible with the particular file system.
      
@endnode

## ------------------------------------------------------------------------

@node %mopen "File - Open..."
@toc "Menu commands"
@autorefoff
File - Open...                                                        Thing
@line 1 75 0 0 7
@autorefon

Selected objects -- of any kind -- are opened, where possible. If no 
objects are selected, Thing displays the file selector ready to select an 
appropriate object (if Freedom is installed, one can continue working in 
Thing, incidentally).

@{B}Files:@{b} The appropriate installed application, if any, is started and 
the file passed to it.

@{B}Programs/accessories:@{b} The program/accessory is executed. If the program 
is already active Thing asks if a second copy should be started. 
Desk accessories are 're-activated' using a AC_OPEN or VA_START message.

@{B}Folders and drives:@{b} A new directory window is opened to display 
the contents.

Alternatively to this menu entry, objects can always be opened using 
the mouse.  Mouse & Keyboard

@endnode

## ------------------------------------------------------------------------

@node %mfind "File - Search..."
@toc "Menu commands"
@autorefoff
File - Search...                                                      Thing
@line 1 75 0 0 7
@autorefon

This option remains unselectable (greyed out) unless an external search
utility is installed in the 'System' page of the 'Setup' dialog called 
via the 'Setup...' option in the 'Extra' menu.

The search tool 'ThingFnd' is already included in the Thing archive.
This tool allows simple file searches and returns the result directly 
to Thing as an object group.

@endnode

## ------------------------------------------------------------------------

@node %minfo "File - Show Info..."
@toc "Menu commands"
@autorefoff
File - Show Info...                                                   Thing
@line 1 75 0 0 7
@autorefon

The properties for the selected object/s or the active window are 
displayed in an 'Info about <object name>' dialog, dependent upon the 
object type:

  @{"Drives" LINK "%ddinf"}         @{"Files on the desktop" LINK "%ddfinf"}
  @{"Trashcan" LINK "%dtinf"}       @{"Folder/s on the desktop" LINK "%ddfinf"}
  @{"Clipboard" LINK "%dcinf"}      @{"Files in directories" LINK "%ddfinf"}
  @{"Printer" LINK "%ddpinf"}        @{"Folder/s in directories" LINK "%ddfinf"}
  @{"Groups" LINK "%dgrpinf"}         @{"Group objects" LINK "%dgobinf"}

If several @{"objects" LINK "%DesktopO"} are selected on the desktop or in a group, a series of 
appropriate dialogs appears in turn.

If one selects several folders and files in a directory, then a dialog 
appears first showing the number and total size of the files and folders, 
inclusive of all sub-directories. Select the  Details  button in this 
dialog to display the individual 'Info' dialogs in turn for each selected 
object.

If a single group or @{"desktop" LINK "Desktop"} object is selected (file or folder), one can 
also obtain information about the directory object it represents by 
holding down  Alternate  when selecting the menu entry.
@endnode

## ------------------------------------------------------------------------

@node %ddinf "File - Show Info... (Drives)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Drives)                                          Thing
@line 1 75 0 0 7
@autorefon

This dialog displays information and statistics for the selected drive.

@{0B}Label:@{0} Label of the drive icon on the desktop, up to 32 characters
  in length. This may be edited; mixed upper and lower case can be used.
  Some users prefer to have no icon text, which saves some desktop space 
  -- to do this just clear the icon 'Label' editable text field with  Esc .

@{0B}Volume label:@{0} This is usually set by your disk management software and is 
  largely a hangover for GEMDOS compatibility. If information about the 
  drive can be determined, the 'Volume' name can be edited; otherwise 
  the field is locked.

@{B}Label:@{b} The label of the icon on the desktop is specified here.
  The labeling can also be omitted to save space.

@box 1 75 5

@image icwarn.img 2
      An existing label can be modified but no longer removed. However, 
      this is not an error on Thing's part, but rather an limitation
      of GEMDOS.

@{B}Used space:@{b} This and the following information indicate the 
current occupancy of the drive. This does not have to correspond 
exactly to the size of all files, as the occupancy is determined 
using the operating system function Dfree() in order not to slow 
down the process unnecessarily by 'counting files recursively'.

@box 1 4 1
 OK : The information is accepted and you get to the next object if 
  several objects were selected.

@box 1 8 1
 Next: If you have selected several objects, you can use this Button 
  to skips the current object without modifying the properties.

@box 1 9 1
  Cancel : Cancels the entire process.
  
@endnode

## ------------------------------------------------------------------------

@node %dtinf "File - Show Info... (Trash can)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Trash can)                                            Thing
@line 1 75 0 0 7
@autorefon

This dialog can be used to set the icon text for the @{"desktop" LINK "Desktop"} trashcan.

@{0B}Label:@{0} A description for the trashcan on the desktop, up to 32 characters
  in length. This may be edited; mixed upper and lower case can be used.
  Some users prefer to have no icon text, which saves some desktop space 
  -- to do this just clear the icon 'Label' editable text field with  Esc .

 OK : The current data is updated and, if multiple objects were selected,
  the details for the next object is displayed.

 Next : This button is only available if several objects were selected. 
  Select this button to display the details for the next object without 
  updating the details for the current object.

 Cancel : Exits the dialog without updating any details.
 
@endnode

## ------------------------------------------------------------------------

@node %dcinf "File - Show Info... (Clipboard)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Clipboard)                                       Thing
@line 1 75 0 0 7
@autorefon

This dialog can be used to set the icon text and path for the @{"desktop" LINK "%DesktopA"} 
GEM-Clipboard.

@{0B}Label:@{0} A description for the clipboard on the desktop, up to 32 characters
  in length. This may be edited; mixed upper and lower case can be used.
  Some users prefer to have no icon text which saves some desktop space 
  -- to do this just clear the icon 'Label' editable text field with  Esc .

@{0B}Path:@{0} The path of the @{"GEM clipboard" LINK "%DesktopOCLP"}. If the folder doesn't exist, Thing 
  will create one so long as the complete path up to the specified folder
  exists! For example if 'C:\GEMSYS\CLIPBRD\' is entered then at least
  'C:\GEMSYS\' must already exist, otherwise Thing cannot create the 
  clipboard folder.

@box 1 4 1
 OK : The current data is updated and, if multiple objects were selected, 
  the details for the next object is displayed.

@box 1 8 1
 Next : This button is only available if several objects were selected. 
  Select this button to display the details for the next object without 
  updating the details for the current object.
  
@box 1 9 1
 Cancel : Exits the dialog without updating any details.
 
@endnode

## ------------------------------------------------------------------------

@node %ddpinf "File - Show Info... (Printer)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Printer)                                         Thing
@line 1 75 0 0 7
@autorefon

This dialog can be used to set the icon text and path for the printer on 
the @{"desktop" LINK "%DesktopA"}.

@{0B}Label:@{0} A description for the printer on the desktop, up to 32 characters
  in length. This may be edited; mixed upper and lower case can be used.
  Some users prefer to have no icon text which saves some desktop space 
  -- to do this just clear the icon 'Label' editable text field with  Esc.

@box 1 4 1
 OK : The current data is updated and, if multiple objects were selected, 
  the details for the next object is displayed.
  
@box 1 8 1
 Next : This button is only available if several objects were selected. 
  Select this button to display the details for the next object without 
  updating the details for the current object.
  
@box 1 9 1
 Cancel : Exits the dialog without updating any details.
 
@endnode

## ------------------------------------------------------------------------

@node %dgrpinf "File - Show Info... (Group)"
@toc "Menu commands"
@xref %DateiformateGRP "Format of group files"
@autorefoff
File - Show Info... (Group)                                           Thing
@line 1 75 0 0 7
@autorefon

This dialog is used to set the general properties for @{"object groups" LINK "Object groups"}.

@{B}Title:@{b} The title of the group, up to 32 characters in length; mixed 
  upper and lower case can be used. This title will also be used as the 
  window title.

@{B}Group file:@{b} The filename, with the '*.GRP' extender, used to store the 
  group details.

@{B}Save changes automatically:@{b} If this option is set, all changes of the group
  will be saved (usually immediately but at the latest when the group 
  window is closed). Excepted from this are movements of window positions 
  off-screen and back again using the 'Hide' and 'Unhide' functions of 
  MagiC. With this option not set an asterisk '*' preceding the group 
  title in the window title line denotes that unsaved changes have been 
  made to the group.

@{B}Determine attributes:@{b} Normally Thing determines the attributes of all 
  entries when opening a group, so that executable files from extended 
  file systems are recognised correctly even if they do not have the usual 
  extenders such as .PRG or .TTP. But this may be undesirable at times, 
  such as when group entries refer to files contained on a floppy disk or 
  an interchangeable cartridge etc., as this results in the medium being 
  accessed and an error message appearing if the correct medium is not 
  currently in the drive.
 
  For this reason one can switch off this option, which tells Thing that 
  it should not determine any attributes when opening a group; this also 
  speeds up the process.
 
@{B}Close group automatically after opening group object:@{b} This determines 
  whether Thing is to close the group window when it has opened an element 
  of the group. Together with the following option one can create a kind 
  of menu structure with groups.
 
@{B}Parent object@{b}: Here one can specify an object (with the same options 
  as for a @{"Function key entry" LINK "%mfunc"}) which is to be opened after the group is 
  closed with the window 'Closer' button or the corresponding menu entry. 
  As a rule one will enter another group file here, in order to create 
  the above-mentioned menu structure.
 
  If one wants to close a group without opening the parent object, one has 
  to click on the 'Closer' button while holding down the  Shift  key.

@{B}F-key:@{b} In this popup menu a Function key combination can be assigned 
  as a keyboard shortcut to open a group window.

@endnode

## ------------------------------------------------------------------------

@node %ddfinf "File - Show Info... (Files on the desktop)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Files on the desktop)                            Thing
@line 1 75 0 0 7
@autorefon

This dialog has been revised extensively, and brings together the functions
of four 'Show Info' dialogs from Thing V1.00. Depending on the type of 
object selected (and where it is positioned -- @{"desktop" LINK "%DesktopA"} or directory) an 
appropriately modified dialog will appear. Icons on the desktop can at 
present only have their label and/or optional Function key shortcut 
combination altered.


      Holding down the  Alternate  key and double-clicking a file on the 
      desktop opens the directory containing the object and selects the 
      file automatically. 


@{0B}Label:@{0} This is only available for @{"icons" LINK "Icons"} on the desktop, where one can 
  enter a description up to 32 characters long. This may be edited; mixed
  upper and lower case can be used.
  Some users prefer to have no icon text which saves some desktop space 
  -- to do this just clear the icon 'Label' editable text field with  Esc .

@{B}Name:@{b} Name of the file or folder. The input will be adapted to the 
  requirements of the file system (e.g. lower/upper case, maximum length 
  of the name and extender etc.).
 
@{B}Dest.:@{b} This entry only appears if the object is a symbolic link, and in 
  that case it shows which destination object it is pointing to. This entry
  cannot be altered at present.
 
@{B}Size, Date, Time:@{b} Creation or date of editing for files/folders. 
  With folders the size of all files in sub-directories is calculated. 
  Thing can only take paths up to 255 characters into account.
 
  If the file system in use also supports a time stamp for the last access 
  or the last status change besides the time of last alteration, one can 
  cycle through these by clicking on the descriptive text in small type 
  below the time display.
 
@{B}F-key:@{b} In this popup menu a Function key combination can be assigned 
  to the file or folder as a keyboard shortcut to open the object (also
  available for desktop icons).
 

@{I}Now to the specific information for files in directories...@{i}

@{B}Attributes:@{b} Depending on the operating system in use, one can alter
  here either just the normal GEMDOS file attributes or optionally also 
  the extended attributes of MiNT (including file-owners and file-group 
  membership, such as 'setuid', 'setgid' and 'sticky'). The latter are 
  only available if the file system reports that it supports them. If 
  Thing cannot obtain this information, it assumes under MiNT that the 
  attributes are present; under MagiC, on the other hand, they will be 
  ignored in this case. For clarity, the MiNT attributes have been placed 
  on their own tabbed 'page' of the dialog.
 
  The input of user- and group-IDs can be either as text (e.g. 'root') or 
  numeric. If a text-ID is input that does not exist, then this will bring 
  up a corresponding alert. Numeric inputs, on the other hand, are only 
  checked to ensure they do not exceed the permitted limits.
 
@{0B}Program 'tab':@{0} With executable programs (i.e. files that Thing regards 
  as a program and that have a valid program header) one can alter the 
  'Fastload', 'Load alt', memory allocation ('Malloc') and 'Memory protect' 
  flags. Naturally the memory protection changes are only effective if the 
  operating system and hardware in use supports this feature.
 

      @{0U}Note about MagiC memory limit@{0}

      The 'MagiC! memory limit' option is logically only available 
      under the MagiC operating system. If no memory limit is set the 
      entry field remains empty. To clear an existing limit simply 
      clear the input field or enter 0.
 
      Don't be surprised if a program file grows or shrinks in size by 
      8 bytes when adding or removing a limit. The change is caused by 
      adding 8 bytes of data at the end of the program file (the text 
      'MAGX' followed by a 32 bit integer) which serve as a signal for 
      MagiC to undertake memory limitation.

      From Thing 1.25 onwards there is also a better possibility to set 
      memory requirement limits for a program, which works with MagiC 5 
      onwards and also with MultiTOS, N.AES etc. For this one has to 
      install the corresponding program as an application and the maximum 
      amount of memory it can use can then be set under 'Options'.


 OK : The current data is updated and, if multiple objects were selected,
  the details for the next object is displayed.

 Next : This button is only available if several objects were selected. 
  Select this button to display the details for the next object without 
  updating the details for the current object.

 Cancel : Exits the dialog without updating any details.

@endnode

## ------------------------------------------------------------------------

@node %ddflinf "File - Show Info... (Folders on the Desktop)"
@toc "Menu commands"
@autorefoff
File - Show Info... (Folders on the desktop)                          Thing
@line 1 75 0 0 7
@autorefon

In this dialog, the label for a folder icon and the assigned function 
key on the desktop can be changed.

@{B}Label:@{b} The label of the icon on the desktop is specified here. 
  The label can also be left blank to save space. 

@{B}F-key:@{b} In this popup menu you can assign any function key to the 
  folder, which should be used as a keyboard shortcut to open the folder.

@box 1 4 1
 OK : The information is accepted and you get to the next object if 
  several objects were selected.

@box 1 6 1
 Next : If you have selected several objects, you can use this button 
  to skip the current object without changing the properties.

@box 1 9 1
  Cancel : Cancels the entire process.

@endnode

## ------------------------------------------------------------------------

@node %dfinf "File - Show Info... (File)"
@toc "Menu commands"
@autorefoff
File - Show Info... (File)                                            Thing
@line 1 75 0 0 7
@autorefon

In this dialog, properties of a file can be changed.

@{B}Name:@{b} Name of the file. The input may be adapted to the properties
  of the file system (e.g. lower/upper case, maximum length of the name 
  and extension, etc.).

@{B}TOS, MiNT, Flags:@{b} Depending on the operating system environment, 
  either only the normal GEMDOS file attributes or optionally the extended 
  attributes of MiNT can be changed. Unfortunately, I don't know of any 
  method how to cleanly determine whether a file system only allows TOS 
  or only MiNT attributes. That's why all flags are displayed both in the 
  text display of directories and in this dialog.
  
  For executable programs (i.e. files that Thing sees as a program and 
  that contain a valid program header) you can change the flags for fast 
  load, memory request, memory protection, etc. Information about memory 
  protection is of course only effective if the respective operating 
  system and hardware offer such a mechanism.

@box 1 75 14

@image ictip.img 2
      @{U}Note about the MagiC! Memory limit@{0}

      The statement 'MagiC! Memory limit' is logically only provided 
      under MagiC. If no storage limit is set, the input field is 
      empty (to delete an existing limit, empty the input field 
      or enter 0... easy, right ;-)).

      By the way, you shouldn't be surprised if files become 8 bytes 
      longer or shorter after adding or removing a limit. 
      These additional 8 bytes at the end of the program file (text 
      'MAGX', followed by a 32-bit integer) are the signal for MagiC 
      to set a limit.

@box 1 4 1
 OK : The information is accepted and you get to the next object if 
  several objects were selected.

@box 1 6 1
 Next : If you have selected several objects, you can use this button 
  to skip the current object without changing the properties.

@box 1 9 1
 Cancel : Cancels the entire process.

@endnode

## ------------------------------------------------------------------------

@node %dflinf "File - Show Info... (Folder)"
@toc "Menu commands"
@autorefoff
File - Info... (Folder)                                               Thing
@line 1 75 0 0 7
@autorefon

In this dialog it is possible to rename Folders. The folder name can be 
adapted to the properties of the file system.

@box 1 4 1
  OK: The information is accepted and you get to the next object if 
   several objects were selected.

@box 1 6 1
  Next: If you have selected several objects, you can use this button
   to skip the current object without changing the properties.

@box 1 8 1
  Cancel : Cancels the entire process.
  
@endnode

## ------------------------------------------------------------------------

@node %dgobinf "File - Show Info... (Group object)"
@toc "Menu commands"
@xref %DateiformateGRP "Format of group files"
@autorefoff
File - Show Info... (Group object)                                    Thing
@line 1 75 0 0 7
@autorefon

The properties of a group object can be changed in this dialog.

@{B}Title:@{b} The title of the group object.

@{B}File/Folder:@{b} File or folder name of the object. Thing 
  recognizes folders with a final '\' and automatically adjusts 
  the object type.

@{B}Parameter@{b} Command line parameters for executable programs. 
  For folders, the parameters are interpreted as a file mask, as 
  with the function key assignment.

@box 1 4 1
 OK: The information is accepted and you get to the next object 
  if several objects were selected.

@box 1 6 1
 Next: If you have selected several objects, you can use this 
  button to skip the current object without changing the properties.

@box 1 8 1
 Cancel : Cancels the entire process.
 
@endnode

## ------------------------------------------------------------------------

@node %mclose "File - Close"
@toc "Menu commands"
@autorefoff
File - Close                                                          Thing
@line 1 75 0 0 7
@autorefon

This function closes the current directory or group similar to clicking the
closer of the current window.

@box 42 11 1
You can close directories also using the  Backspace -key, if there is no
auto locator set.

@box 1 75 6

@image ictip.img 2
      If you want to close a directory window without changing to the
      parent directories first, you can use the function 'Close' in the
@box 31 9 1
@box 41 3 1
      'Window' menu (shortcut  Control + U ) or you click the close while
@box 19 7 1
      holding the  Shift -key.


@endnode

## ------------------------------------------------------------------------

@node %mshow "File - Show..."
@toc "Menu commands"
@autorefoff
File - Show...                                                        Thing
@line 1 75 0 0 7
@autorefon

Thing doesn't include an internal viewer. To display a selected file
Thing looks for a suitable installed application.

@box 3 9 1
@box 37 9 1
@box 47 8 1
A  Control +double-click action (or  Control + Return ) achieves the
same result.
@endnode

## ------------------------------------------------------------------------

@node %mprint "File - Print..."
@toc "Menu commands"
@autorefoff
File - Print...                                                       Thing
@line 1 75 0 0 7
@autorefon

This option looks for an installed application to handle the selected
file/s. If a suitable application is available it's executed and the
file/s is/are passed to it.
@endnode

## ------------------------------------------------------------------------

@node %msavegroup "File - Save Group"
@toc "Menu commands"
@xref %DateiformateGRP "Dateiformat von Gruppendateien"
@autorefoff
File - Save Group                                                     Thing
@line 1 75 0 0 7
@autorefon

Any changes made to an active group window can be saved.
@endnode

## ------------------------------------------------------------------------

@node %mformat "File - Format Disk"
@toc "Menu commands"
@autorefoff
File - Format Disk                                                    Thing
@line 1 75 0 0 7
@autorefon

Thing includes its own internal disk format routines. If an external
program is setup in the 'System' page of the 'Setup' dialog then this
overrides the internal routines.

During a format operation (using the internal routines only) selecting
@box 5 8 1
the  Cancel -button aborts the operation. The following options are
available:

@{B}Drive:@{b} Select between 'A:' or 'B:'. If one of the drives is highlighted
  on the desktop this will be automatically be set in the format dialog.

@{B}Label:@{b} A 'Volume Label' up to 12 characters long can optionally be added
  to the disk.

@{B}Format:@{b} Thing supports the two main standard formats:
  DD: Double density (80 Tracks, 9 sectors): Yields 720Kb space
  HD: High density (80 Tracks, 18 sectors): Yields 1.44Mb space
  Both formats are MS-DOS compatible, unlike extended formats which use
  more than 80 tracks and/or nine sectors.

@{B}Clear FATs only:@{b} This option can be used to clear the file allocation
  tables (FATs). If these are deleted GEMDOS thinks the disk is freshly
  formatted which makes this option a handy way to 'quick format' a disk
  which is already formatted. @{B}This option only works on standard, double
  or high density formats!@{b}

After formatting is complete the available disk space is displayed along
with a random serial number. The serial number is used by the operating
system to determine when disks have been changed.

@box 1 75 7

@image icwarn.img 2
      The 'Drive Ready' signal from floppy disks does not correctly
      recognise changes of write protected disks. Adding a random serial
      number gives the operating system a chance to notice a disk change.
      Beware of copiers which duplicate disks without changing the serial
      number, these can lead to lost data!


@endnode

## ------------------------------------------------------------------------

@node %mquit "File - Quit/Shut Down"
@toc "Menu commands"
@autorefoff
File - Quit/Shutdown                                                  Thing
@line 1 75 0 0 7
@autorefon


@{U}Quit@{u}

This menu option exits Thing. An alert box offers a last chance to change
your mind before returning to the Atari desktop.

Note: If Thing is running as a shell under MagiC!2, there is no 'Quit' 
entry, because MagiC!2 would start Thing again automatically.

@{U}Shutdown@{u}

In FreeMiNT based systems, when the SDMASTER Environmental variable is 
defined in the AES, 'Shutdown' replaces 'Quit' in menu and is used to 
start in parallel the tool used to perform a system shutdown. For safety, 
to this action is assigned the keyboard shortcut Shift  +  Control  +  Q .

When Thing is running as a shell under MagiC!3, you may initiate a
'Shutdown' process before you turn off the system. This is very important
to avoid loss of data when using the WBDAEMON of MagiC!3!

If Thing is running as a shell under MagiC!3 or later, 'Shutdown' replaces 
'Quit' and is used to shut down Thing and MagiC. For safety this is 
assigned the keyboard shortcut  Shift  +  Control  +  Q 

The program SHUTDOWN.PRG and its configuration file SHUTDOWN.INF must
be installed in the start directory of Thing (both files are part of
the original distribution of MagiC!3 and can be found in the directory
C:\GEMSYS\GEMDESK\).





.


@endnode

## ------------------------------------------------------------------------

@node %mcut "Edit - Cut"
@toc "Menu commands"
@autorefoff
Edit - Cut                                                            Thing
@line 1 75 0 0 7
@autorefon

This menu command produces somewhat different results when applied to 
dialogs and directory windows:

@{B}Dialogs@{b}
The contents of the current input field (if any) is copied as a text 
string to the clipboard and then deleted from the input field.

@{B}Directory windows@{b}
If a directory window has one or more objects selected when this menu 
entry is activated, a special list will be written to the clipboard that 
contains the names and paths of all the selected objects. If one later uses 
'@{"Paste" LINK "%mpaste"}' from the 'Edit' menu in another directory window, the files and/or 
directories 'Cut' in the first step will be moved to this directory. So 
simply selecting 'Edit' -> 'Cut' does not move or delete any data as yet!

@endnode

## ------------------------------------------------------------------------

@node %mcopy "Edit - Copy"
@toc "Menu commands"
@autorefoff
Edit - Copy                                                           Thing
@line 1 75 0 0 7
@autorefon

Depending on the type of active window, either the content of the window
(for directories) or the content of the current input field (for dialogs) 
is copied to the clipboard as text. If objects are selected in a directory,
only the selected objects are taken into account.

@endnode

## ------------------------------------------------------------------------

@node %mpaste "Edit - Paste"
@toc "Menu commands"
@autorefoff
Edit - Paste                                                          Thing
@line 1 75 0 0 7
@autorefon

This menu command produces somewhat different results when applied to 
dialogs and directory windows:

@{0B}Dialogs@{0}
The contents of the clipboard (if this consists of text) is copied to 
the current input field in a dialog (where available) with this option.

@{0B}Directory windows@{0}
If the topped window contains a directory, on the other hand, then files 
or folders that were earlier marked with @{"Edit - Copy" LINK "%mcopy"} or @{"Edit - Cut" LINK "%mcut"} will
be respectively copied or moved to it.

@endnode

## ------------------------------------------------------------------------

@node %mdelete "Edit - Delete"
@toc "Menu commands"
@autorefoff
Edit - Delete                                                         Thing
@line 1 75 0 0 7
@autorefon

Selected @{"object/s" LINK "%DesktopO"} are deleted. Object/s on the desktop and in groups are 
removed from the relevant group or the desktop but the original object 
file/s remain intact.

Symbolic links are treated in a similar way: Only the link entry itself 
is deleted, not the destination of the link.

@endnode

## ------------------------------------------------------------------------

@node %mselall "Edit - Select All"
@toc "Menu commands"
@autorefoff
Edit - Select All                                                     Thing
@line 1 75 0 0 7
@autorefon

This option selects all objects in the current window. Use 'Select None'
to clear the selection.
@endnode

## ------------------------------------------------------------------------

@node %mselnone "Edit - Select None"
@toc "Menu commands"
@autorefoff
Edit - Select None                                                    Thing
@line 1 75 0 0 7
@autorefon

This option clears the selection in the current window.
@endnode

## ------------------------------------------------------------------------

@node %mtext "Display - As Text"
@toc "Menu commands"
@autorefoff
Display - As Text                                                     Thing
@line 1 75 0 0 7
@autorefon

The contents of the current directory window is displayed as text. The
typeface and size is selected via the 'Display...' option in the 'Display'
menu.

@box 1 75 5

@image ictip.img 2
      You can speed up operation of Thing, when using the option
      'No icon assignments in text mode' in the page 'Windows' of the
      'Setup' dialog.


@endnode

## ------------------------------------------------------------------------

@node %mstxt "Display - As Mini-icons"
@toc "Menu commands"
@autorefoff
Display - As Mini-icons                                               Thing
@line 1 75 0 0 7
@autorefon

This display is a mixture between text and icon display. Each entry is 
listed as text with a preceding 16x<=16 pixel mini-icon:

The mini-icons are defined in the second object tree of the ICONS.RSC 
file. The two object trees are independent of each other. If you want to 
create a mini-icon to accompany its 'normal' icon simply draw one of 
appropriate size and give it an identical text label. If an icon has no 
matching icon in the other object tree the appropriate standard icon is 
used instead. More information  Icons.

@{0B}Limitation:@{0}
- Mini-icons cannot be displayed on the @{"desktop" LINK "%DesktopA"}. This may change in a 
  future Thing version.

@endnode

## ------------------------------------------------------------------------

@node %micons "Display - As Icons"
@toc "Menu commands"
@autorefoff
Display - As Icons                                                    Thing
@line 1 75 0 0 7
@autorefon

The contents of the current directory or group window is displayed as 
'normal' @{"icons" LINK "Icons"}:

The icons are included in the first object tree in the ICONS.RSC file 
and may be any (reasonable) size.


@endnode

## ------------------------------------------------------------------------

@node %msort "Display - Sort order"
@toc "Menu commands"
@autorefoff
Display - Sort order                                                  Thing
@line 1 75 0 0 7
@autorefon

The six menu options:

Reverse Order
By Name
By Size
By Date
By Extension
Unsorted

determine the order in which files are displayed in the currently topped 
directory window. Other open windows are @{0I}not@{0} affected. The 'Reverse Order' 
option sorts files and folders separately into reverse order. The 
'Unsorted' option shows the order the files and folders are stored on the 
disk.

Irrespective of the sort mode folders are always listed before files.

@endnode

## ------------------------------------------------------------------------

@node %mmask "Display - Mask..."
@toc "Menu commands"
@autorefoff
Display - Mask...                                                     Thing
@line 1 75 0 0 7
@autorefon

A selection file mask can be entered which determines what is to be 
displayed in the active directory window. If no directory window is active 
this option is greyed out and cannot be selected.

The dialog offers keyboard shortcuts and even features its own auto-locator 
action! A list of all possible file extenders in the active directory are 
listed as masks. Files can be Drag&Dropped onto the @{0I}input field@{0} and Thing 
will try to evaluate the filename to generate a mask.

Thing accepts the wildcards familiar from Unix shells: '*', '?' as well 
as '[...]':

'*':     None or any number of characters
'?':     Any one character
'[...]': One character from a selection or region. So '[ABC]' represents 
         either 'A', 'B' or 'C'. Another variant is '[A-F]', which 
         represents a short form of '[ABCDEF]'.

@{0B}Warning:@{0} '*.*' does @{0I}not@{0} mean all files, as familiar from GEMDOS, but 
all files that have at least one dot in the filename! Thus a file called 
'README' would not be covered by this mask. If all the files are to be 
displayed then the mask must read '*'. This will be the assumed default 
if the input field is left empty.

Thing pays no attention to case for masking, i.e. '*.lzh' is identical to 
'*.LZH' and will also find e.g. 'blabla.LzH'.

Multiple masks can be entered using a comma ',' without additional space 
characters as a separator. For example '*.PRG,*.APP' displays all programs 
with either the PRG or APP file extender.

Thing 1.20 onwards now also suports exclusion masks; for this one just has 
to add a tilde character '~' before the relevant mask. Thus, for instance, 
'~*.txt' represents all files that do @{0I}not@{0} end with '.txt'.

Multiple masks can be selected using the mouse. Select the first mask 
normally then hold down the  Shift  key and select the other entries.

@endnode

## ------------------------------------------------------------------------

@node %mfont "Display - Appearance..."
@toc "Menu commands"
@autorefoff
Display - Appearance...                                               Thing
@line 1 75 0 0 7
@autorefon

Use this dialog to set the display options in directory and group windows 
and to call the Thing font selector.
If a directory or group window is open the Directory or Group display
settings dialog appears.
If no directory or group window is open or the  Shift  key is held down 
when selecting 'Appearance...' the Thing '@{"font selector" LINK "%mfontsel"}' dialog is 
displayed.

@{B}Font:@{b} Desired typeface. If GDOS has not been installed only the system 
  font is available.
  If GDOS (or equivalent such as NVDI, AMCGDOS etc) is installed any 
  available screen font can be selected from those listed (including 
  TrueType and Speedo).
 
@{B}ID:@{b} The GDOS font ID number is displayed for reference.

@{B}Size:@{b} Enter the desired point size or select it from the popup.

The following elements are only available for directory and group windows:

@{B}Text colour, Background colour:@{b} The text and directory background colour 
  can be selected as desired from the popups.
 
@{B}Pattern:@{b} The pattern for the background colour can be selected from 
  this popup. For technical reasons windows then cannot be positioned or 
  scrolled quite as accurately, although the difference is not all that 
  large.
 
@{B}Show:@{b} Sets which data, in addition to the filename, is displayed in 
  directory windows when viewed as text or mini-icons.

  The attributes that can be displayed with normal (V)FAT file systems are 
  read only ('r'), hidden ('h'), system file ('s') and archived ('a').
 
  File systems with extended attributes display nine attributes; of these 
  the first three describe the access rights for the owner, the middle 
  three those of the user group and the last three the access rights for 
  all users. Here 'r' means readable, 'w' writeable, 'x' for files means 
  executable and for directories that one can cross the restriction 
  preventing access to lower directory levels.

  If the 'Set user-ID on execution' bit is set, then instead of the 'x' 
  for the owner's access rights an 's' will appear if the x-bit is also 
  set, otherwise an 'S'. In a similar way an 's' or 'S' for the user 
  group's access rights signals that the 'Set group-ID on execution' bit 
  is set. Finally, a 't' or 'T' for all users rights signals that the file 
  or folder has the 'Sticky' bit set.
 
  If the file system also supports file owners and user groups then these 
  will be displayed following the access rights -- first the name of the 
  owner and then the name of the user group. If the ID cannot be assigned 
  to one defined in /etc/passwd or /etc/group, or if the ID is longer than 
  8 characters, then it will be displayed only as a number.

@{B}Tile>@{b} With this button is possible to select a window's background
  image. The selected image is always tiled to fill the window's working 
  area. The filename is then listed to the right of the tile> button. 
  An external module named THINGIMG.OVL is required to load window's 
  background images.

  With Thing is currently distributed a basic OVL image module that loads 
  (X)IMG images (1-8 planes).


@{B}Notice:@{b}  
If this dialog is called when the @{"Console window" LINK "%EinfÅhrungCON"} is topped and GDOS (or 
equivalent) is installed, it may take longer to appear the first time 
while Thing establishes which fonts are available for the Console -- 
in contrast to directories only non-proportional fonts can be used here.

Using NVDI >=3.x this information is available quickly via a simple call 
but with most older GDOS versions (NVDI 2.x, FontGDOS etc) all the 
character widths of a font have to be compared individually -- which 
can take some time when there are many fonts!

@endnode

## ------------------------------------------------------------------------

@node %mfontsel "Display - Appearance... / Extra - Font Selector..."
@toc "Menu commands"
@autorefoff
Display - Appearance... / Extra - Font Selector...                    Thing
@line 1 75 0 0 7
@autorefon

The font selector can be called either from other programs via the Font 
Protocol or selecting the @{"Display - Appearance..." LINK "%mfont"} menu option while the 
 Shift  key is held down (if no directory or group window is open this 
will work without  Shift  as well). From Thing 1.10 onwards this can be 
done also from the newly added 'Extra - Font Selector...' menu entry.

Leaving the dialog via the  OK  button sends a FONT_CHANGED message with 
the selected settings to the program which called the font selector (shown 
in the dialog title line).

The background colour cannot be passed, as the Font Protocol does not 
support this setting, so it remains greyed out.

The font can also be Drag&Dropped to the window of any application which 
supports the Font Protocol. A FONT_CHANGED message is sent to the owner of 
the window (under Single-TOS you'll need to install WINX to use Drag&Drop!)

@endnode

## ------------------------------------------------------------------------

@node %msaveindex "Display - Save Display Options"
@toc "Menu commands"
@autorefoff
Display - Save Display Options                                        Thing
@line 1 75 0 0 7
@autorefon

This menu entry allows one to save the 'As Text/Mini-@{"icons" LINK "Icons"}/Icons', the 
sort order and the mask settings of the current directory window; they are 
saved to a file 'THING.IDX' within this directory. If one opens this 
directory again at some future time then the saved settings will be 
adopted and will also apply to all lower-lying directories -- so long as 
they haven't had their own settings saved in them separately.

The use of a file for this purpose has the advantage that the display 
options saved in this way will be included if the directory is copied or 
moved, and can also be passed on to others, say in an archive.

@box 1 75 4 0

@remark 32x32x2
@image "ictip.img" 2
      To get rid of the saved display options it's enough to simply 
      delete the file 'THING.IDX' in the relevant directory.



@endnode

## ------------------------------------------------------------------------

@node %mnwin "Window - Cycle"
@toc "Menu commands"
@autorefoff
Window - Cycle                                                        Thing
@line 1 75 0 0 7
@autorefon

This option remains unselectable (greyed out) unless more than one
window is open. Each window is topped (made active) in turn.

Windows of other applications registered via AV_ACCWINDOPEN message are
also taken into account (the applications will get a WM_TOPPED message).
@endnode

## ------------------------------------------------------------------------

@node %mcwin "Window - Close
@toc "Menu commands"
@autorefoff
Window - Close                                                        Thing
@line 1 75 0 0 7
@autorefon

This option remains unselectable (greyed out) unless at least one window is
open. The active window is closed.
@endnode

## ------------------------------------------------------------------------

@node %mcawin "Window - Close All"
@toc "Menu commands"
@autorefoff
Window - Close All                                                    Thing
@line 1 75 0 0 7
@autorefon

This option remains unselectable (greyed out) unless at least one
window is open. All open windows are closed.

Windows of other applications registered via AV_ACCWINDOPEN message are
also affected (the applications will get a WM_CLOSED message).
@endnode

## ------------------------------------------------------------------------

@node %mdwin "Window - Duplicate"
@toc "Menu commands"
@autorefoff
Window - Duplicate                                                    Thing
@line 1 75 0 0 7
@autorefon

When a directory window is active, you can create a second one containing 
the same folder. This may be useful, when copying or moving files within 
one folder wich contains many objects and not be displayed in one window.

@endnode

## ------------------------------------------------------------------------

@node %mappl "Extra - Applications"
@toc "Menu commands"
@autorefoff
Extra - Applications                                                  Thing
@line 1 75 0 0 7
@autorefon

If an individual program is selected, you can use this function to 
register the selected program as an application or to change the 
properties of the registered application.

If none or more objects are selected, or if the selected object is not 
a program, you will see an overview of all previously registered 
applications.

  @{"Dialog 'Applications'" link %dapinf}

Otherwise, the selected program may be registered as an application, or 
you can change the current settings for the specified program.

@endnode

## ------------------------------------------------------------------------

@node %dapinf "Extra - Applications (List of applications)"
@toc "Menu commands"
@autorefoff
Extra - Applications (List of applications)                           Thing
@line 1 75 0 0 7
@autorefon

The 'Applications' dialog appears if the 'Applications...' option in the 
'Extra' menu is selected without first selecting a single program, or 
@box 54 6 1
if the query when registering for a program was answered with no.

@box 1 4 1
 OK : Exits the dialog.

@box 1 5 1
 New : Lets you install a new application.

@box 1 6 1
 Edit : Lets you change the settings for the selected application. 
 
@box 1 8 1
 Remove : Removes the selected application.
 
@endnode

## ------------------------------------------------------------------------

@node %map0 "Extra - Applications... (General)"
@toc "Menu commands"
@autorefoff
Extra - Applications... (General)                                     Thing
@line 1 75 0 0 7
@autorefon

All the general settings are defined in this page -- such as label, 
program file etc.

@{B}Title:@{b} A unique title. This title is also used as a label for 
  icons on the desktop and in groups. If no title is specified, the 
  program file name is used as the title.

@{B}Shortcut:@{b} Here you can select a shortcut that can be used to 
  start the application. In contrast to starting via a function key, 
  the current selection can optionally be passed to the application 
  as a parameter.

@{B}use current selection:@{b} If a shortcut is defined for the 
  application, this option specifies that when the shortcut is started,
  the current selection is also passed to the program as a parameter .

@{B}Program:@{b} Full path/filename of the program.

@{B}Parameter:@{b} Command line parameters that should be passed to the 
  program when it starts. See the tip below about the use of placeholders 
  and dollar characters in this field.

@{B}Start directory:@{b} Here you specify which directory the program 
  finds as the current directory when it starts:

   ˘ Application: The same folder as the installed program. Use this option 
    for programs which can only find configuration and similar files from 
    the same directory they were launched from.

   ˘ Window: The active window is set as the start directory -- even if
    the program is launched by opening an object in a background desktop 
    window.

   ˘ File: The directory of a file passed to the program is used as 
    the start directory. If more than one file is passed to the program 
    (for example via a desktop Drag&Drop operation onto the program 
    icon) the start directory of the last passed file is set as the 
    start directory.

@{B}Pass always:@{b} If this option is active (crossed) the parameters are passed 
  even if the program concerned is already running.


      From Version 1.25 onwards Thing also offers placeholders for the 
      command line parameters, which are then replaced at the start of 
      the program with those for the files to be passed:

      $1: Represents the first file
      $2: Represents the second file, etc.
      $1-: Represents the first and all following files
      $-2: Represents all files up to and including the second
      $1-3: Represents files one to three
      $(x): x can take one of the above forms; this special placeholder
            is needed to prevent ambiguities
            (@{0I}Example:@{0} $(2)- is the second file followed by a minus sign,
            while $2- means all files from the second on)
      $$: The dollar character itself

      As soon as placeholders are used (which also includes command lines
      with '$$', as single dollar characters now have to be doubled up to 
      prevent ambiguities), Thing only passes those files that have been 
      referenced by the command line. From this it follows that an old 
      command line '$view' must now be replaced with '$$view $1-' to have 
      the same effect.
	
@endnode

## ------------------------------------------------------------------------

@node %map1 "Extra - Applications... (Files)"
@toc "Menu commands"
@autorefoff
Extra - Applications... (Files)                                       Thing
@line 1 75 0 0 7
@autorefon

In this page the file-types each installed application recognises are set. 
Wildcard entries are allowed (even '*' for 'all files'). Multiple masks 
can be entered using a comma ',' without additional space characters as a 
separator.

@{0B}Is used to Open:@{0} Files which match a mask entered in this line are passed 
  to the application if they are double-clicked from the @{"desktop" LINK "Desktop"} or opened 
  via the 'Open' function of the 'File' menu. Normally files which are 
  generated by the application are entered here (for example *.TXT for a 
  text editor or *.GEM for a vector graphics program).
 
@{0B}Use Drag&Drop:@{0} When active (crossed) files can be opened by Drag&Dropping 
  objects to the specified files. For more details refer to:
   @{"Installing a shell" LINK "Shells"}

  If no application is installed to open a file-type, the masks in the 
  'Is used to Show' line are examined to look for a suitable alternative. 

@{0B}Is used to Show:@{0} File-types to be passed to the application if they are
    Control  double-clicked from the @{"desktop" LINK "Desktop"} or opened via the 'File' > 
    'Show...' option, or when opening a file for which no application is 
    installed to open them.
 
@{0B}Is used to Print:@{0} File-types that are to be printed by the installed 
  application (for example via the 'Print...' option in the 'File' menu).

Here's a few examples:

  ˘ With a universal display program (e.g. 1ST Guide or Look'n See) one 
    can enter, say, '*' for 'Is used to Show' (@{0U}not 'Is used to Open'!@{0}).
    All files for which no suitable application is installed to open or 
    show them are then passed by Thing to this display program. If one 
    enters '*' for 'Is used to Open', incidentally, this has the effect 
    that all executable programs are also passed to installed application, 
    which is not normally a sensible thing to do!

  ˘ A text editor is installed to 'Open' for example '*.txt,*.doc'.
    Thing calls this text editor whenever a file with the ending 'TXT', 
    'txt', 'DOC' or 'doc' is to be opened -- i.e. edited.

  ˘ An image viewing program is installed to 'Show' for example '*.gif'. 
    Thing calls the viewer whenever a file with the ending 'GIF' or 'gif' 
    is viewed. Or a program for showing TeX's DVI files on screen can be 
    installed by entering '*.dvi' here, for instance.

  ˘ A universal print program (for example IdeaList) can be installed to 
    print everything by adding '*' to the 'Print' line. Thing will always 
    call IdeaList to print @{0I}any@{0} file, because '*' means 'all files' (but 
    note that IdeaList cannot print images!).

From the examples it should be clear that wildcards are not case sensitive, 
i.e. '*.txt', '*.Txt' and '*.TXT' are handled exactly the same.


@endnode

## ------------------------------------------------------------------------

@node %map2 "Extra - Applications... (Options)"
@toc "Menu commands"
@autorefoff
Extra - Applications... (Options)                                     Thing
@line 1 75 0 0 7
@autorefon

This page allows each program to be individually configured to suit your 
working environment:

@{B}Auto-start on booting:@{b} The application is started automatically on
  launching Thing (normally immediately after booting the system).

@{B}Ask for parameters on starting programs:@{b} If this option is set
  the program asks for command line parameters if it is started 'directly' 
  without passing the file or pathname as parameters (for example via 
  Drag&Drop on the program icon, or for Opening/Showing/Printing a file 
  with an appropriate the program).
  
@{B}Understands@{"VA_START" ignore}:@{b} If this option is set Thing uses
  VA_START messages for passing parameters between currently active GEM
  applications or accessories.
  When inactive, accessories are sent the AC_OPEN message, while programs 
  will always undergo multiple starts (following a query dialog).
  
  TOS programs (TOS, TTP) ignore this option as they cannot react to AES
  messages.
  
@{B}Unload Thing from memory before starting programs:@{b} Before starting the 
  program Thing is removed from memory, freeing up extra memory that is 
  then free for the program itself to use, and the program is started by 
  the small ThingRun utility; this remains memory resident ready to take 
  over and reload Thing on exiting the program.

  This option is now also available under multitasking OSs. However, 
  problems are likely to arise with the AV Protocol, as the AV-server is 
  suddenly no longer active and with MultiTOS etc. can quite easily have a 
  different application-ID after a 'revival', causing AV clients to send 
  their messages to the wrong program.
 
  In addition, under MultiTOS, N.AES prior to version 1.1.7, Geneva etc. 
  Thing can no longer be started as a system shell, which -- depending on 
  the OS -- can result in more or less visible redraw errors, although 
  this has no negative effects on the actual operation.

@{B}Execute in Single mode:@{b} This option starts programs in Single mode under 
  MagiC. This mode can also be used for programs which output directly to 
  the screen and not into a GEM window. As a side-effect, Thing is 
  completely removed from memory before starting the program, which frees 
  up the maximum memory. However, desk accessories are 'frozen out' in 
  Single mode.

  This option is only effective if Thing is installed as a shell under 
  MagiC (using the #_SHL entry in MAGX.INF).

 @{B}Run in Console window, if necessary:@{b} If this option is active (crossed) 
  TTP/TOS programs can be executed in a @{"Console window" LINK "%EinfÅhrungCON"} (similar to Gemini 
  with Ease). The Thing Console window, called TOS2GEM, programmed by 
  Thomas Binder, must be installed for this.

  This option is ignored by GEM applications and desk accessories.

@{B}Wait for keypress:@{b} If this option is active (crossed) Thing waits for
  a keypress after exiting TOS/TTP programs before the Console window is
  closed, or before the desktop is set up again.

  This option is ignored by GEM applications and desk accessories.

@{B}Memory limit:@{b} Here one can specify the maximum amount memory in kilobytes 
  a program may occupy, including all memory blocks allocated at run-time. 
  This setting is effective under MultiTOS, N.AES and MagiC 4 onwards.

  Memory limitation is sensible above all for older programs that try to 
  grab all available memory (First Word Plus etc.) as they are made to 
  believe that less free memory is available -- namely that specified here 
  -- so that they cannot allocate more than this.
  
@endnode

## ------------------------------------------------------------------------

@node %map3 "Extra - Applications... (Environment)"
@toc "Menu commands"
@autorefoff
Extra - Applications... (Environment)                                 Thing
@line 1 75 0 0 7
@autorefon

Some programs evaluate @{"environmental variables" LINK "Environmental variables"} on starting. One possibility 
to set such variables is to add additional entries in MAGX.INF (#_ENV), 
MINT.CNF, GEM.CNF (setenv) or one of the environment setters available for 
Single-TOS.

Thing offers the option of adding a 'local' environment for individual 
applications. Using this method the 'global' variables present are 
supplemented by the 'local' entries. One specific example of this would be 
a TOS shell or DVI viewer (specifying the TeX directories etc.).

Every entry must take the form <variable>=<value>
@{I}For example:@{i} TEX_OUTPUTS=G:\TEX\OUTPUTS\

Thing does @{I}not@{i} check entries for correct syntax, so it's up to you to 
ensure entries are meaningful!

Obviously, Thing will only use the local environment if '@{B}Use environment@{b}' 
is active (crossed). The remaining entries here should need no explanation.


@{U}Notes for MagiC users@{u}

Unfortunately under MagiC!2 a separate environment can only be used 
for TOS/TTP programs that are executed via the Thing @{"Console window" LINK "%EinfÅhrungCON"}.
For programs running in parallel this is not possible for technical 
reasons, as MagiC!2 does not yet support the required operating system 
call.

In Single mode it is generally not possible to utilise a local environment 
because Thing must be quit before the program is started.


@{U}Notes for MultiTOS users@{u}

For technical reasons transmission of local environments only seems to 
work with GEM applications. TOS/TTP programs started in parallel from 
MINIWIN.APP @{I}always@{i} seem to receive the global environment -- this happens 
with both AES 4.0 and AES 4.1.


Incidentally: Under MagiC!>=3 everything works OK -- even if the TOS/TTP 
programs are started via VT52.PRG...

@{U}Notes for Single-TOS users@{u}

Under Single-TOS a local environment is only available if Thing is not 
unloaded at program starts (remains memory resident), or if TOS/TTP 
programs are not executed via TOSWIN.ACC (under MiNT).


      If a variable defined in a local environment already exists in the 
      global one, it will not be overwritten by Thing but will be present 
      twice. But as Thing saves the local variables at the start of the 
      new environment they will normally take priority -- unless a program 
      searches through its @{"environmental variables" LINK "Environmental variables"} from the end to the 
      start, though this is virtually unheard of.

@endnode

## ------------------------------------------------------------------------

@node %mfunc "Extra - Function keys/Tools..."
@toc "Menu commands"
@autorefoff
Extra - Function keys/Tools...                                        Thing
@line 1 75 0 0 7
@autorefon

This dialog offers separate pages to assign Function keys alone and in 
combination with  Shift ,  Control  or  Alternate , as well as allocating 
entries in the 'Tools' menu.

Since version 0.40 there are various dialogs (Info about file, Info
via application etc.) also a pop-up menu with which the respective file,
a function key can be assigned to the program etc.

The assignment of the keys is evaluated as follows:

If only a file name is specified, the specified file is opened at the press 
of a key. Applications registered for this will of course be taken into 
account.

If the file is a program, the specified program will of course be started. 
Optionally, any command line parameters can also be specified.

If a path name is specified (terminated with a backslash '\'), Thing 
opens a new directory window for this path when pressed.
Optionally, a file mask can also be specified after the path.

By double-clicking on the respective input field, you can select the path 
or file from a file selector.

Here's a few examples:

  @{U}E:\TEXTS\LETTER.DOC@{u}
    Opens the file 'LETTER.DOC' in the 'E:\TEXTS\' directory.

  @{U}C:\AUTO\@{u}
    Opens the 'AUTO' folder on drive 'C:' with the file mask '*'.

  @{U}C:\ *.ACC@{u}
    Opens the 'C:\' directory with the file mask '*.ACC'

  @{U}D:\TOOLS\LHARC.TTP -a -r E:\WORK\*.* H:\WORK@{u}
    Starts the 'LHARC.TTP' program in the 'D:\TOOLS' directory with
    the command line '-a -r E:\WORK\*.* H:\WORK'.

@{U}Tool menu entries@{u}

Entries in the 'Menu 'Tools'' page are made in the same way as for Function 
keys, with the optional addition of a text description for the drop-down 
menu which may contain up to 16 characters, using the '|' character as a 
separator.

@{I}Example:@{i}

    Entering:  @{U}ST-Guide|C:\ST-GUIDE.ACC@{u}
    will start ST-GUIDE.ACC from the root of C: when the 'ST-Guide' legend 
    in the 'Tools' menu is clicked on.
 
Double-clicking on the line and selecting the desired program from the 
file selector automatically enters the program name in the text portion 
(before the '|').

The label is limited to a maximum of 16 characters. The same rule apply
for the function key assignment.

@{I}Note:@{i}Paths that exceed the field lenght, can give problems in 
  calling the desired application!


@endnode
 
## ------------------------------------------------------------------------

@node %mconf "Extra - Configuration..."
@toc "Menu commands"
@autorefoff
Extra - Configuration...                                              Thing
@line 1 75 0 0 7
@autorefon

This dialog for configuring Thing is divided into five pages that look 
like tabbed card index separators:

  @{"Desktop" link %mcf0}
  @{"Window 1" link %mcf1}
  @{"Window 2" LINK "%mcf5"} 
  @{"System" link %mcf2}
  @{"Copying" link %mcf3}
  @{"TOS2GEM" link %mcf4}

If the option 'Save automatically' is set, Thing will automatically
@box 49 4 1
save the default settings after confirming with  OK.

@endnode

## ------------------------------------------------------------------------

@node %mcf0 "Extra - Configuration... (Desktop)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (Desktop)                                    Thing
@line 1 75 0 0 7
@autorefon

This page determines the behaviour of the desktop background and the 
@{"dialog boxes" LINK "%EinfÅhrungD"}:

@{B}3D-effect:@{b} Globally toggles the 3D style dialog buttons on/off. 
  Buttons are updated immediately -- including any open dialogs.

@{B}Snap icons to grid:@{b} When active, desktop icons are positioned on a 
  16x16 pixel grid.

@{B}Double-click simulated by right mouse click:@{b} When active (crossed) 
  a single right mouse click on an object is handled as a left mouse 
  double-click.

  After activating this option the context menus can only be called up 
  with  Control  + left-click! However this does not apply to the context 
  menus for directory windows and the desktop, which can continue to be 
  called up with the right mouse button (but of course do not have to be, 
  if one prefers uniform operation).

@{B}Desktop colour:@{b} Set the desktop background colour via the popup.

@{B}Desktop pattern:@{b} Set the desktop background pattern via the popup.

@{B}Background image:@{b} If an image module named THINGIMG.OVL is present
  inside Thing's start directory, by clicking on the 'File >' button the
  file selector is opened to select an image to be used as desktop 
  background; this may be either centred or tiled to fill the screen. 
  The bundled module can load (X)IMG files whose colour-depth is the same
  or smaller than the current screen resolution. Several options are 
  available:

  @{B}Use image:@{b} The background image is displayed on the desktop if this
    option is active (crossed).
  @{B}Centre image:@{b} A single copy of the image is displayed centred on 
    screen if this option is active (crossed). If it's not, the desktop 
    background is 'tiled' (filled with copies) with the selected image; 
    this uses the same amount of memory, but if the tiles are too small 
    then the drawing of the background can take some time (in such cases 
    one should partly tile the image manually with a suitable painting 
    program and re-save it).
  @{B}Transparent:@{b} With this option active (crossed) Thing lets the image 
    'show through' the background pattern. With coloured images this is 
    likely to give rise to some colour errors.
  @{B}Use image palette:@{b} The module will use the image palette, if present, 
    to display the image if this option is active.

 
  Third party image modules are available that support additional file formats
  such as PNG, JPG or GIF and much more. 
  
  Under FreeMiNT/MyAES Thing desktop background images are loaded via MyAES
  that basically acts as image module. Supported formats are JPG and PNG.
  When required, images are automatically dithered and remapped. 
  This feature can be disabled with an environment variable in MYAES.CNF:
  
  export AES_NO_BACKGROUND=TRUE (Any value is accepted),
  
  and the THINGIMG.OVL is used again to load desktop background images.  


@endnode

## ------------------------------------------------------------------------

@node %mcf1 "Extra - Configuration... (Window 1)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (Window 1)                                   Thing
@line 1 75 0 0 7
@autorefon

This page sets the first group of window options:

@{B}Ignore open window positions in saved data:@{b} Thing normally remembers which 
  windows are open, along with their positions, and restores them on the 
  desktop when starting a new session. Set this option to instruct Thing 
  to ignore any open windows -- only the window positions and sizes are 
  still stored, but not which ones are currently open.

@{B}Allow background selection with left mouse button:@{b} If this option is set,
  one can select objects even in background directory windows. If you'd 
  like to top the background window, either right mouse click inside the 
  window area or left mouse click anywhere in the window region where 
  there are no objects.
  
@{B}Closer always closes window:@{b} Normally clicking the 'Closer' icon steps
  up the directory tree one level to display the parent directory. Because 
  Thing windows include a parent icon, with this option active the 'Closer' 
  icon is re-assigned to always close the window -- even when displaying 
  sub-directories.
  
@{B}Suppress horizontal scroll bar in directory windows:@{b} Using later TOS
  versions, MagiC!3 and up, MultiTOS or utilities such as WINX, icons 
  outside the available horizontal window width are dynamically 
  repositioned to fit inside the window, so horizontal sliders in 
  directory windows are redundant and waste screen space. Set this option 
  to display directories and group windows without horizontal sliders.

@{B}Allow 'relative' folders:@{b} This option determines whether 'relative'
  opening of directory windows is possible. A '@{"relative" LINK "%DesktopOFLD" 14}' opening takes 
  place if a folder is opened from desktop icons or from a group or when 
  holding down the Alternate key.

  The directory window title then contains only the name of the folder 
  (e.g. 'TEXTS\') instead of the full path, and clicking the 'Closer' icon 
  completely closes the window instead of changing first to the parent 
  directory:

@limage dlpathwi.img 4

@{0B}Cursor auto-selects objects:@{0} If this option is selected (crossed) the
  object lying under the @{"cursor" LINK "%EinfÅhrungCRSR"} is automatically selected when the cursor
  is switched on or moved. Otherwise objects can be selected and deselected 
  either with the  Space  bar (if no auto-locator has been set) or with 
   Shift  +  Insert .

@{B}Auto-locator with '@{"filename completion" LINK "%EinfÅhrungAL" 15}':@{b} If this option is selected
  (crossed) the @{"auto-locator" LINK "%EinfÅhrungAL"} in directory windows always has its action 
  extended and the  Backspace  key always clears the whole auto-locator 
  field -- not just the last character input.
  
@{B}Update windows automatically on program termination:@{b} If this option is
  selected all open windows are automatically updated after exiting a 
  program and returning to the desktop even when using a multitasking 
  operating system.

@{B}Show hidden files (TOS and Unix):@{b} If this option is set (crossed) files
  with the 'hidden' attribute flag set or with a point as the first 
  character of their name are also displayed in directory windows. 
  Otherwise they are only taken into account when moving/copying folders 
  but do not appear in directory windows.

@{B}Text filnames in columns (instead of rows):@{b} If this option is set 
  (crossed) all objects in text mode are displayed in columns:
 
    @{0I}Option: Not active@{0}  1  2  3    @{0I}Active@{0}  1  4  7 
                         4  5  6             2  5  8
                         7  8                3  6

@{B}Right justify file extenders '8        .3':@{b} If this option is set
  (crossed) Thing displays the contents of TOS file systems in the form:
  'NAME    .EXT' instead of 'NAME.EXT' -- i.e. all the file extenders 
  are right justified, just like on the Atari desktop.
  Other file systems that permit longer filenames (e.g. MinixFS, MagiC!Mac
  etc.) remain unaffected by this setting.
  
@{B}Suppress mini-icons in text mode:@{b} If this option is set (crossed) the
  opening of directory windows can be considerably accelerated because the 
  icon assignments need not be evaluated. These assignments are then only 
  evaluated when changing from the text to the icon display mode and 
  retained until the directory is re-read or changed.

  @{0I}Note:@{0} Group windows are not affected by this setting!
 
  If the mini-icons are not assigned then the small characters for easier 
  recognition of the file-type as well as the display of some entries in 
  different colours are dispensed with.

@{B}Automatically adjust size:@{b} If this option is set, directory windows
  will automatically be resized to 'optimal size' if necessary.

@{B}Real-time scrolling:@{b} Sets the real-time window scrolling speed; the
  higher the value the faster the window contents are scrolled. The ratio 
  sets the number of pixels scrolled for each pixel moved by the mouse 
  pointer.
  
@endnode

## ------------------------------------------------------------------------

@node "%mcf5" "Extra - Configuration... (Window 2)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (Window 2)                                   Thing
@line 1 75 0 0 7
@autorefon

This page sets the second group of window options:

@{B}Case-sensitive sorting in directory windows:@{b} If this option is active 
  (crossed) directories will be sorted in an order paying respect to upper 
  case (capitals) and lower case (small) characters, such as 'ABCabc' 
  instead of 'AaBbCc' for instance.

@{B}Case-sensitive auto-locator:@{b} If this option is active (crossed), Thing 
  differentiates by case when selecting files via the auto-locator, as 
  long as the file system in use is not restricted to capitals only. So 
  typing in 'a' only selects those files that start with a small 'a', 
  whereas with this option switched off all those having capital 'A' as 
  the first letter will be selected as well.

@{B}Automatic placement of directory windows:@{b} Normally Thing opens directory
  windows in the position they occupied before they were last closed. With 
  this option one can make Thing look for free space on the desktop instead 
  so that no other windows (not just those of Thing) will be covered. If
  there is no such space, Thing's behaviour will be determined by the 
  settings of the 'Place directory windows interactively' option.

  In addition, during automatic placement Thing respects the margins and 
  separations described further below.

@{B}Place directory windows interactively:@{b} With this option active, if the
  directory window to be opened covers other windows of Thing or one of
  a parallel-running application, a movable ghost outline frame appears 
  that allows the position of the window to be set manually. Positioning 
  of the frame may be carried out with the mouse or with the cursor keys
@box 7 8 1 0
  and  Return .
 
  Together with 'Automatic placement of directory windows', manual 
  positioning is only needed if no free space could be found for the new 
  window.
 
@{B}Automatically fit window in X-direction:@{b} This option has to be active 
  (crossed) if directory windows are to be wide enough always to display 
  all the files (providing this is possible).

@{B}Automatically fit window in Y-direction:@{b} Similar to the previous entry,
  except that the window's height is adapted to the contents.
 
  If fitting for both the X- and Y- direction is activated then this 
  corresponds to the behaviour of Thing 1.0x when using the 'Window 
  re-sizes to display all objects' option.
 
  The maximum height and/or width of the window also respects the margins 
  described below.
 
@{B}Minimum separation for automatic placement:
Left, Right, Above, Below:@{b} Here you can set the distance in pixels from
  the edges of the desktop's working area that Thing respects during 
  automatic placement of directory windows and automatic fitting. So if 
  one enters '128' for 'Left', for instance, Thing will open each 
  directory window at least 128 pixels from the left edge of the screen.
 
  These values are useful if one wants to prevent new directory windows 
  covering the icons or an application menu bar such as Appline or 
  MultiSTrip.
 
@{B}Horizontal, Vertical:@{b} These two values specify the minimum separation 
  (in pixels) from already opened windows Thing should use when placing 
  windows automatically. This can prevent adjacent windows appearing to 
  'stick' to each other, which may look a little peculiar.
 
  @{I}Important:@{i} Unless 'Automatic placement of directory windows' is active,
  (crossed) the values entered into the six edit fields have no effect on 
  the opening of windows!

@endnode

## ------------------------------------------------------------------------

@node %mcf2 "Extra - Configuration... (System)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (System)                                     Thing
@line 1 75 0 0 7
@autorefon

This page sets some Thing start options and the optional external Find, 
Format and some other programs.

@{B}Unload Thing on starting programs (overlay):@{b} If this is set (crossed) 
  then before starting a program Thing is removed from memory, freeing up 
  extra memory for the program itself to use, and the program is started by 
  the small ThingRun utility;this remains memory resident, ready to take 
  over and reload Thing on exiting the program.

  This option is now also available under multitasking OSs. However, 
  problems are likely to arise with the AV Protocol as the AV-server is 
  suddenly no longer active and with MultiTOS etc. can quite easily have a 
  different application-ID after a 'revival', causing AV clients to send 
  their messages to the wrong program.
 
  In addition, under MultiTOS, N.AES prior to version 1.1.7, Geneva etc. 
  Thing can no longer be started as a system shell, which -- depending on 
  the OS -- can result in more or less visible redraw errors, although 
  this has no negative effects on the actual operation.

@{B}Wait for keypress after TOS/TTP programs:@{b} If this option is set (crossed)
  Thing waits for a keypress after exiting a TOS/TTP program i.e. before 
  the @{"Console window" LINK "%EinfÅhrungCON"} is closed, or before the desktop is set up again.
 
  Note! This option does @{I}not@{i} affect behaviour under VT52, MINIWIN or
  TOSWIN.

@{B}Accept *.ACX, *.PRX as executable programs:@{b} If this option is set (crossed) 
  disabled files with the extender 'ACX' are treated as desk accessories, 
  and similarly files with a 'PRX' file extender are treated as GEM 
  programs. If eCPX support is active (crossed) -- see next option -- then 
  files with the extenders 'CPZ' and 'EPZ' are handled as if these were 
  CPX and EPX respectively.

@{B}eCPX support:@{b} With this option set, if Freedom 2 or Space by Christian 
  Grunenberg is installed then CPX modules ('*.CPX' and '*.EPX') can be 
  started as GEM applications in Thing (and even run in parallel under 
  Single-TOS -- even if the modules have to be loaded first!).
  
@{B}Ask before running or installing accessories as programs:@{b} Some, but not
  all, desk accessories can be run as programs. If this option is set 
  (crossed) Thing displays an alert before attempting to launch a desk
  accessory as a program. If this option is deselected (uncrossed) the 
  alert is not displayed and Thing will try to launch all accessories as 
  programs without asking first.
 
  This option also affects Thing's behaviour when an accessory is not 
  running yet but can be installed later under the OS in use.
 
 @{B}'Empty' VA_STARTS sent to applications as well:@{b} With this option active 
  (crossed), a running application that understands the AV Protocol will 
  receive a 'VA_START' message even if no parameters have been passed,
  perhaps because the user has double-clicked the program icon. However, 
  some programs (not desk accessories, which are therefore not affected by 
  this option) can not tolerate 'VA_START' messages without parameters and 
  crash, so one should perform some tests before switching on this option 
  permanently.

@{B}'Delete' using [Delete] key functions:@{b} If this option is set, objects 
  can be deleted using just the  Delete  key in addition to the safer
   Shift  +  Delete  key combination.

@{B}Windows bottomed before closing (MagiC fix):@{b} If this option is set, 
  Thing windows are bottomed (sent to back) before closing them, which 
  avoids a MagiC bug. For example, after calling the Thing font selector
  a different Thing window may be topped by MagiC (not by Thing!).
  Unfortunately in such special cases one can not avoid the menu bar not 
  being switched over even if no Thing window is active -- this is 
  definitely a MagiC problem, though this seems to have been fixed in 
  later versions.

@{B}External programs - Search:@{b} Select this button to call the file 
  selector to assign an external search program to be used when the 
  'Find...' entry in the 'File' menu is selected. To clear an existing 
  entry, clear the filename field in the file selector, then select  OK .
 
  There are various suitable search programs available. Thingfnd, FSearch
  and ParaFin all support the AV Protocol and can take  advantage of 
  Thing's advanced abilities as an AV-server. Somewhat more modern, 
  particularly with support for long filenames, than Finder by Holger
  Weets, which also supports the AV Protocol.

@{B}External programs - Format disk:@{b} Select this button to call the file 
  selector to select an external Format program to be used instead of
  Thing's built-in routines when the 'Format disk...' entry in the 'File' 
  menu is selected. To clear an existing entry clear the filename field 
  in the file selector, then select  OK  .
   @{"Using MagXDesk MGFORMAT.PRG" LINK "%F21"}

  If @{"Kobold" LINK "%EinfÅhrungK"} is set to handle format operations in the 'Copy' page, this 
  takes precedence over both the internal and any external formatting 
  program!
   @{"Using Kobold with Thing" LINK "%mcf3"} 
  
@endnode

## ------------------------------------------------------------------------

@node %mcf3 "Extra - Configuration... (Copying)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (Copying)                                    Thing
@line 1 75 0 0 7
@autorefon

This page sets up Thing's File Copy, Move and Delete operations and also 
includes options to allow the commercial external program @{"Kobold" LINK "%EinfÅhrungK"} to take 
over file operations under certain conditions.

@{0B}Confirm:@{0} Select which of the following actions display a safety alert: 
  Deletes, Copy/Moves, Overwrites (replace).

@{0B}Copy buffer:@{0} If a value is entered here it sets the maximum block size 
  in Kb in which a file may be copied/moved. Files larger than the value 
  set are copied/moved in multiple blocks as necessary. If this field is 
  blank Thing attempts to Copy/Move every file in a single Read/Write 
  operation but as a consequence cannot react to Thing window actions.

@{0B}Use Kobold V2.5 or higher:@{0} Sets the conditions under which Kobold takes 
  over file operations:

  ˘ @{0B}Only for 8+3 file systems:@{0} Kobold will not be used if one of the
    source or the destination file systems does not match the 8+3 rules of 
    a normal FAT drive, in other words uses long filenames. This option 
    is important for those using older Kobold versions that do not yet get 
    along with long filenames.

  ˘ @{0B}Disk formatting:@{0} Kobold is used to format floppy disks. This option 
    takes precedence over any external formatting program set in the 
    'System' page.

  ˘ @{0B}Copying from ... files or ... Kb:@{0} Kobold is used if at least 
    ... files or ... Kb are to be copied.

  ˘ @{0B}Deleting from ... files:@{0} Kobold is used if at least ... files are 
    to be deleted. A Kb setting is not required as it makes no difference
    to Kobold if 10 files totalling 100Kb or 10 totalling 5Mb are to be
    deleted. The time saved using Kobold is only significant when working 
    with lots of small files.

  ˘ @{0B}Program:@{0} Select this button to call the file selector to select the 
    Kobold (V2.5 or higher) path and filename. The path and filename is 
    required irrespective of whether Kobold is running as a program or 
    desk accessory!


      Unfortunately Kobold 3, in contrast to previous versions, no longer 
      seems to be able to copy files via drive U:. Drive U: can not even 
      be selected as a source or destination drive, even if the GEMDOS 
      mode is aactivated for this. I consider this a design weakness or 
      an error and will not offer any special options for this for the 
      time being.
	  
@endnode

## ------------------------------------------------------------------------

@node %mcf4 "Extra - Configuration... (TOS2GEM)"
@toc "Menu commands"
@autorefoff
Extra - Configuration... (TOS2GEM)                                    Thing
@line 1 75 0 0 7
@autorefon

This page sets all the options for @{"TOS2GEM" LINK "TOS2GEM.HYP"} - the Thing @{"Console window" LINK "%EinfÅhrungCON"} 
programmed by Thomas Binder.

@{B}Use TOS2GEM:@{b} If this option is set (crossed) and TOS2GEM is correctly 
  installed, TOS and TTP programs are run inside a TOS2GEM Console window. 
  If this option is switched off, other Console windows will be used with 
  MagiC (VT52) and MultiTOS (MINIWIN), which may be desirable to run 
  TOS/TTP programs in the background or in parallel with Thing.
   @{"Read more about Console windows now!" LINK "%EinfÅhrungCON"}.

@{B}Automatically close Console window at program termination:@{b} If this option 
  is set (crossed) Thing automatically closes the Console window on 
  exiting a TOS/TTP program so long as the Console window wasn't already 
  open and no errors (non-zero return code) were encountered.

@{B}History:@{b} Enter into the edit field the number of lines of scroll-back 
  output to be buffered. If this value is changed it only comes into effect 
  after the Console window is re-initialised -- and the previous contents 
  are lost!

@{B}Buffering:@{b} Buffering the @{"TOS2GEM" LINK "TOS2GEM.HYP"} output can considerably accelerate 
  display by outputting the characters in batches instead of character by 
  character. Three options are available (toggle):

    @{B}None:@{b} Disables output buffering.
 
    @{B}Size:@{b} Sets the number of characters to buffer before output starts 
      and is independent of the time interval between outputs.

    @{B}Time:@{b} Sets a fixed time interval between outputs (20ms - 999ms).

@{B}Colours:@{b} Sets the display of colours (including inverse text output). 
  Three options are available:

    @{B}None:@{b} The system defaults are used.

    @{B}VT52:@{b} The colour sequence is interpreted as for the 'original' hardware 
          colours i.e. depending on the graphic mode colour 1 can be black,
          sometimes red or (rarely) some other colour.
 
    @{B}VDI:@{b}  The colour sequence is taken from the VDI colour codes so white 
          is always 0, black is always 1 etc.

@{B}Window elements:@{b} The individual @{"Console window" LINK "%EinfÅhrungCON"} gadgets (components) can 
  be turned on and off by clicking the relevant area in the stylised 'mini 
  window'.

  Switching off the horizontal slider under MagiC or when using a utility 
  such as WINX etc. under Single-TOS, for instance, leaves more space in 
  the window.

@endnode

## ------------------------------------------------------------------------

@node %mdrive "Extra - Mount Devices"
@toc "Menu commands"
@autorefoff
Extra - Mount Devices                                                 Thing
@line 1 75 0 0 7
@autorefon

This function installs all available GEMDOS devices as icons on the 
@{"desktop" LINK "%DesktopA"}.

Any installed device icons no longer available when calling this function 
are removed from the desktop.

@endnode

## ------------------------------------------------------------------------

@node %mrez "Extra - Change Resolution..."
@toc "Menu commands"
@autorefoff
Extra - Change Resolution...                                          Thing
@line 1 75 0 0 7
@autorefon

This function allows Thing to change the current screen resolution.

Thing will use the program configured in the RSMASTER AES environment 
variable. Examples for FreeMiNT and MagiC:


 @{B}- MYAES.CNF:@{b} 
 
  export RSMASTER=C:\programs\yoprez\yoprez.prg


 @{B}- XAAES.CNF:@{b} 

  setenv RSMASTER C:\mint\setup\modes.prg


 @{B}- N_AES.CNF:@{b} 

  export RSMASTER=C:\N_AES\APPS\N_CHRES.PRG


 @{B}- MAGX.INF:@{b} 

  #_ENV RSMASTER=C:\GEMSYS\GEMDESK\CHGRES.PRG


In all cases, replace the path with the one of the screen selector tool
installed on your system.

@endnode

## ------------------------------------------------------------------------

@node %meicon "Extra - Edit Icon Assignments..."
@toc "Menu commands"
@autorefoff
Extra - Edit Icon Assignments...                                      Thing
@line 1 75 0 0 7
@autorefon

Select this function to open the @{"Thing Icon Manager" LINK "THINGICN.HYP"} (THINGICN.APP).

THINGICN.APP must reside in the Thing start directory, i.e. in the same 
folder as THING.APP.

@endnode

## ------------------------------------------------------------------------

@node %mlicon "Extra - Load Icons"
@toc "Menu commands"
@autorefoff
Extra - Load Icons                                                    Thing
@line 1 75 0 0 7
@autorefon

This function loads the files @{"ICONS.INF" LINK "%DateiformateIC"} and ICONS.RSC anew and displays 
the currently defined @{"icons" LINK "Icons"}. It's particularly useful after editing the 
icons in ICONS.RSC with a resource file editor.

@box 1 75 5

@image icwarn.img 2
      If, for any reason, Thing cannot load ICONS.RSC Thing will exit! 
      For this reason we recommend you only call this function after 
      using the 'Save Configuration' function...


@endnode

## ------------------------------------------------------------------------

@node "%mautosave" "Extra - Auto-save Config"
@toc "Menu commands"
@autorefoff
Extra - Auto-save Configuration                                       Thing
@line 1 75 0 0 7
@autorefon

This menu entry is a toggle option. If it is switched on (ticked) Thing 
will save the complete configuration settings before termination with 
'Quit' (or 'Shutdown'). The resolution-dependent data will always be 
written to the file matching the current resolution, so that any 
'fallback' file that may have been used during loading will be ignored.

If on quitting Thing one holds down only one of the  Shift  keys (i.e. 
not together with another 'special' non-character key) then Thing will 
not save the configuration settings automatically.

@endnode
## ------------------------------------------------------------------------


@node %msconf "Extra - Save Configuration"
@toc "Menu commands"
@autorefoff
Extra - Save Configuration                                            Thing
@line 1 75 0 0 7
@autorefon

This saves all the configuration settings, including:

  - Icons on the desktop
  - Installed applications
  - Settings from the Configuration dialog pages
  - If applicable, positions and paths of opened directory windows 
    (also  @{"Extra - Configuration... (Window 1)" LINK "%mcf1"}).
   
Before saving one can choose a new path, which can, if desired, then 
remain valid as the saving path until Thing is quit.

If the resolution-independent configuration information was loaded from a 
@{"'fallback' file" LINK "%mlconf" 6}, a choice will be offered during saving to store them back 
to this file. In this way one can, for instance, store the settings in 
640x480x2 and continue using them later in higher 2-colour resolutions 
without having to create additional files which would have to be looked 
after separately.


      When saving a 'fallback' file one should not, of course, have 
      chosen a @{"desktop" LINK "Desktop"} picture that does not fit the colour-depth of the 
      'fallback' file. In addition, no @{"icons" LINK "Icons"} may be positioned outside 
      the area of the desktop of the 'fallback' file because these would 
      no longer be visible in lower resolutions.
      
@endnode

## ------------------------------------------------------------------------

@node %mlconf "Extra - Load Configuration"
@toc "Menu commands"
@autorefoff
Extra - Load Configuration                                            Thing
@line 1 75 0 0 7
@autorefon

Use this option to restore the original Thing configuration that was 
valid when Thing was started.

If no INF file can be found to match the current resolution/colour-depth, 
Thing will look automatically for a file that is intended for a lower 
resolution. For this the resolution takes priority over the colour-depth.

@{0I}Example:@{0}
Thing is started in 640x480x2 but no 06400480.I01 file exists as yet. 
However Thing finds 06400400.I01, which actually matches a resolution of 
640x400x2; as this can also be used for higher resolutions without 
problems Thing loads its contents as a so-called 'fallback' file and can 
later save configuration details to this.

@endnode

## ------------------------------------------------------------------------

@node %mcon "Extra - Console Window"
@toc "Menu commands"
@autorefoff
Extra - Console Window                                                Thing
@line 1 75 0 0 7
@autorefon

Select this function to open the @{"Console window" LINK "%EinfÅhrungCON"}, if @{"TOS2GEM" LINK "TOS2GEM.HYP"} has been 
correctly installed and not being used by another application at the time.

@endnode

## ------------------------------------------------------------------------

@node %dren "Rename file/folder"
@prev %dren
@next %dren
@toc %I
@autorefoff
Rename file/folder                                                    Thing
@line 1 75 0 0 7
@autorefon

This dialog appears if a file/folder is to be renamed. After inputting 
a new name Thing checks again if a file/folder with this name already 
exists in the path, and if necessary re-displays the dialog.

@box 1 4 1
 OK : The file/folder is copied. If the dialog is displayed because the 
  destination object already exists, Thing examines the new object name 
  and, if necessary, re-displays the dialog. If the old name is adopted 
  with  OK  then an already existing file with this name will be deleted, 
  an already existing folder will be opened.

@box 1 5 1
 All : All remaining files/folders are copied without further queries, 
 i.e. already existing files will be overwritten and folders opened.
 
@box 1 6 1
 Skip : The current file/folder is skipped and remains unchanged.

@box 1 8 1
 Cancel : The operation is aborted.
 
@endnode

## ------------------------------------------------------------------------
## ------------------------------------------------------------------------

@node "%dselapp" "Select application"
@next "%dselapp"
@prev "%dselapp"
Select application                                                    Thing
@line 1 75 0 0 7

Several applications have been installed for opening, displaying or 
printing the selected file. For this reason Thing asks which program 
the file should be passed to. The relevant program can be selected either 
@box 26 8 1 0
with the cursor keys and  Return , or also with a double-click or a 
@box 18 4 1 0
single-click and  OK .

@box 1 8 1 0
 Cancel  breaks off the whole process.

For technical reasons this dialog is a modal one -- i.e. it must be closed 
before another action can be performed.

@endnode


@node "%dparam" "Ask for parameters"
@next "%dparam"
@prev "%dparam"
Ask for parameters                                                    Thing
@line 1 75 0 0 7

This dialog appears when a TTP or GTP program has been started, or an 
installed application for which the 'Ask for parameters before starting 
program' option is set.

The parameters input are passed directly to the program as a command line 
-- to already running GEM applications or desk accessories with VA_START 
if appropriate.

By double-clicking on the entry field one can also insert file or folder 
names via the file selector.

@box 1 8 1 0
 Cancel  breaks off the whole process.
 
For technical reasons this dialog is a modal one -- i.e. it must be 
closed before another action can be performed.

@endnode


@node "%dcopy" "Copy/Move/Link objects"
@next "%dcopy"
@prev "%dcopy"
@xref "%symlink" "What are symbolic links?"
Copy/Move/Link objects                                                Thing
@line 1 75 0 0 7

Here the impending Copy process can be confirmed before Thing 'takes off', 
and the job is not passed on to @{"Kobold" LINK "%EinfÅhrungK"}. If the process is cancelled the 
source files remain selected (useful if one has made an error in selecting 
the destination directory -- one can simply repeat the Drag&Drop to the 
correct directory).

@{B}Copy:@{b} In this mode the selected source files are copied or moved to the 
  destination directory, depending on the further selections made in this 
  dialog.

@{B}Link ('Alias'):@{b} This mode create symbolic links of the selected sources in 
   the destination directory; this corresponds to using Drag&Drop while
@box 17 12 1 0
   holding down  left Shift . In this case 'Delete originals (Move)' is 
   greyed out (not selectable) as otherwise the newly created symbolic 
   links would be born as full orphans...

@{B}Delete originals (= Move):@{b} If this option is set, the files will be moved; 
@box 23 9 1 0
  this corresponds to  Control -Drag&Drop. Within the same drive the files 
  will be Moved simply by rewriting the path -- otherwise by copying and 
  subsequently deleting the originals (hence the name of the option). 
  Incidentally, Thing always Moves file by file -- i.e. each file is 
  deleted immediately after copying and not only when all files have been 
  copied!

@{B}Rename copies:@{b} The copies are renamed individually -- i.e. a new name has 
  to be entered at the destination for each file and each folder. This
@box 18 11 1 0
  corresponds to  Alternate -Drag&Drop.

@{B}Follow links:@{b} If the source objects contain symbolic links, then copies of 
  the objects will be created in the destination directory to which the 
  links point. So if one copies, say U:\a under MagiC to a different 
  directory, Thing will again create a symbolic link there to the same 
  destination if this option is set (crossed). Otherwise the directory A:\ 
  will be copied complete, i.e. the complete contents of the recently 
  inserted floppy disk. This option can also be set with Drag&Drop while 
@box 16 13 1 0
  holding down  right Shift  and in that case it prevents automatically the 
  starting of @{"Kobold" LINK "%EinfÅhrungK"}, since this does not support such a mode.

@box 1 75 11 0

@remark 32x32x2
@image "icwarn.img" 2
      Not all operating systems and also not all file systems permit the 
      creation or use of symbolic links. Since an absolutely certain check 
      of this capability can be achieved unfortunately only by some rather 
      dirty tricks, Thing always offers the creation of symbolic links if 
      this cannot be established via the info functions of the file system.
@box 54 4 1 0
      It may happen therefore that after clicking on  OK  one receives an 
      error message; as a rule this means that either the operating system 
      in use cannot use symbolic links at all, or that they are not 
      possible with the installed file system.

@endnode


@node "%ddelete" "Delete files"
@next "%ddelete"
@prev "%ddelete"
Delete files                                                          Thing
@line 1 75 0 0 7

Who'd have thought it ;-) Here one can confirm whether one really wants to 
delete the selected file/s or folder/s. This dialog does not appear if 
the job is passed on to @{"Kobold" LINK "%EinfÅhrungK"}.

@endnode


@node "%dwait" "Please wait"
@next "%dwait"
@prev "%dwait"
Copy/Delete files, Format disk                                        Thing
@line 1 75 0 0 7

While copying or deleting files as well as during formatting of floppy 
disks this dialog appears, in which one can see the progress of the 
operation.

@endnode


@node "%isel" "Info about current selection"
@next "%isel"
@prev "%isel"
Info about current selection                                          Thing
@line 1 75 0 0 7

This information is displayed if one has selected several objects in a 
directory and calls 'Show Info...'. Unlike the display in the status line 
the contents of selected folders is also taken into account here.

@box 6 9 1 0
With  Details  one can call up or alter the information for each individual 
folder/file in turn. This brings up a new dialog; one can advance to the 
@box 28 6 1 0
next object by clicking on  Next . Note that folders are not opened with 
this command.
 
@endnode
